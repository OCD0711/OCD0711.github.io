<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>OCD Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ocd0711.ml/"/>
  <updated>2019-07-03T14:15:20.346Z</updated>
  <id>https://ocd0711.ml/</id>
  
  <author>
    <name>OCD</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nrf51822_程序分析</title>
    <link href="https://ocd0711.ml/2019/05/20/nrf51822-%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/"/>
    <id>https://ocd0711.ml/2019/05/20/nrf51822-程序分析/</id>
    <published>2019-05-20T01:30:19.000Z</published>
    <updated>2019-07-03T14:15:20.346Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="硬件开发" scheme="https://ocd0711.ml/categories/%E7%A1%AC%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="nrf51822" scheme="https://ocd0711.ml/tags/nrf51822/"/>
    
  </entry>
  
  <entry>
    <title>使用回忆录</title>
    <link href="https://ocd0711.ml/2019/02/07/retrofit%E4%BD%BF%E7%94%A8%E5%9B%9E%E5%BF%86%E5%BD%95/"/>
    <id>https://ocd0711.ml/2019/02/07/retrofit使用回忆录/</id>
    <published>2019-02-07T12:16:31.000Z</published>
    <updated>2019-07-03T14:15:20.348Z</updated>
    
    <content type="html"><![CDATA[<h2 id="00-序言"><a href="#00-序言" class="headerlink" title="00 序言"></a>00 序言</h2><p>就是一篇之前学习 retrofit 使用中的过程小节…</p><hr><p>Retrofit 在项目使用中的流程: 创建 Bean 类 –&gt; 创建接口形式的 http 请求方法 –&gt; 通过 Retrofit.builder() 创建接口对象并调用 http 方法请求网络数据 –&gt; 在 RxJava 中 Observable (被观察者) 中异步处理请求结果</p><h2 id="01-Retrofit-HTTP-请求方法注解的字段说明"><a href="#01-Retrofit-HTTP-请求方法注解的字段说明" class="headerlink" title="01 Retrofit HTTP 请求方法注解的字段说明"></a>01 Retrofit HTTP 请求方法注解的字段说明</h2><hr><p>Retrofit 进行网络请求的 URL 分为两部分: BaseURL 和 relativeURL. BaseURL 需要以 “/” 结尾, 一般不需要变化直接定义即可(域名), 当然特殊的情况下, 比如后一次网络访问 URL 需要从前一次访问结果中获取相关参数, 那么就需要动态的操作 URL, 这种用法会在后面介绍; relativeURL 就是请求参数相关, 所以每个 request 方法都需要 http annotation 来提供请求的 relativeURL, Retrofit 内置的注视有五个: <code>GET, POST, PUT, DELETE, HEAD</code>. 这些注解在使用时涉及到哪些相关字段, 下面引用一张图</p><p><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNc79gy1fzy50n412uj30hn09e0so.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;00-序言&quot;&gt;&lt;a href=&quot;#00-序言&quot; class=&quot;headerlink&quot; title=&quot;00 序言&quot;&gt;&lt;/a&gt;00 序言&lt;/h2&gt;&lt;p&gt;就是一篇之前学习 retrofit 使用中的过程小节…&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Retrofit 在项目使用中的流
      
    
    </summary>
    
      <category term="java" scheme="https://ocd0711.ml/categories/java/"/>
    
    
      <category term="java" scheme="https://ocd0711.ml/tags/java/"/>
    
      <category term="android" scheme="https://ocd0711.ml/tags/android/"/>
    
      <category term="网络层" scheme="https://ocd0711.ml/tags/%E7%BD%91%E7%BB%9C%E5%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>解决mac下menuconfig报错的问题</title>
    <link href="https://ocd0711.ml/2019/01/22/%E8%A7%A3%E5%86%B3mac%E4%B8%8Bmenuconfig%E6%8A%A5%E9%94%99%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://ocd0711.ml/2019/01/22/解决mac下menuconfig报错的问题/</id>
    <published>2019-01-22T02:38:05.000Z</published>
    <updated>2019-07-03T14:15:20.348Z</updated>
    
    <content type="html"><![CDATA[<h2 id="序"><a href="#序" class="headerlink" title="序"></a>序</h2><p>最近无聊开坑….好吧是公司项目…玩着玩着想在自己电脑上跑…结果 osx 下 menuconfig 出这个问题, 看下图….没办法解决掉坑来写个 blog 记录</p><p><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNc79gy1fzf5woibvvj30u015w7q5.jpg" alt></p><p><strong>错误:</strong></p><blockquote><p>ld: symbol(s) not found for architecture x86_64<br>clang: error: linker command failed with exit code 1 (use -v to see invocation)</p></blockquote><p><strong>目的:</strong><br>使用 mconf, 自定义一个 make menuconfig 界面</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ol><li>在 macOS 下使用 make menuconfig 调用图形界面做 config 时, 可能会出现如下错误(小声逼逼 —-&gt; 坑逼必现):</li></ol><blockquote><p>ld: symbol(s) not found for architecture x86_64<br>clang: error: linker command failed with exit code 1 (use -v to see invocation)</p></blockquote><p>一般的, 编译 busybox 或者 boot 或者 linux 内核之前, 还是使用图形化界面来做配置最为直观. 实现这一目的自然是执行 make menuconfig.</p><p>make menuconfig 实际上就是拿 <font color="#FF0000">mconf</font> 这个工具去解析 config 文件里的描述信息, 进而转换为图形界面(继续小声逼逼…就是按规律列出来加了个背景色), config 文件有自动定义的语法格式.</p><p>第一次执行 make menuconfig 时, 需要先生成 mconf 这个工具, 在预编译 scripts/kconfig/mconf.c 生成 scripts/kconfig/mconf.o 之后的连接阶段, 需要 ldconfig 参数给出所需要连接的库的位置, 所说的库 k为后缀为 .a 或 .so 或 .dylib 的 <strong>ncursesw ncurses curses</strong> 库中, 生成 ldflags 的脚本为: scripts/kconfig/lxdialog/check-lxdialog.sh</p><p>上面报错的原因就是, macOS 下 <strong>ncursesw ncurses curses</strong> 这些库文件的位置不能通过 check-lxdialog.sh 里给出命令来找到, 所以生成的 ldflags 不对, 进而无法生成 mconf</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="一-方法一"><a href="#一-方法一" class="headerlink" title="一. 方法一"></a>一. 方法一</h3><p>打开 scripts/kconfig/lxdialog/check-lxdialog.sh 文件.</p><p>将下面这段添加进去(小声逼逼..markdown 不能给代码段内的添加颜色凑合着看吧):</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> lib <span class="keyword">in</span> ncursesw ncurses curses ; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ -f /usr/lib/lib<span class="variable">$&#123;lib&#125;</span>.<span class="variable">$&#123;ext&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-l<span class="variable">$&#123;lib&#125;</span>"</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>添加位置参考:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ldflags()</span><br><span class="line">&#123;</span><br><span class="line">pkg-config --libs ncursesw 2&gt;/dev/null &amp;&amp; <span class="built_in">exit</span></span><br><span class="line">pkg-config --libs ncurses 2&gt;/dev/null &amp;&amp; <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">for</span> ext <span class="keyword">in</span> so a dll.a dylib ; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> lib <span class="keyword">in</span> ncursesw ncurses curses ; <span class="keyword">do</span></span><br><span class="line"><span class="variable">$cc</span> -<span class="built_in">print</span>-file-name=lib<span class="variable">$&#123;lib&#125;</span>.<span class="variable">$&#123;ext&#125;</span> | grep -q /</span><br><span class="line"><span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-l<span class="variable">$&#123;lib&#125;</span>"</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">for</span> lib <span class="keyword">in</span> ncursesw ncurses curses ; <span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ -f /usr/lib/lib<span class="variable">$&#123;lib&#125;</span>.<span class="variable">$&#123;ext&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"-l<span class="variable">$&#123;lib&#125;</span>"</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后回到目录下 make menuconfig</p><h3 id="二-方法二-小声逼逼建议不要看…用方案一"><a href="#二-方法二-小声逼逼建议不要看…用方案一" class="headerlink" title="二. 方法二 (小声逼逼建议不要看…用方案一..)"></a>二. 方法二 (小声逼逼建议不要看…用方案一..)</h3><p>在生成 mconf 之后, 我们可以按特定的语法写出 config 文件, 进而自定义 make menuconfig 界面:</p><p>下面是我的 config 文件, 语法是简单且通用的, 可以仿照自定义出自己的界面:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line">mainmenu &quot;OCD Configuration&quot;</span><br><span class="line"></span><br><span class="line">config CONFIG_NAME</span><br><span class="line">string &quot;System Name String&quot;</span><br><span class="line">default &quot;Handawei config-demo&quot;</span><br><span class="line">help </span><br><span class="line">        just write you config-name bravly!</span><br><span class="line"></span><br><span class="line">config NO_WPTR</span><br><span class="line">def_bool y</span><br><span class="line"></span><br><span class="line">choice</span><br><span class="line">prompt &quot;Choice your CPU arch&quot;</span><br><span class="line">config ARM_T</span><br><span class="line">bool &quot;ARM_Samsung&quot;</span><br><span class="line"></span><br><span class="line">config MIPS_T</span><br><span class="line">bool &quot;MIPS_Cavium&quot;</span><br><span class="line"></span><br><span class="line">config POWERPC_T</span><br><span class="line">bool &quot;Power PC&quot;</span><br><span class="line"></span><br><span class="line">config X86_T</span><br><span class="line">bool &quot;Intel X86&quot;</span><br><span class="line"></span><br><span class="line">endchoice</span><br><span class="line"></span><br><span class="line">choice</span><br><span class="line">prompt &quot;Target Platform Model&quot;</span><br><span class="line">config  ARM_S3C2410_T</span><br><span class="line">bool &quot;s3c2410&quot;</span><br><span class="line">depends on ARM_T</span><br><span class="line"></span><br><span class="line">config ARM_S3C6410_T</span><br><span class="line">bool &quot;s3c6410&quot;</span><br><span class="line">depends on ARM_T</span><br><span class="line"></span><br><span class="line">config ARM_EXYNOS4412_T</span><br><span class="line">bool &quot;Exynos4412&quot;</span><br><span class="line">depends on ARM_T</span><br><span class="line"></span><br><span class="line">config ARM_EXYNOS5410_T</span><br><span class="line">bool &quot;Exynos5410&quot;</span><br><span class="line">depends on ARM_T</span><br><span class="line"></span><br><span class="line">config MIPS_CAVM_OCTEON1_T</span><br><span class="line">bool &quot;Cavium OCTEON I&quot;</span><br><span class="line">depends on MIPS_T</span><br><span class="line"></span><br><span class="line">config MIPS_CAVM_OCTEON2_T</span><br><span class="line">bool &quot;Cavium OCTEON II&quot;</span><br><span class="line">depends on MIPS_T</span><br><span class="line"></span><br><span class="line">config MCU_51_T</span><br><span class="line">bool &quot;MCU ATMEL 51&quot;</span><br><span class="line">depends on MCU_T</span><br><span class="line"></span><br><span class="line">endchoice</span><br><span class="line"></span><br><span class="line">menu &quot;Hardware settings&quot;</span><br><span class="line">config SUPPORT_LINUX</span><br><span class="line">bool &quot;Support Linux&quot;</span><br><span class="line">default y if ARM_T || MIPS_T || X86_T || POWERPC_T || SH_T</span><br><span class="line"></span><br><span class="line">config MCPU</span><br><span class="line">int &quot;CPU numbers used in MCPU platform&quot;</span><br><span class="line">default y if ARM_T || MIPS_T</span><br><span class="line"></span><br><span class="line">config CPU_NUM</span><br><span class="line">int &quot;CPU numbers used in MCPU platform&quot;</span><br><span class="line">default 2</span><br><span class="line">depends on MCPU</span><br><span class="line"></span><br><span class="line">config CORE_NUM</span><br><span class="line">int &quot;Cores per CPU&quot;</span><br><span class="line">range 1 12 if MIPS_CAVM_OCTEON1_T</span><br><span class="line">range 1 12 if MIPS_CAVM_OCTEON2_T</span><br><span class="line">default &quot;12&quot; if MIPS_T</span><br><span class="line">range 1 8 if ARM_T</span><br><span class="line">default &quot;4&quot; if ARM_EXYNOS4412_T</span><br><span class="line">default &quot;8&quot; if ARM_EXYNOS5410_T</span><br><span class="line"></span><br><span class="line">config ARENA_MEM_SIZE</span><br><span class="line">int &quot;Default memory size of arena manager&quot;</span><br><span class="line">default &quot;500000000&quot;</span><br><span class="line"></span><br><span class="line">config GPIO_MASK_CPU</span><br><span class="line">hex &quot;GPIO mask of CPU&quot;</span><br><span class="line">default 0x1 if ARM_S3C2410_T || ARM_S3C6410_T</span><br><span class="line">depends on MCPU</span><br><span class="line"></span><br><span class="line">config HFA</span><br><span class="line">bool &quot;Enable Hyper Finite Automata&quot;</span><br><span class="line">default y if MIPS_CAVM_OCTEON1_T || MIPS_CAVM_OCTEON2_T</span><br><span class="line">depends on MIPS_T</span><br><span class="line"></span><br><span class="line">if HFA</span><br><span class="line">menu &quot;HFA hardware configure&quot;</span><br><span class="line">config HFA_BUF_NUM</span><br><span class="line">int &quot;HFA input/temp buffers&apos;s number&quot;</span><br><span class="line">default 400</span><br><span class="line"></span><br><span class="line">config HFA_THD_NUM</span><br><span class="line">int &quot;HFA thread buffers&apos;s number&quot;</span><br><span class="line">default 400</span><br><span class="line"></span><br><span class="line">config HFA_MEM_SIZE</span><br><span class="line">int &quot;HFA memory size (in mega bytes)&quot;</span><br><span class="line">default 1024</span><br><span class="line">endmenu</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">if MIPS_T</span><br><span class="line">config ETHERNET_PORT</span><br><span class="line">int &quot;Ethernet port number (range 1 50)&quot;</span><br><span class="line">default 2</span><br><span class="line">range 1 50</span><br><span class="line">config GPIO_PORT</span><br><span class="line">int &quot;GPIO port number (range 1 1000)&quot;</span><br><span class="line">default 100</span><br><span class="line">range 1 1000</span><br><span class="line">endif</span><br><span class="line">endmenu</span><br></pre></td></tr></table></figure><p>如果在退出时选择了 yes, 会将配置保存到 .config 里.<br>之后就可以 make 了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h2&gt;&lt;p&gt;最近无聊开坑….好吧是公司项目…玩着玩着想在自己电脑上跑…结果 osx 下 menuconfig 出这个问题, 看下图….没办法解决掉坑来写个 bl
      
    
    </summary>
    
      <category term="Mac" scheme="https://ocd0711.ml/categories/Mac/"/>
    
    
      <category term="raspi" scheme="https://ocd0711.ml/tags/raspi/"/>
    
      <category term="linux" scheme="https://ocd0711.ml/tags/linux/"/>
    
      <category term="kernel" scheme="https://ocd0711.ml/tags/kernel/"/>
    
  </entry>
  
  <entry>
    <title>Android-P破解隐藏私有API禁止调用的限制</title>
    <link href="https://ocd0711.ml/2019/01/18/Android-P%E7%A0%B4%E8%A7%A3%E9%9A%90%E8%97%8F%E7%A7%81%E6%9C%89API%E7%A6%81%E6%AD%A2%E8%B0%83%E7%94%A8%E7%9A%84%E9%99%90%E5%88%B6/"/>
    <id>https://ocd0711.ml/2019/01/18/Android-P破解隐藏私有API禁止调用的限制/</id>
    <published>2019-01-18T03:23:00.000Z</published>
    <updated>2019-07-03T14:15:20.345Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p><a href="http://weishu.me/2018/06/07/free-reflection-above-android-p/" target="_blank" rel="noopener">http://weishu.me/2018/06/07/free-reflection-above-android-p/</a></p></blockquote><blockquote><p><a href="https://juejin.im/post/5ba0f3f7e51d450e6f2e39e0" target="_blank" rel="noopener">https://juejin.im/post/5ba0f3f7e51d450e6f2e39e0</a></p></blockquote><p>原理链接已经提供了，这里不做解释。</p><p>维术的第二个条件和掘金的方法五，虽然提到了Unsafe，但是都没有给出源码。<br>现在我把源码发上来，算是这部分的最后一块拼图。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用Unsafe清除classloader</span></span><br><span class="line"><span class="comment"> * 该方法仅对同一个类生效，所以必须在需要的类中添加使用，不可以跨类调用</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> cls 需要清除Loader的类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(&#123;<span class="string">"unchecked"</span>, <span class="string">"JavaReflectionMemberAccess"</span>&#125;)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clearClassLoaderInClass</span><span class="params">(Class cls)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//Unsafe类</span></span><br><span class="line">        Class unsafeClass = Class.forName(<span class="string">"sun.misc.Unsafe"</span>);</span><br><span class="line">        <span class="comment">//取Unsafe实例字段</span></span><br><span class="line">        Field unsafeInstanceField = unsafeClass.getDeclaredField(<span class="string">"theUnsafe"</span>);</span><br><span class="line">        <span class="comment">//放开Unsafe实例字段权限</span></span><br><span class="line">        unsafeInstanceField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//取Unsafe实例</span></span><br><span class="line">        Object unsafeInstance = unsafeInstanceField.get(<span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">//取objectFieldOffset方法取偏移量</span></span><br><span class="line">        Method objectFieldOffset = unsafeClass.getMethod(<span class="string">"objectFieldOffset"</span>, Field.class);</span><br><span class="line">        <span class="comment">//Class的classLoader字段</span></span><br><span class="line">        Field classLoaderField = Class.class.getDeclaredField(<span class="string">"classLoader"</span>);</span><br><span class="line">        <span class="comment">//使classLoader可见</span></span><br><span class="line">        classLoaderField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">//取putObject方法进行置空</span></span><br><span class="line">        Method putObject = unsafeClass.getMethod(<span class="string">"putObject"</span>, Object.class, <span class="keyword">long</span>.class, Object.class);</span><br><span class="line">        <span class="comment">//值为8，这里不用硬编码，看什么时候等到classLoader字段被404了再用</span></span><br><span class="line">        <span class="keyword">long</span> offset = (<span class="keyword">long</span>) objectFieldOffset.invoke(unsafeInstance, classLoaderField);</span><br><span class="line"></span><br><span class="line">        Log.i(TAG, <span class="string">"clearClassLoaderInClass: classLoader offset="</span> + offset);</span><br><span class="line">        <span class="comment">//偏移量为8处置空</span></span><br><span class="line">        putObject.invoke(unsafeInstance, cls, offset, <span class="keyword">null</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</span><br><span class="line">        Log.e(TAG, <span class="string">"clearClassLoaderInClass: "</span>, throwable);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在当前类下</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Reflection9</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">method</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//传入当前类</span></span><br><span class="line">        clearClassLoaderInClass(Reflection9.class);</span><br><span class="line">        <span class="comment">//接下来就可以调用隐私API了...</span></span><br><span class="line">        SystemService.restart(<span class="string">"zygote"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和掘金说的不同，不仅仅反射，直接调用也是可以的，没有此类限制。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://weishu.me/2018/06/07/free-reflection-abov
      
    
    </summary>
    
      <category term="Android" scheme="https://ocd0711.ml/categories/Android/"/>
    
    
      <category term="Develop" scheme="https://ocd0711.ml/tags/Develop/"/>
    
      <category term="android app" scheme="https://ocd0711.ml/tags/android-app/"/>
    
  </entry>
  
  <entry>
    <title>android开发填坑之广播延迟问题</title>
    <link href="https://ocd0711.ml/2019/01/17/android%E5%BC%80%E5%8F%91%E5%A1%AB%E5%9D%91%E4%B9%8B%E5%B9%BF%E6%92%AD%E5%BB%B6%E8%BF%9F%E9%97%AE%E9%A2%98/"/>
    <id>https://ocd0711.ml/2019/01/17/android开发填坑之广播延迟问题/</id>
    <published>2019-01-17T03:44:57.000Z</published>
    <updated>2019-07-03T14:15:20.346Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在写公司项目, 项目验收的时候挖出了历史遗留的bug, 经过分析功能依赖系统的屏幕监听广播 (ACTION_SCREEN_ON 和 ACTION_SCREEN_OFF). 但是这里有个深坑, 广播发送有延迟…当我们短时间迅速开关屏幕, 功能正常…但是实际使用中全看运气…</p><p>刚开始想通过前台广播解决, 但是只有自定义广播可以设置前台, 系统广播无法设置, 这种解决方案被放弃..最终解决方案: 在 View 中重写 View.onScreenStateChanged, 通过回调实现监听.</p><h2 id="View-onScreenStateChanged"><a href="#View-onScreenStateChanged" class="headerlink" title="View.onScreenStateChanged"></a>View.onScreenStateChanged</h2><p>源码如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * This method is called whenever the state of the screen this view is</span></span><br><span class="line"><span class="comment"> * attached to changes. A state change will usually occurs when the screen</span></span><br><span class="line"><span class="comment"> * turns on or off (whether it happens automatically or the user does it</span></span><br><span class="line"><span class="comment"> * manually.)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> screenState The new state of the screen. Can be either</span></span><br><span class="line"><span class="comment"> *                    &#123;<span class="doctag">@link</span> #SCREEN_STATE_ON&#125; or &#123;<span class="doctag">@link</span> #SCREEN_STATE_OFF&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScreenStateChanged</span><span class="params">(<span class="keyword">int</span> screenState)</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到注释中写到: 这个方法在屏幕开关都会触发这个方法, 参数列表中 <strong>int screenState</strong> 代表屏幕开关状态</p><h2 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h2><p>在我们自定义 View 中, 重写这个方法, 并且加回调, 就可以实现跟踪屏幕效果.</p><ol><li><strong>View 中重写</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加屏幕监听</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScreenStateChanged</span><span class="params">(<span class="keyword">int</span> screenState)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onScreenStateChanged(screenState);</span><br><span class="line">        <span class="keyword">if</span> (mCallback != <span class="keyword">null</span>)&#123;</span><br><span class="line">            mCallback.onScreenState(screenState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>定义回调</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加回调接口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DragLayerCallback</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SCREEN_OFF = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SCREEN_ON = <span class="number">1</span>;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onScreenState</span><span class="params">(<span class="keyword">int</span> screenState)</span></span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>注册回调</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setScreenStateCallback</span><span class="params">(DragLayerCallback callback)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.mCallback = callback;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>在需要监听的地方实现</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mDragLayer.setScreenStateCallback(<span class="keyword">new</span> DragLayer.DragLayerCallback() &#123;</span><br><span class="line">     <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScreenState</span><span class="params">(<span class="keyword">int</span> screenState)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 开启屏幕</span></span><br><span class="line">        <span class="keyword">if</span> (screenState==DragLayer.DragLayerCallback.SCREEN_ON)&#123;</span><br><span class="line">            screenOn();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 关闭屏幕</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            screenOff();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;在写公司项目, 项目验收的时候挖出了历史遗留的bug, 经过分析功能依赖系统的屏幕监听广播 (ACTION_SCREEN_ON 和 ACTI
      
    
    </summary>
    
      <category term="android app" scheme="https://ocd0711.ml/categories/android-app/"/>
    
    
      <category term="android" scheme="https://ocd0711.ml/tags/android/"/>
    
      <category term="broadcast" scheme="https://ocd0711.ml/tags/broadcast/"/>
    
  </entry>
  
  <entry>
    <title>raspi 上 4G 模块使用研究过程</title>
    <link href="https://ocd0711.ml/2019/01/14/raspi%E4%B8%8A4G%E6%A8%A1%E5%9D%97%E4%BD%BF%E7%94%A8%E7%A0%94%E7%A9%B6%E8%BF%87%E7%A8%8B/"/>
    <id>https://ocd0711.ml/2019/01/14/raspi上4G模块使用研究过程/</id>
    <published>2019-01-14T03:51:15.000Z</published>
    <updated>2019-07-03T14:15:20.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目的"><a href="#目的" class="headerlink" title="目的:"></a>目的:</h2><p>实现在树莓派嵌入式系统上开发 4g 模块, 支持 4g 上网短信等移动网络功能</p><h2 id="目前测试的仅-龙尚U9300C-龙尚U8300C-华为ME909s-821-其他理论相同-华为有另外解决方案可以不参考我的帖子"><a href="#目前测试的仅-龙尚U9300C-龙尚U8300C-华为ME909s-821-其他理论相同-华为有另外解决方案可以不参考我的帖子" class="headerlink" title="目前测试的仅 龙尚U9300C 龙尚U8300C 华为ME909s-821 其他理论相同, 华为有另外解决方案可以不参考我的帖子"></a>目前测试的仅 龙尚U9300C 龙尚U8300C 华为ME909s-821 其他理论相同, 华为有另外解决方案可以不参考我的帖子</h2><h2 id="硬件材料"><a href="#硬件材料" class="headerlink" title="硬件材料:"></a>硬件材料:</h2><ol><li>树莓派 3b+</li><li>4g 模块: U9300C/U8300C/ME909s-821 等</li><li>PCIE 转 USB 开发板</li><li>外置天线</li></ol><h2 id="开发准备"><a href="#开发准备" class="headerlink" title="开发准备:"></a>开发准备:</h2><p>为了防止接下来的内核编译开发, 影响某些软件更新不全导致功能失效, 所以提前更新</p><p>更新树莓派内核的方法:</p><ol><li>sudo apt-get update //获取最近的软件包列表, 包的信息有这些包是否更新过</li><li>sudo apt-get dist-upgrade //如果这个包没有发布更新, 就不管它, 有则更新</li></ol><p>apt-get upgrade 和 apt-get dist-upgrade 的区别:</p><p>upgrade 只是简单的更新包, 不管依赖, 不添加包或删除包</p><p>而 dist-upgrade 可以根据依赖关系的变化添加包删除包</p><h2 id="树莓派内核编译环境"><a href="#树莓派内核编译环境" class="headerlink" title="树莓派内核编译环境:"></a>树莓派内核编译环境:</h2><p>有两种方式: </p><ol><li>一种是直接在树莓派上编译</li><li>一种是采用自己搭建的交叉编译环境</li></ol><p>推荐第二种方式, 原因如下:</p><ol><li>做嵌入式开发的需要, 希望能熟悉整个流程</li><li>树莓派上编译非常缓慢, 而且发热严重(ps: 虽然本身就热)</li><li>使用自己的交叉编译环境, 移植和离线发布都非常方便</li><li>如果你使用 macos 以上当我都没说</li></ol><h3 id="第二种方式-交叉编译"><a href="#第二种方式-交叉编译" class="headerlink" title="第二种方式(交叉编译)"></a>第二种方式(交叉编译)</h3><p>[参考树莓派官方内核编译说明](<a href="https://www.raspberrypi.org/documentation/linux/kernel/building.md" target="_blank" rel="noopener">https://www.raspberrypi.org/documentation/linux/kernel/building.md</a> “点击跳转”)</p><ol><li><p>编译前准备</p><p> 首先安装git和依赖:</p><p> <code>sudo apt-get install git bc bison flex libssl-dev libncurses-dev</code></p><p> 然后获取源码, 需要一点时间:</p><p> <code>git clone --depth=1 https://github.com/raspberrypi/linux</code></p></li><li><p>BSP开发</p><blockquote><p>交叉编译系统:  Linux kali 4.19.29-Re4son-v8+ #6 SMP PREEMPT Wed Mar 27 00:15:50 UTC 2019 aarch64 GNU/Linux</p><p>交叉编译器: gcc-linaro-arm-linux-gnueabihf-raspbian</p><p>交叉编译版本: gcc version 7.2.1 20171011 (Linaro GCC 7.2-2017.11)</p></blockquote><p> kali [下载地址](<a href="https://www.kali.org/downloads" target="_blank" rel="noopener">https://www.kali.org/downloads</a> “点击跳转”)</p><p> 交叉编译工具链 [下载地址](<a href="https://github.com/raspberrypi/tools" target="_blank" rel="noopener">https://github.com/raspberrypi/tools</a> “点击跳转”)</p><p> 1) 处理编译环境:</p><pre><code>下载工具链:`git clone https://github.com/raspberrypi/tools ~/tools`添加工具链到全局变量:32位: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> PATH=\<span class="variable">$PATH</span>:~/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian/bin &gt;&gt; ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>64位: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> PATH=\<span class="variable">$PATH</span>:~/tools/arm-bcm2708/gcc-linaro-arm-linux-gnueabihf-raspbian-x64/bin &gt;&gt; ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></code></pre><p> 2) 添加系统组建</p><pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> kernel</span><br><span class="line"></span><br><span class="line">KERNEL=kernel8 (需要在树莓派机器上查看uname -a 看下arm版本)</span><br><span class="line"></span><br><span class="line">make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-  bcm2709_defconfig (32位)</span><br><span class="line"></span><br><span class="line">make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bcmrpi3_defconfig (64位)</span><br></pre></td></tr></table></figure>选中如下组建:device drivers ---&gt; usb support ---&gt; usb serial converter support 中选中 USB driver for GSM and CDMA modems</code></pre><p> <img src="https://github.com/OCD0711/MyPostImages/raw/master/WX20190628-110326.png" alt></p></li></ol><pre><code>    添加PPP协议支持:    Device Drivers ---&gt; Network device support![](https://github.com/OCD0711/MyPostImages/raw/master/WX20190628-110911@2x.png)    添加驱动:    找到内核源码文件c(一般情况下，路径在..\drivers\usb\serial\option.c)    在源码中查找 option_ids 表，请参照上面1 节中项目信息添加 龙尚产品的 VID 0x1c9e和 PID0x9b3c    说明:    在比较早的 linux 版本中，路径在..\drivers\usb\serial\usb-serial.c![](https://github.com/OCD0711/MyPostImages/raw/master/WX20190628-111306@2x.png)![](https://github.com/OCD0711/MyPostImages/raw/master/WX20190628-111445@2x.png)![](https://github.com/OCD0711/MyPostImages/raw/master/WX20190628-111435@2x.png)3) 内核编译    因为是首次编译，所以并没有要清除的文件，但原来编译过内核就最好还是清理一下    一般在源码编译的时候都使用make clean，但会保留内核的配置文件.    内核配置:    <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">KERNEL=kernel8 (需要在树莓派机器上查看uname -a 看下arm版本)</span><br><span class="line"></span><br><span class="line">make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf-  bcm2709_defconfig (32位)</span><br><span class="line"></span><br><span class="line">make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bcmrpi3_defconfig (64位)</span><br></pre></td></tr></table></figure>    编译zImage，modules和dtbs:    zImage算是最终内核镜像的半成品，modules是内核模块，    dtbs作用于/boot，个人觉得应该与树莓派加电启动有关，类似BIOS    Note:多处理系统可以添加选项-j n ,n为数字,表示多处理器的数量*1.5。加快编译速度    32位    `make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- zImage modules dtbs -jTHREADNUM`    64位    `make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- Image modules dtbs -jTHREADNUM`4) 打包内核:    内核编译完成后，最后一步包括复制 Linux 内核以及设备树到启动分区中：    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp arch/arm64/boot/Image /mnt/boot/kernel8.img</span><br><span class="line">cp arch/arm64/boot/dts/broadcom/bcm2710-rpi-3-b.dtb /mnt/boot/</span><br></pre></td></tr></table></figure>    调整 config.txt :    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo “kernel=kernel8.img” &gt;&gt; /mnt/boot/config.txt</span><br></pre></td></tr></table></figure>    安装内核模块:    <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu INSTALL_MOD_PATH=/mnt modules_install</span><br><span class="line">umount /mnt/boot</span><br><span class="line">umount /mnt</span><br></pre></td></tr></table></figure></code></pre><h2 id="好了这就结束了这篇咕咕咕几个月的教程了…"><a href="#好了这就结束了这篇咕咕咕几个月的教程了…" class="headerlink" title="好了这就结束了这篇咕咕咕几个月的教程了…"></a>好了这就结束了这篇咕咕咕几个月的教程了…</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的:&quot;&gt;&lt;/a&gt;目的:&lt;/h2&gt;&lt;p&gt;实现在树莓派嵌入式系统上开发 4g 模块, 支持 4g 上网短信等移动网络功能&lt;/p&gt;
&lt;h2 id=&quot;目前测试的仅-龙尚U9300C-
      
    
    </summary>
    
      <category term="Raspi" scheme="https://ocd0711.ml/categories/Raspi/"/>
    
    
      <category term="raspi" scheme="https://ocd0711.ml/tags/raspi/"/>
    
      <category term="Serial Communications" scheme="https://ocd0711.ml/tags/Serial-Communications/"/>
    
      <category term="4G model" scheme="https://ocd0711.ml/tags/4G-model/"/>
    
  </entry>
  
  <entry>
    <title>raspi 上 CP2102 使用</title>
    <link href="https://ocd0711.ml/2019/01/14/raspi%E4%B8%8ACP2102%E4%BD%BF%E7%94%A8/"/>
    <id>https://ocd0711.ml/2019/01/14/raspi上CP2102使用/</id>
    <published>2019-01-14T03:36:46.000Z</published>
    <updated>2019-07-03T14:15:20.347Z</updated>
    
    <content type="html"><![CDATA[<h2 id="测试-usb-hub-接-cp2102-模块的-usb-转串口在-raspi-上的数据收发"><a href="#测试-usb-hub-接-cp2102-模块的-usb-转串口在-raspi-上的数据收发" class="headerlink" title="测试 usb hub 接 cp2102 模块的 usb 转串口在 raspi 上的数据收发"></a>测试 usb hub 接 cp2102 模块的 usb 转串口在 raspi 上的数据收发</h2><ol><li><p>将 hub 的一个 usb 口的4个引脚与 cp2102 模块的 usb 口的4个引脚进行焊接(注意线的对应, 红、白、绿、黑，vcc、d-、d+、gnd)</p></li><li><p>用一个母口的杜邦线, 短接 cp2102 模块引出来的 txd 与 rxd.</p></li></ol><p><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNc79gy1fz5yxib2ncj30ts06qwkz.jpg" alt></p><ol start="3"><li>在 raspi 上安装 minicom, 并进行配置, sudo minicom -s (不能直接 minicom，权限不够), 注意设置的一处为 serial port setup </li></ol><p><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNc79gy1fz5yokj59tj30oa0l6wsk.jpg" alt></p><p>的 a-serial device 处, 改为 /dev/ttyUSB0 (与usb转串口的对应), f-hardware flow control 改为 no (时间允许的话, 也可以测试一下, yes)</p><p><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNc79gy1fz5yr15qw2j30uy0jc4gf.jpg" alt></p><ol start="4"><li>用 minicom 发送文件, 可以看到 minicom 的界面中也会收到发送的数据, 只不过如果发送的文件中的数据太多, 收到的是数据量不够, 仅会收到末尾几行.(这个猜测可能与 cp2102 的 fifo 的大小有关). </li></ol><p>例:<br><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNc79gy1fz5yuffy99j30u0199u0x.jpg" alt></p><p>经测试, 当 e-bps/par/bits 设为 6n1 时或 6n2 或 6e1 或 6e2 时, 能接收到数据, 但打印出来的不是原始数据.<br>如:<br>原始数据为<br>1 test1<br>2 test2<br>3 test3<br>4 test4<br>5 test5<br>6 test6<br>而接收到的数据为<br>1 4%341<br>2 4%342<br>3 4%343<br>4 4%344<br>5 4%345<br>6 4%346<br>当设为 7n1、7n2、7e1 或 7e2 时, 及 8n1 等 8 个数据位的其他情况时, 都可以接收到正确的数据.<br>而当设为 5 个数据位时, 可能收不到数据, 也可能收到了, 但屏幕上是没显示东西的.<br>总之数据位设为 5 和 6 时, 是不能正确收发数据的, 数据位设为 7 或 8 时, 可以正确地收发数据.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;测试-usb-hub-接-cp2102-模块的-usb-转串口在-raspi-上的数据收发&quot;&gt;&lt;a href=&quot;#测试-usb-hub-接-cp2102-模块的-usb-转串口在-raspi-上的数据收发&quot; class=&quot;headerlink&quot; title=&quot;测试
      
    
    </summary>
    
      <category term="Raspi" scheme="https://ocd0711.ml/categories/Raspi/"/>
    
    
      <category term="raspi" scheme="https://ocd0711.ml/tags/raspi/"/>
    
      <category term="Serial Communications" scheme="https://ocd0711.ml/tags/Serial-Communications/"/>
    
  </entry>
  
  <entry>
    <title>ConcurrentLinkedQueue使用</title>
    <link href="https://ocd0711.ml/2018/12/21/ConcurrentLinkedQueue%E4%BD%BF%E7%94%A8/"/>
    <id>https://ocd0711.ml/2018/12/21/ConcurrentLinkedQueue使用/</id>
    <published>2018-12-21T13:01:34.000Z</published>
    <updated>2019-07-03T14:15:20.345Z</updated>
    
    <content type="html"><![CDATA[<p>ConcurrentLinkedQueue 笔记</p><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>一个基于链接节点的无界线程安全列队. 此列队按照 FIFO (先进先出) 原则对元素进行排序. 队列的头部是队列中时间最长的元素. 队列的尾部是队列中时间最短的元素.<br>新的元素插入到队列的尾部, 队列获取操作从队列头部获取元素. 当多个线程共享访问一个公共 collection 时, ConcurrentLinkedQueue 是一个恰当的选择. 此队列不允许使用 null 元素.</p><h2 id="offer-和-poll"><a href="#offer-和-poll" class="headerlink" title="offer 和 poll"></a>offer 和 poll</h2><p><a href="http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#offer(E)" target="_blank" rel="noopener">offer</a>(<a href="http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html" target="_blank" rel="noopener">E</a> e)<br>将指定元素插入此队列的尾部.</p><p><a href="http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#poll()" target="_blank" rel="noopener">poll</a><br>获取并移除此队列的头, 如果此队列为空, 则返回null.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    ConcurrentLinkedQueue queue = <span class="keyword">new</span> ConcurrentLinkedQueue();</span><br><span class="line">    queue.offer(<span class="string">"嘤嘤嘤"</span>);</span><br><span class="line">    System.out.println(<span class="string">"offer 后，队列是否空？"</span> + queue.isEmpty());</span><br><span class="line">    System.out.println(<span class="string">"从队列中 poll："</span> + queue.poll());</span><br><span class="line">    System.out.println(<span class="string">"pool 后，队列是否空？"</span> + queue.isEmpty());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>offer 是往队列添加元素, poll是从队列取出元素并且删除该元素.</p><p>执行结果:</p><blockquote><p>offer 后, 队列是否为空? false<br>从队列 poll: 嘤嘤嘤<br>pool 后, 队列是否为空? true</p></blockquote><p>ConcurrentLinkedQueue 中的 add() 和 offer() 完全一样, 都是往队列尾部添加元素.</p><h2 id="还有个取出元素方法-peek"><a href="#还有个取出元素方法-peek" class="headerlink" title="还有个取出元素方法 peek"></a>还有个取出元素方法 peek</h2><p><a href="http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#peek()" target="_blank" rel="noopener">peek</a><br>获取但不移除此队列的头; 如果此队列为空, 则返回null</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    ConcurrentLinkedQueue queue = <span class="keyword">new</span> ConcurrentLinkedQueue();</span><br><span class="line">    queue.offer(<span class="string">"emmm"</span>);</span><br><span class="line">    System.out.println(<span class="string">"offer 后, 队列是否空?"</span> + queue.isEmpty());</span><br><span class="line">    System.out.println(<span class="string">"从队列中 peek: "</span> + queue.peek());</span><br><span class="line">    System.out.println(<span class="string">"从队列中 peek: "</span> + queue.peek());</span><br><span class="line">    System.out.println(<span class="string">"从队列中 peek: "</span> + queue.peek());</span><br><span class="line">    System.out.println(<span class="string">"pool 后. 队列是否空? "</span> + queue.isEmpty());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果:</p><blockquote><p>offer 后，队列是否空? false<br>从队列中 peek: emmm<br>从队列中 peek: emmm<br>从队列中 peek: emmm<br>pool 后, 队列是否空? false</p></blockquote><h2 id="remove"><a href="#remove" class="headerlink" title="remove"></a>remove</h2><p><a href="http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#remove(java.lang.Object)" target="_blank" rel="noopener">remove</a>(<a href="http://tool.oschina.net/uploads/apidocs/jdk-zh/java/lang/Object.html" target="_blank" rel="noopener">Object</a> o)<br>从队列中移除指定元素的单个实例(如果存在)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    ConcurrentLinkedQueue queue = <span class="keyword">new</span> ConcurrentLinkedQueue();</span><br><span class="line">    queue.offer(<span class="string">"hhh"</span>);</span><br><span class="line">    System.out.println(<span class="string">"offer 后, 队列是否空? "</span> + queue.isEmpty());</span><br><span class="line">    System.out.println(<span class="string">"从队列中 remove 已存在元素: "</span> + queue.remove(<span class="string">"xxx"</span>));</span><br><span class="line">    System.out.println(<span class="string">"从队列中 remove 不存在元素: "</span> + queue.remove(<span class="string">"123"</span>));</span><br><span class="line">    System.out.println(<span class="string">"remove 后, 队列是否空? "</span> + queue.isEmpty());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>remove 一个元素, 会返回 true, remove 不存在元素, 返回 false.</p><p>执行结果:</p><blockquote><p>offer 后, 队列是否空? false<br>从队列中 remove 已存在元素: true<br>从队列中 remove 不存在元素: false<br>remove 后, 队列是否空? true</p></blockquote><h2 id="size-or-isEmpty"><a href="#size-or-isEmpty" class="headerlink" title="size or isEmpty"></a>size or isEmpty</h2><p><a href="http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#size()" target="_blank" rel="noopener">size</a>()<br>返回此队列中的元素数量</p><p><strong>注意:</strong></p><blockquote><p>如果此队列包含的元素大于 Integer.MAX_VALUE, 则返回 Integer.MAX_VALUE. 需要小心的是, 与大多数 collection 不同, 此方法不是一个固定时间操作. 由于这些队列的异步特性, 确定当前的元素数需要进行一次花费 O(n) 时间的遍历.<br>所以在需要判断队列是否为空时, 尽量不要用 queue.size()&gt;0, 而是用 !queue.isEmpty()</p></blockquote><p>比较 size() 和 isEmpty() 效率的实例:<br>场景: 10000个人去饭店吃饭, 10张桌子, 分别比较 size() 和 isEmpty() 的耗时</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test01ConcurrentLinkedQueue</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> peopleNum = <span class="number">10000</span>;<span class="comment">//吃饭人数</span></span><br><span class="line">        <span class="keyword">int</span> tableNum = <span class="number">10</span>;<span class="comment">//饭桌数量</span></span><br><span class="line"></span><br><span class="line">        ConcurrentLinkedQueue&lt;String&gt; queue = <span class="keyword">new</span> ConcurrentLinkedQueue&lt;&gt;();</span><br><span class="line">        CountDownLatch count = <span class="keyword">new</span> CountDownLatch(tableNum);<span class="comment">//计数器</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//将吃饭人数放入队列（吃饭的人进行排队）</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=peopleNum;i++)&#123;</span><br><span class="line">            queue.offer(<span class="string">"消费者_"</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//执行10个线程从队列取出元素（10个桌子开始供饭）</span></span><br><span class="line">        System.out.println(<span class="string">"-----------------------------------开饭了-----------------------------------"</span>);</span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        ExecutorService executorService = Executors.newFixedThreadPool(tableNum);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tableNum;i++) &#123;</span><br><span class="line">            executorService.submit(<span class="keyword">new</span> Dinner(<span class="string">"00"</span> + (i+<span class="number">1</span>), queue, count));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计数器等待，知道队列为空（所有人吃完）</span></span><br><span class="line">        count.await();</span><br><span class="line">        <span class="keyword">long</span> time = System.currentTimeMillis() - start;</span><br><span class="line">        System.out.println(<span class="string">"-----------------------------------所有人已经吃完-----------------------------------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"共耗时："</span> + time);</span><br><span class="line">        <span class="comment">//停止线程池</span></span><br><span class="line">        executorService.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Dinner</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String name;</span><br><span class="line">        <span class="keyword">private</span> ConcurrentLinkedQueue&lt;String&gt; queue;</span><br><span class="line">        <span class="keyword">private</span> CountDownLatch count;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Dinner</span><span class="params">(String name, ConcurrentLinkedQueue&lt;String&gt; queue, CountDownLatch count)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.name = name;</span><br><span class="line">            <span class="keyword">this</span>.queue = queue;</span><br><span class="line">            <span class="keyword">this</span>.count = count;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">//while (queue.size() &gt; 0)&#123;</span></span><br><span class="line">            <span class="keyword">while</span> (!queue.isEmpty())&#123;</span><br><span class="line">                <span class="comment">//从队列取出一个元素 排队的人少一个</span></span><br><span class="line">                System.out.println(<span class="string">"【"</span> +queue.poll() + <span class="string">"】----已吃完...， 饭桌编号："</span> + name);</span><br><span class="line">            &#125;</span><br><span class="line">            count.countDown();<span class="comment">//计数器-1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果:</p><blockquote><p>使用 size 耗时: 757ms<br><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNbRwgy1fyepm8ds8ij30g0049t91.jpg" alt><br>使用 isEmpty 耗时: 210ms<br><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNbRwgy1fyepmvpgvdj30iw049dg5.jpg" alt></p></blockquote><p>当数据越大, 这种耗时差距越明显. 所以这种判断用 isEmpty 更加合理.</p><h2 id="contains"><a href="#contains" class="headerlink" title="contains"></a>contains</h2><p><a href="http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#contains(java.lang.Object)" target="_blank" rel="noopener">contains</a>(<a href="http://tool.oschina.net/uploads/apidocs/jdk-zh/java/lang/Object.html" target="_blank" rel="noopener">Object</a> o)<br>如果此列队包含指定元素, 则返回 true</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    ConcurrentLinkedQueue queue = <span class="keyword">new</span> ConcurrentLinkedQueue();</span><br><span class="line">    queue.offer(<span class="string">"123"</span>);</span><br><span class="line">    System.out.println(queue.contains(<span class="string">"123"</span>));</span><br><span class="line">    System.out.println(queue.contains(<span class="string">"234"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果:</p><blockquote><p><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNbRwgy1fyeprtdib4j306z01at8h.jpg" alt></p></blockquote><h2 id="toArray"><a href="#toArray" class="headerlink" title="toArray"></a>toArray</h2><p><a href="http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#toArray()" target="_blank" rel="noopener">toArray</a><br>返回以恰当顺序包含此队列所有元素的数组</p><p>[toArray](T[] a)<br>返回以恰当顺序包含此队列所有元素的数组, 返回数组的运行时类型是指数组的运行时类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    ConcurrentLinkedQueue&lt;String&gt; queue = <span class="keyword">new</span> ConcurrentLinkedQueue&lt;String&gt;();</span><br><span class="line">    queue.offer(<span class="string">"123"</span>);</span><br><span class="line">    queue.offer(<span class="string">"234"</span>);</span><br><span class="line">    Object[] objects = queue.toArray();</span><br><span class="line">    System.out.println(objects[<span class="number">0</span>] + <span class="string">", "</span> + objects[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将数据存储到指定数组</span></span><br><span class="line">    String[] strs = <span class="keyword">new</span> String[<span class="number">2</span>];</span><br><span class="line">    queue.toArray(strs);</span><br><span class="line">    System.out.println(strs[<span class="number">0</span>] + <span class="string">", "</span> + strs[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果:</p><blockquote><p><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNbRwgy1fyepuyo52ej305e01kjr6.jpg" alt></p></blockquote><h2 id="iterator"><a href="#iterator" class="headerlink" title="iterator"></a>iterator</h2><p><a href="http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#iterator()" target="_blank" rel="noopener">ierator</a>()<br>返回在此队列元素上以恰当顺序进行迭代的迭代器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    ConcurrentLinkedQueue&lt;String&gt; queue = <span class="keyword">new</span> ConcurrentLinkedQueue&lt;String&gt;();</span><br><span class="line">    queue.offer(<span class="string">"123"</span>);</span><br><span class="line">    queue.offer(<span class="string">"234"</span>);</span><br><span class="line">    Iterator&lt;String&gt; iterator = queue.iterator();</span><br><span class="line">    <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">        System.out.println(iterator.next());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNbRwgy1fyepyiyx30j305601f3ya.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ConcurrentLinkedQueue 笔记&lt;/p&gt;
&lt;h2 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h2&gt;&lt;p&gt;一个基于链接节点的无界线程安全列队. 此列队按照 FIFO (先进先出) 原
      
    
    </summary>
    
      <category term="java" scheme="https://ocd0711.ml/categories/java/"/>
    
    
      <category term="java" scheme="https://ocd0711.ml/tags/java/"/>
    
      <category term="android" scheme="https://ocd0711.ml/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>2018-2019杂记</title>
    <link href="https://ocd0711.ml/2018/12/15/2018-2019/"/>
    <id>https://ocd0711.ml/2018/12/15/2018-2019/</id>
    <published>2018-12-15T07:21:17.000Z</published>
    <updated>2019-07-03T14:15:20.344Z</updated>
    
    <content type="html"><![CDATA[<p>2018年要过去了…提前预定一篇,慢慢写,想到啥写啥</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2018年要过去了…提前预定一篇,慢慢写,想到啥写啥&lt;/p&gt;

      
    
    </summary>
    
      <category term="miscellanea" scheme="https://ocd0711.ml/categories/miscellanea/"/>
    
    
      <category term="Senior Year" scheme="https://ocd0711.ml/tags/Senior-Year/"/>
    
      <category term="New Year" scheme="https://ocd0711.ml/tags/New-Year/"/>
    
  </entry>
  
  <entry>
    <title>NexT主题中集成gitalk评论系统</title>
    <link href="https://ocd0711.ml/2018/12/12/NexT%E4%B8%BB%E9%A2%98%E4%B8%AD%E9%9B%86%E6%88%90gitalk%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    <id>https://ocd0711.ml/2018/12/12/NexT主题中集成gitalk评论系统/</id>
    <published>2018-12-12T07:37:46.000Z</published>
    <updated>2019-07-03T14:15:20.346Z</updated>
    
    <content type="html"><![CDATA[<p>记录在NexT主题中添加gitalk评论系统的步骤。</p><p>gitalk：一个基于 Github Issue 和 Preact 开发的评论插件<br>详情Demo可见：<a href="https://gitalk.github.io/" target="_blank" rel="noopener">https://gitalk.github.io/</a></p><h2 id="Register-Application"><a href="#Register-Application" class="headerlink" title="Register Application"></a>Register Application</h2><p>在GitHub上注册新应用，链接：<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a><br><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNbRwgy1fy407a45v3j30iw0d93zg.jpg" alt></p><p>参数说明：<br>Application name： # 应用名称，随意<br>Homepage URL： # 网站URL <a href="https://ocd0711.github.ooo" target="_blank" rel="noopener">example link</a><br>Application description # 描述，随意<br>Authorization callback URL：# 网站URL <a href="https://ocd0711.github.ooo" target="_blank" rel="noopener">example link</a></p><p>点击注册后，页面跳转如下，其中Client ID和Client Secret在后面的配置中需要用到，到时复制粘贴即可:<br><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNbRwgy1fy4087vmjmj31rl0u0wjr.jpg" alt></p><h2 id="gitalk-swig"><a href="#gitalk-swig" class="headerlink" title="gitalk.swig"></a>gitalk.swig</h2><p>新建<code>/layout/_third-party/comments/gitalk.swig</code>文件，并添加内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> page.comments &amp;&amp; theme.gitalk.enable %&#125;</span><br><span class="line">  &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.css"</span>&gt;</span><br><span class="line">  &lt;script src=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">   &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="keyword">var</span> gitalk = <span class="keyword">new</span> Gitalk(&#123;</span><br><span class="line">          clientID: <span class="string">'&#123;&#123; theme.gitalk.ClientID &#125;&#125;'</span>,</span><br><span class="line">          clientSecret: <span class="string">'&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;'</span>,</span><br><span class="line">          repo: <span class="string">'&#123;&#123; theme.gitalk.repo &#125;&#125;'</span>,</span><br><span class="line">          owner: <span class="string">'&#123;&#123; theme.gitalk.githubID &#125;&#125;'</span>,</span><br><span class="line">          admin: [<span class="string">'&#123;&#123; theme.gitalk.adminUser &#125;&#125;'</span>],</span><br><span class="line">          id: location.pathname,</span><br><span class="line">          distractionFreeMode: <span class="string">'&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;'</span></span><br><span class="line">        &#125;)</span><br><span class="line">        gitalk.render(<span class="string">'gitalk-container'</span>)           </span><br><span class="line">       &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure><h2 id="comments-swig"><a href="#comments-swig" class="headerlink" title="comments.swig"></a>comments.swig</h2><p>修改<code>/layout/_partials/comments.swig</code>，添加内容如下，与前面的elseif同一级别上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.gitalk.enable %&#125;</span><br><span class="line"> &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="index-swig"><a href="#index-swig" class="headerlink" title="index.swig"></a>index.swig</h2><p>修改l<code>ayout/_third-party/comments/index.swig</code>，在最后一行添加内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &apos;gitalk.swig&apos; %&#125;</span><br></pre></td></tr></table></figure><h2 id="gitalk-styl"><a href="#gitalk-styl" class="headerlink" title="gitalk.styl"></a>gitalk.styl</h2><p>新建<code>/source/css/_common/components/third-party/gitalk.styl</code>文件，添加内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.gt-header a, .gt-comments a, .gt-popup a</span><br><span class="line">  border-bottom: none;</span><br><span class="line">.gt-container .gt-popup .gt-action.is--active:before</span><br><span class="line">  top: 0.7em;</span><br></pre></td></tr></table></figure><h2 id="third-party-styl"><a href="#third-party-styl" class="headerlink" title="third-party.styl"></a>third-party.styl</h2><p>修改<code>/source/css/_common/components/third-party/third-party.styl</code>，在最后一行上添加内容，引入样式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;gitalk&quot;;</span><br></pre></td></tr></table></figure><h2 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h2><p>在主题配置文件next/_config.yml中添加如下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">  enable: true</span><br><span class="line">  githubID: github帐号  # OCD0711   </span><br><span class="line">  repo: 仓库名称   # 例：ocd0711.github.io</span><br><span class="line">  ClientID: Client ID</span><br><span class="line">  ClientSecret: Client Secret</span><br><span class="line">  adminUser: github帐号 #指定可初始化评论账户</span><br><span class="line">  distractionFreeMode: true</span><br></pre></td></tr></table></figure><p>以上就是NexT中添加gitalk评论的配置，博客上传到GitHub上后，打开页面进入某一博客内容下，就可看到评论处。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;记录在NexT主题中添加gitalk评论系统的步骤。&lt;/p&gt;
&lt;p&gt;gitalk：一个基于 Github Issue 和 Preact 开发的评论插件&lt;br&gt;详情Demo可见：&lt;a href=&quot;https://gitalk.github.io/&quot; target=&quot;_blan
      
    
    </summary>
    
    
      <category term="Next" scheme="https://ocd0711.ml/tags/Next/"/>
    
      <category term="Hexo" scheme="https://ocd0711.ml/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Sony_Headphone_Connect_update_google_assistant</title>
    <link href="https://ocd0711.ml/2018/11/09/Sony-Headphone-Connect-update-google-assistant/"/>
    <id>https://ocd0711.ml/2018/11/09/Sony-Headphone-Connect-update-google-assistant/</id>
    <published>2018-11-09T06:53:03.000Z</published>
    <updated>2019-07-03T14:15:20.346Z</updated>
    
    <content type="html"><![CDATA[<p>前阵子 jd 入了个大法的 WH-1000XM2, 国行缺少了 google assistant,外加大妈的中文提示语音…实在是难受, 然后找刷成国际版的方法. google 一圈貌似已经发布了 2.0.1 的固件, 但配套的程序没提示更新.</p><h2 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h2><p>这篇讲的内容并不受 Sony 官方支持, 本人也并不对此造成的保修作废、耳机变砖、耳机电池爆炸等等问题负责. 尝试此方法带来的任何后果自负. 本文内容仅适用于 WH-1000XM2, 其余型号请自行研究. 本文所提供的内容针对 Sony Headphone Connect 3.2.0 版本.</p><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><ul><li>apktool</li><li>一个靠谱的文本编辑器</li></ul><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><blockquote><p>提醒: 你用别的方法反编译后类、方法、命名空间等的命名方式不一定与我的相同, 建议善用文本搜索</p></blockquote><p>手机上抓包,发现软件启动的时候请求 <code>https://info.update.sony.net/HP001/MDRID289202/info/info.xml</code>, 居然返回的是404. 不负责的猜测了一下 MDRID289202 是机身的内部型号(包括版本号). 全局搜索了下源码发现<code>MDRID289202</code> 在 <code>com.sony.songpal.mdr.automagic.AutoMagicManager</code> 里面.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> URL <span class="title">m9721d</span><span class="params">(String str, String str2)</span> </span>&#123;</span><br><span class="line">    String str3 = <span class="string">"info.update.sony.net"</span>;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(String.format(Locale.getDefault(), <span class="string">"%s:code=%d"</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">"AutoMagicManagerErrorDomain"</span>, Integer.valueOf(AutoMagicError.NoCategoryID.ordinal())&#125;));</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(String.format(Locale.getDefault(), <span class="string">"%s:code=%d"</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">"AutoMagicManagerErrorDomain"</span>, Integer.valueOf(AutoMagicError.NoServiceID.ordinal())&#125;));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> URL(String.format(Locale.getDefault(), <span class="string">"http://%s/%s/%s/info/%s"</span>, <span class="keyword">new</span> Object[]&#123;str3, str, str2, <span class="string">"info.xml"</span>&#125;));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">            SpLog.m12039a(f5487a, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这玩意用了两个字符串类的参数, 然后在 URL 里面就是 HP001 和 MDRID289202, 于是猜测假如我篡改这个参数的获取程序使其获取成国外行货的代码, 大概就能强制更新了(前提是硬件完全一样). 顺藤摸瓜检查 m9271d 这方法的调用, 查到了保存这个参数的类 com.sony.songpal.mdr.application.p061b.C1702a.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">m7942a</span><span class="params">(C2503b c2503b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Command.fromByteCode(c2503b.m11224a()) == Command.UPDT_RET_PARAM) &#123;</span><br><span class="line">        cm cmVar = (cm) c2503b;</span><br><span class="line">        <span class="keyword">if</span> (cmVar.m11579e() != <span class="keyword">this</span>.f4438n) &#123;</span><br><span class="line">            SpLog.m12040b(f4425a, <span class="keyword">this</span>.f4438n + <span class="string">" expected, but received "</span> + cmVar.m11579e());</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        af f = cmVar.m11580f();</span><br><span class="line">        <span class="keyword">switch</span> (cmVar.m11579e()) &#123;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ID:</span><br><span class="line">                <span class="keyword">this</span>.f4429e = ((ag) f).m11716a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SERVICE_ID:</span><br><span class="line">                <span class="keyword">this</span>.f4430f = ((ag) f).m11716a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> NATION_CODE:</span><br><span class="line">                <span class="keyword">this</span>.f4431g = ((ag) f).m11716a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LANGUAGE:</span><br><span class="line">                <span class="keyword">this</span>.f4432h = ((ag) f).m11716a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SERIAL_NUMBER:</span><br><span class="line">                <span class="keyword">this</span>.f4433i = ((ag) f).m11716a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BATTERY_POWER_THRESHOLD:</span><br><span class="line">                <span class="keyword">this</span>.f4434j = ((ae) f).m11711a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid inquired type "</span> + cmVar.m11579e() + <span class="string">" was expected"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.f4437m != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.f4437m.countDown();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SMALI 指令码对应如下(com.sony.songpal.mdr.application.b.a)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.line 156</span><br><span class="line">    :pswitch_1</span><br><span class="line">    check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;</span><br><span class="line"> </span><br><span class="line">    invoke-virtual &#123;v0&#125;, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</span><br><span class="line"> </span><br><span class="line">    move-result-object v0</span><br><span class="line"> </span><br><span class="line">    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;-&gt;f:Ljava/lang/String;</span><br><span class="line"> </span><br><span class="line">    goto :goto_1</span><br></pre></td></tr></table></figure><p>把这玩意的SERVICE_ID那改成外国行货的ID就好了. 比如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> SERVICE_ID:</span><br><span class="line">    <span class="keyword">this</span>.f4430f = <span class="string">"MDRID123456"</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>但问题来了, 不知道外国行货的 ID 是多少, 可能ID是连着的, 于是我试了试 MDRID289200, 确认有这个型号. 于是修改 Apktool 解包的 SMALI 为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.line 156</span><br><span class="line">    :pswitch_1</span><br><span class="line">    #check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;</span><br><span class="line"> </span><br><span class="line">    #invoke-virtual &#123;v0&#125;, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</span><br><span class="line"> </span><br><span class="line">    #move-result-object v0</span><br><span class="line"> </span><br><span class="line">    const-string v0, &quot;MDRID289200&quot;</span><br><span class="line"> </span><br><span class="line">    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;-&gt;f:Ljava/lang/String;</span><br><span class="line"> </span><br><span class="line">    goto :goto_1</span><br></pre></td></tr></table></figure><p>重新用 Apktool 打包, 然后用自己的证书签名. 传到手机那, 成功检测到更新. 实测貌似没啥毛病，更新成了国外版本的 2.0.1 固件并且语音变成了英文. 于是自己也试了一下, 更新后貌似确实没啥毛病.</p><p>装回原版程序后再次用抓包抓了一下, 发现请求的 service id 已经变成了 MDRID289200. 大概不用担心以后又变回国行固件的问题.</p><h2 id="简要教程"><a href="#简要教程" class="headerlink" title="简要教程"></a>简要教程</h2><ol><li>用Apktool解包: <code>apktool d a.apk</code> (我为了方便文件名改成了a.apk), 这一步会创建一个名为a的文件夹</li><li>进入文件夹, 全局搜索<code>invoke-virtual {v0}, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</code>, 打开包含这一行的文件.</li><li>跳至 <code>.line 156</code>, 把里面的内容修改成我上面所述的内容.</li><li>重新打包: <code>apktool b a -o b.apk</code>, 这会生成b.apk</li><li>给b.apk签名, 这个网上都有教程我就不写了</li><li>把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行</li><li>把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行</li></ol><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前阵子 jd 入了个大法的 WH-1000XM2, 国行缺少了 google assistant,外加大妈的中文提示语音…实在是难受, 然后找刷成国际版的方法. google 一圈貌似已经发布了 2.0.1 的固件, 但配套的程序没提示更新.&lt;/p&gt;
&lt;h2 id=&quot;警告&quot;
      
    
    </summary>
    
      <category term="Android App" scheme="https://ocd0711.ml/categories/Android-App/"/>
    
    
      <category term="sony" scheme="https://ocd0711.ml/tags/sony/"/>
    
      <category term="sony headphone connect" scheme="https://ocd0711.ml/tags/sony-headphone-connect/"/>
    
      <category term="android app 反编译修改" scheme="https://ocd0711.ml/tags/android-app-%E5%8F%8D%E7%BC%96%E8%AF%91%E4%BF%AE%E6%94%B9/"/>
    
  </entry>
  
  <entry>
    <title>自编译 AOSP 下载地址</title>
    <link href="https://ocd0711.ml/2018/11/02/sony-aosp-build/"/>
    <id>https://ocd0711.ml/2018/11/02/sony-aosp-build/</id>
    <published>2018-11-01T19:00:01.000Z</published>
    <updated>2019-07-03T14:15:20.348Z</updated>
    
    <content type="html"><![CDATA[<p>这是自编译 AOSP (Pie) 下载地址, 不定期更新</p><a id="more"></a><p>更新日期:2018.11.02</p><p>Sony XZ2(akari): <a href="https://drive.google.com/open?id=1ASnigMBNDodnAYGPaNbiiyQ4e74asQWt" target="_blank" rel="noopener">点击跳转</a></p><p>Sony XZ1(Yoshino): <a href>暂未上传</a></p><p>Sony XZ Premiumg(maple): <a href="https://drive.google.com/open?id=1bQQNSfjUfOEgWg6XEXtR7Mkb_Sxzxmer" target="_blank" rel="noopener">点击跳转</a><br>BUG: 音量键位未指定,wifi/蓝牙 fc, camera2 api 未开启</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是自编译 AOSP (Pie) 下载地址, 不定期更新&lt;/p&gt;
    
    </summary>
    
      <category term="Android Build" scheme="https://ocd0711.ml/categories/Android-Build/"/>
    
    
      <category term="sony" scheme="https://ocd0711.ml/tags/sony/"/>
    
      <category term="android build download" scheme="https://ocd0711.ml/tags/android-build-download/"/>
    
  </entry>
  
  <entry>
    <title>OpenWRT自动更新软件包脚本</title>
    <link href="https://ocd0711.ml/2018/10/17/2018-10-17-OpenWRT-update-sh/"/>
    <id>https://ocd0711.ml/2018/10/17/2018-10-17-OpenWRT-update-sh/</id>
    <published>2018-10-17T03:03:26.000Z</published>
    <updated>2019-07-03T14:15:20.344Z</updated>
    
    <content type="html"><![CDATA[<p>首先新建一个shell脚本文件，如/root/autoupgrade.sh，加上执行权限，写入以下几行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">opkg update</span><br><span class="line"><span class="keyword">for</span> ipk <span class="keyword">in</span> $(opkg list-upgradable | awk <span class="string">'$1!~/^kmod|^Multiple/&#123;print $1&#125;'</span>); <span class="keyword">do</span></span><br><span class="line">opkg upgrade <span class="variable">$ipk</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>然后加入到计划任务中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#  文件格式说明</span><br><span class="line">#  ——分钟 (0 - 59)</span><br><span class="line"># |  ——小时 (0 - 23)</span><br><span class="line"># | |  ——日   (1 - 31)</span><br><span class="line"># | | |  ——月   (1 - 12)</span><br><span class="line"># | | | |  ——星期 (0 - 7)（星期日=0或7）</span><br><span class="line"># | | | | |</span><br><span class="line"># * * * * * 被执行的命令</span><br><span class="line"># 0 1 * * * /root/autoupgrade.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先新建一个shell脚本文件，如/root/autoupgrade.sh，加上执行权限，写入以下几行：&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;lin
      
    
    </summary>
    
      <category term="路由器" scheme="https://ocd0711.ml/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    
      <category term="OpenWRT" scheme="https://ocd0711.ml/tags/OpenWRT/"/>
    
  </entry>
  
  <entry>
    <title>Next 主题自动更换背景图片</title>
    <link href="https://ocd0711.ml/2018/09/29/change-background/"/>
    <id>https://ocd0711.ml/2018/09/29/change-background/</id>
    <published>2018-09-29T01:44:00.000Z</published>
    <updated>2019-07-03T14:15:20.346Z</updated>
    
    <content type="html"><![CDATA[<p>如果觉得 NexT的空白主题看腻了或者太多人用觉得不够个性化，那么不妨试试自动更新背景图片。</p><a id="more"></a><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><h3 id="图片来源"><a href="#图片来源" class="headerlink" title="图片来源"></a>图片来源</h3><p>自动更换背景的实现是修改添加背景的 css 样式实现。图片来源是 <a href="https://source.unsplash.com/" target="_blank" rel="noopener">unsplash</a></p><p>这个网站，里面不仅免费提供了很多高清美图，而且还提供api接口调用，实在是良心。这里实现的原理也是调用了这个网站的接口。</p><h2 id="修改背景样式"><a href="#修改背景样式" class="headerlink" title="修改背景样式"></a>修改背景样式</h2><p>修改themes\next\source\css<br>_custom\custom.styl文件，这个是Next故意留给用户自己个性化定制一些样式的文件，添加以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(https://source.unsplash.com/random/1600x900);</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果自己不喜欢这个网址提供的图片做背景，那么修改url()里面的路径即可。repeat、attachment、position就是调整图片的位置，不重复出现、不滚动等等。</p><h2 id="修改不透明度"><a href="#修改不透明度" class="headerlink" title="修改不透明度"></a>修改不透明度</h2><p>完成这一步其实背景就会自动更换了，但是会出现一个问题，因为next主题的背景是纯透明的，这样子就造成背景图片的影响看不见文字，这对于博客来说肯定不行。</p><p>那么就需要调整背景的不透明度了。同样是修改themes\next\source\css _custom\custom.styl文件。在后面添加如下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main-inner</span> &#123; </span><br><span class="line"></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">60px</span> <span class="number">60px</span> <span class="number">60px</span> <span class="number">60px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">500px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>background: #fff; 白色</li><li>opacity: 0.8;不透明度</li></ul><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>完成上述设置，我们来看看效果</p><p><img src="https://github.com/OCD0711/MyPostImages/raw/master/006tNc79gy1fvq67w13yqj31kw0x2u0z.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果觉得 NexT的空白主题看腻了或者太多人用觉得不够个性化，那么不妨试试自动更新背景图片。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://ocd0711.ml/categories/Hexo/"/>
    
    
      <category term="theme-NexT" scheme="https://ocd0711.ml/tags/theme-NexT/"/>
    
      <category term="unsplash" scheme="https://ocd0711.ml/tags/unsplash/"/>
    
  </entry>
  
  <entry>
    <title>OSX 和 windows 时间不同步解决方法</title>
    <link href="https://ocd0711.ml/2018/09/28/2018-9-27-OSX-windows-Fixed-time-out-of-sync-issue/"/>
    <id>https://ocd0711.ml/2018/09/28/2018-9-27-OSX-windows-Fixed-time-out-of-sync-issue/</id>
    <published>2018-09-28T05:19:00.000Z</published>
    <updated>2019-07-03T14:15:20.345Z</updated>
    
    <content type="html"><![CDATA[<p>OSX 和 windows 时间不同步解决方法</p><a id="more"></a><h2 id="教程正文"><a href="#教程正文" class="headerlink" title="教程正文"></a>教程正文</h2><hr><p>很多同学都是 mac osx 和 windows 双系统,但是有个问题,进入mac osx再进windows 时间就不对了这个是因为</p><p><strong>Windows 与 Mac缺省看待系统硬件时间的方式是不一样的：</strong></p><p>Windows把系统硬件时间当作本地时间(local time)，即操作系统中显示的时间跟BIOS中显示的时间是一样的。</p><p>Mac把硬件时间当作 UTC，操作系统中显示的时间是硬件时间经过换算得来的，比如说北京时间是GMT+8，则系统中显示时间是硬件时间+8这样，当PC中同时有多系统共存时，就出现了问题。</p><p>假如你的mac设置的时区都为北京时间东八区，当前系统时间为9：00AM。则此时硬件中存储的实际是UTC 时间1:00AM。这时你重启进入Windows后，你会发现windows系统中显示的时间是 1:00AM，比mac中慢了八个小时。</p><p>同理，你在Windows中更改或用网络同步了系统时间后，再到mac中去看，系统就会快了8小时。</p><p>解决这个问题的方法很简单：<br>修改 Windows 对硬件时间的对待方式，这样只在 Windows 上修改后就无需在mac上设置了。<br>让 Windows 把硬件时间当作 UTC</p><p>window7用户开始-&gt;运行-&gt;输入CMD</p><p>window8/10用户 WIN+x 选择管理员模式进入CMD</p><p>输入下面命令并回车<br>代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</span><br></pre></td></tr></table></figure><p>这样一来就不用在osx下安装时间补丁了.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;OSX 和 windows 时间不同步解决方法&lt;/p&gt;
    
    </summary>
    
      <category term="黑苹果" scheme="https://ocd0711.ml/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="windows" scheme="https://ocd0711.ml/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-NexT 主题修改页面透明度及页面颜色</title>
    <link href="https://ocd0711.ml/2018/09/26/2018-9-26-NexT-theme-Page-transparency-color/"/>
    <id>https://ocd0711.ml/2018/09/26/2018-9-26-NexT-theme-Page-transparency-color/</id>
    <published>2018-09-26T08:33:00.000Z</published>
    <updated>2019-07-03T14:15:20.345Z</updated>
    
    <content type="html"><![CDATA[<p>由于NexT主题默认的背景是不透明的，如果我们设置的有canvas_nest和canvas_three等3D动画效果，则会被文章界面遮住，本文主要讲述如何修改Hexo站点的页面透明度。</p><p>主要是通过修改CSS样式来实现</p><h2 id="文章部分"><a href="#文章部分" class="headerlink" title="文章部分"></a>文章部分</h2><hr><blockquote><p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// Post &amp; Comments blocks.</span><br><span class="line">.post-block &#123;</span><br><span class="line">  padding: $content-desktop-padding;</span><br><span class="line">- background: white;</span><br><span class="line">+ background: rgba(255,255,255,0.7);</span><br><span class="line">  box-shadow: $box-shadow-inner;</span><br><span class="line">  border-radius: $border-radius-inner;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="阅读全文按钮"><a href="#阅读全文按钮" class="headerlink" title="阅读全文按钮"></a>阅读全文按钮</h2><hr><blockquote><p>文件位置 ~Hexo根目录/themes/next/source/css/_variables/Pisces.style</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// Button</span><br><span class="line">  $btn-default-radius           = 2px</span><br><span class="line">- $btn-default-bg               = white</span><br><span class="line">+ $btn-default-bg               = rgba(255,255,255,0.5)</span><br><span class="line">  $btn-default-color            = $text-color</span><br><span class="line">  $btn-default-border-color     = $text-color</span><br><span class="line">  $btn-default-hover-color      = white</span><br><span class="line">  $btn-default-hover-bg         = $black-deep</span><br></pre></td></tr></table></figure><h2 id="分页部分"><a href="#分页部分" class="headerlink" title="分页部分"></a>分页部分</h2><hr><blockquote><p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// Pagination.</span><br><span class="line">.pagination &#123;</span><br><span class="line">  .prev, .next, .page-number &#123;</span><br><span class="line">    margin-bottom: initial;</span><br><span class="line">    top: initial;</span><br><span class="line">  &#125;</span><br><span class="line">  margin: sboffset 0 0;</span><br><span class="line">- background: white;</span><br><span class="line">+ background: rgba(255,255,255,0.7);</span><br><span class="line">  box-shadow: $box-shadow;</span><br><span class="line">  border-radius: $border-radius;</span><br><span class="line">  padding: 10px 0 10px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="评论区部分"><a href="#评论区部分" class="headerlink" title="评论区部分"></a>评论区部分</h2><hr><blockquote><p>~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// Comments blocks.</span><br><span class="line">.comments &#123;</span><br><span class="line">  padding: $content-desktop-padding;</span><br><span class="line">  margin: initial;</span><br><span class="line">  margin-top: sboffset;</span><br><span class="line">- background: white;</span><br><span class="line">+ background: rgba(255,255,255,0.7);</span><br><span class="line">  box-shadow: $box-shadow;</span><br><span class="line">  border-radius: $border-radius;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="侧栏菜单界面"><a href="#侧栏菜单界面" class="headerlink" title="侧栏菜单界面"></a>侧栏菜单界面</h2><hr><blockquote><p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_layout.style</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">.header-inner &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 0;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  padding: 0;</span><br><span class="line">  width: $sidebar-desktop;</span><br><span class="line">- background: white;</span><br><span class="line">+ background: rgba(255,255,255,0.7);</span><br><span class="line">  box-shadow: $box-shadow-inner;</span><br><span class="line">  border-radius: $border-radius-inner;</span><br><span class="line"></span><br><span class="line">  +desktop-large() &#123;</span><br><span class="line">    .container &amp; &#123; width: $sidebar-desktop; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  +tablet() &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: auto;</span><br><span class="line">    border-radius: initial;</span><br><span class="line">  &#125;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: auto;</span><br><span class="line">    border-radius: initial;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="个人资料界面"><a href="#个人资料界面" class="headerlink" title="个人资料界面"></a>个人资料界面</h2><hr><blockquote><p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_sidebar.style</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.sidebar-inner &#123;</span><br><span class="line">//padding: 20px 10px 0;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  width: $sidebar-desktop;</span><br><span class="line">  color: $text-color;</span><br><span class="line">- background: white;</span><br><span class="line">+ background: rgba(255,255,255,0.7);</span><br><span class="line">  box-shadow: $box-shadow;</span><br><span class="line">  border-radius: $border-radius;</span><br><span class="line">  if (hexo-config(&apos;motion.enable&apos;) and hexo-config(&apos;motion.transition.sidebar&apos;)) &#123; opacity: 0; &#125;</span><br><span class="line"></span><br><span class="line">  &amp;.affix &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    top: $sidebar-offset;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于NexT主题默认的背景是不透明的，如果我们设置的有canvas_nest和canvas_three等3D动画效果，则会被文章界面遮住，本文主要讲述如何修改Hexo站点的页面透明度。&lt;/p&gt;
&lt;p&gt;主要是通过修改CSS样式来实现&lt;/p&gt;
&lt;h2 id=&quot;文章部分&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="Hexo" scheme="https://ocd0711.ml/categories/Hexo/"/>
    
    
      <category term="NexT" scheme="https://ocd0711.ml/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>OpenWrt 自动更新设置和屏蔽广告</title>
    <link href="https://ocd0711.ml/2018/09/22/2018-9-22-OpenWrt-auto-update-and-adblock/"/>
    <id>https://ocd0711.ml/2018/09/22/2018-9-22-OpenWrt-auto-update-and-adblock/</id>
    <published>2018-09-22T07:55:00.000Z</published>
    <updated>2019-07-03T14:15:20.345Z</updated>
    
    <content type="html"><![CDATA[<h2 id="OpenWrt-路由器自动更新国内重要网站名单"><a href="#OpenWrt-路由器自动更新国内重要网站名单" class="headerlink" title="OpenWrt 路由器自动更新国内重要网站名单"></a>OpenWrt 路由器自动更新国内重要网站名单</h2><hr><p>登陆路由器后:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@OpenWrt:~# cd /usr/bin</span><br><span class="line">root@OpenWrt:~# touch chinalist</span><br><span class="line">root@OpenWrt:~# chmod +x chinalist</span><br><span class="line">root@OpenWrt:~# vi chinalist</span><br></pre></td></tr></table></figure><p>/usr/bin/chinalist:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh                                                                                                                                                               </span><br><span class="line"></span><br><span class="line">wget -4 --no-check-certificate -O /etc/dnsmasq.d/accelerated-domains.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/accelerated-domains.china.conf</span><br><span class="line">wget -4 --no-check-certificate -O /etc/dnsmasq.d/bogus-nxdomain.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/bogus-nxdomain.china.conf</span><br></pre></td></tr></table></figure><h2 id="OpenWrt-路由器自动屏蔽广告"><a href="#OpenWrt-路由器自动屏蔽广告" class="headerlink" title="OpenWrt 路由器自动屏蔽广告"></a>OpenWrt 路由器自动屏蔽广告</h2><hr><p>/etc/dnsmasq.d 下有个 blockad.conf 文件, 内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server=/.mobads.baidu.com/127.0.0.0</span><br><span class="line">server=/.mobads-logs.baidu.com/127.0.0.0</span><br><span class="line">server=/.media.admob.com/127.0.0.0</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>意思是 /mobads.baidu.com 的域名解析转发到 127.0.0.0, 这个地址不具备域名解析的功能, 于是就达到了屏蔽广告的功能.</p><p>运行命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@OpenWrt:~# cd /usr/bin</span><br><span class="line">root@OpenWrt:~# touch blockad</span><br><span class="line">root@OpenWrt:~# chmod +x blockad</span><br><span class="line">root@OpenWrt:~# vi blockad</span><br></pre></td></tr></table></figure><p>/usr/bin/blockad:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line"># Author:    https://github.com/softwaredownload/openwrt-fanqiang</span><br><span class="line"># Date:        2016-01-09</span><br><span class="line"></span><br><span class="line">TMP_HOSTS=/tmp/block.hosts.unsorted</span><br><span class="line">HOSTS=/etc/dnsmasq.d/blockad.conf</span><br><span class="line"></span><br><span class="line"># remove any old TMP_HOSTS that might have stuck around</span><br><span class="line">rm $&#123;TMP_HOSTS&#125; 2&gt; /dev/null</span><br><span class="line"></span><br><span class="line">for URL in \</span><br><span class="line">    &quot;https://raw.githubusercontent.com/vokins/simpleu/master/hosts&quot; \</span><br><span class="line">    &quot;http://adaway.org/hosts.txt&quot;</span><br><span class="line">do</span><br><span class="line">    # filter out comment lines, empty lines, localhost... </span><br><span class="line">    # remove trailing comments, space( ,tab), empty line</span><br><span class="line">    # replace line to dnsmasq format</span><br><span class="line">    # remove carriage returns</span><br><span class="line">    # append the results to TMP_HOSTS</span><br><span class="line">    wget -4 --no-check-certificate -qO- &quot;$&#123;URL&#125;&quot; | grep -v -e &quot;^#&quot; -e &quot;^\s*$&quot; -e &quot;localhost&quot; -e &quot;^;&quot; -e &quot;^@&quot; -e &quot;^:&quot; -e &quot;^[a-zA-Z]&quot; \</span><br><span class="line">    | sed -E -e &quot;s/#.*$//&quot; -e &quot;s/[[:space:]]*//g&quot; -e &quot;/^$/d&quot; \</span><br><span class="line">    -e &quot;s/^127.0.0.1/server=\/./&quot; -e &quot;s/0.0.0.0/server=\/./&quot; -e &quot;/^[0-9].*$/d&quot; -e &quot;s/$/\/127.0.0.0/&quot; \</span><br><span class="line">    | tr -d &quot;\r&quot; &gt;&gt; $&#123;TMP_HOSTS&#125;</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"># remove duplicate hosts and save the real hosts file</span><br><span class="line">sort $&#123;TMP_HOSTS&#125; | uniq &gt; $&#123;HOSTS&#125;</span><br><span class="line"></span><br><span class="line">rm $&#123;TMP_HOSTS&#125; 2&gt; /dev/null</span><br></pre></td></tr></table></figure><p>OpenWrt 自动生成广告屏蔽列表说明:</p><p>第一个 URL 主要用于国内, 下面几个 URL 是屏蔽国外广告<br>运行上面命令产生的广告屏蔽列表比较长, 如果路由器性能较差, dnsmasq 匹配域名负荷会太大, 可以用下面这个简化版的文件, 不要用上面的脚本:</p><blockquote><p><a href="https://github.com/softwaredownload/openwrt-fanqiang/blob/master/openwrt/dir505/etc/dnsmasq.d/blockad.conf" target="_blank" rel="noopener">https://github.com/softwaredownload/openwrt-fanqiang/blob/master/openwrt/dir505/etc/dnsmasq.d/blockad.conf</a></p></blockquote><p>如果dnsmasq超负荷工作，可能会失去响应，导致打不开网页，这时需要登录路由器运行命令：</p><p><code>/etc/init.d/dnsmasq restart</code></p><p>所以，还是尽量用性能好点的路由器吧<br>路由器性能比电脑差很多，如果屏蔽列表很长，那么短时间内快速打开数个网页就可能导致dnsmasq失去响应。最好是看完一个网页就关闭一个，再打开新的网页。<br>在路由器里屏蔽的好处是所有接入路由器的设备都全部起作用。<br>通常的做法，在路由器里屏蔽部分域名，然后在电脑里设置更广泛、精确的屏蔽，主要是设置host文件屏蔽和浏览器插件屏蔽。<br>浏览器插件屏蔽，可以装这些Chrome浏览器插件：uBlock Origin，ADfree.Player.Online。其中uBlock Origin的作用和Adblock Plus类似，但是设置更加丰富。</p><h2 id="计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks"><a href="#计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks" class="headerlink" title="计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks"></a>计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@OpenWrt:~# crontab -e</span><br></pre></td></tr></table></figure><p>输入以下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*/30 * * * * isfound=$(ps | grep &quot;ss-redir&quot; | grep -v &quot;grep&quot;); if [ -z &quot;$isfound&quot; ]; then echo &quot;$(date): restart ss-redir...&quot;&gt;&gt;/tmp/log/ss-monitor.log &amp;&amp; /etc/init.d/shadowsocks restart; fi</span><br><span class="line">* 12 * * * /usr/bin/chinalist</span><br><span class="line">* 12 * * * /usr/bin/blockad</span><br></pre></td></tr></table></figure><p>OpenWrt计划任务说明：</p><ul><li>每半小时检查shadowsocks-libev 客户端，如果退出就自动重启</li><li>每天中午12点运行chinalist</li><li>每天中午12点运行blockad</li></ul><p>2014-09-24版的dir505, wr2543预编译固件是启用了计划任务的，这会有潜在的不确定性，如果更新时下载的文件如accelerated-domains.china.conf存在错误，导致dnsmasq无法启动，翻墙功能自然失效。</p><p>如果你启用了计划任务，某一天突然不能翻墙了，这时设置客户端的IP地址为和路由器同网段，登录路由器，用ps命令查看dnsmasq进程是否启动了，如果没有启动，就重刷固件或者用[点击跳转](<a href="https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d" target="_blank" rel="noopener">https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d</a> “<a href="https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d”" target="_blank" rel="noopener">https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d”</a>)<br>下面的文件代替 路由器里/etc/dnsmasq.d/下的文件。</p><h2 id="附录：计划任务定时关闭路由器OpenWrt"><a href="#附录：计划任务定时关闭路由器OpenWrt" class="headerlink" title="附录：计划任务定时关闭路由器OpenWrt"></a>附录：计划任务定时关闭路由器OpenWrt</h2><hr><p>人类的本性是目光短浅，玩得一时兴趣就会忘记定时休息的重要性。解决办法是在路由器里设置计划任务，禁止夜里某个时间段里使用路由器。下面的例子中，每20分钟检测一次，如果迟于20点30或者早于7点就自动关闭OpenWrt。这对小孩子特别有用，现在很多孩子使用电子设备上瘾，一个人睡的话甚至半夜在被窝里偷偷上网，现在好了，除非孩子强大到会登陆路由器修改设置，否则半夜重启路由器都无法上网了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/20 * * * * TIME=$(date +&quot;%H%M&quot;); if [ $TIME -ge 2030 ] || [ $TIME -le 700 ]; then poweroff; fi</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h2><blockquote><p><a href="https://github.com/vokins/simpleu" target="_blank" rel="noopener">https://github.com/vokins/simpleu</a><br><a href="https://github.com/jjack/openwrt-adblock" target="_blank" rel="noopener">https://github.com/jjack/openwrt-adblock</a><br><a href="https://github.com/felixonmars/dnsmasq-china-list" target="_blank" rel="noopener">https://github.com/felixonmars/dnsmasq-china-list</a><br>install-shadowsocks-on-hg255d-openwrt-and-config-nat<br><a href="https://pcjetzt.com/vpn-test-besten-vpn-anbieter-im-vergleich/" target="_blank" rel="noopener">https://pcjetzt.com/vpn-test-besten-vpn-anbieter-im-vergleich/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;OpenWrt-路由器自动更新国内重要网站名单&quot;&gt;&lt;a href=&quot;#OpenWrt-路由器自动更新国内重要网站名单&quot; class=&quot;headerlink&quot; title=&quot;OpenWrt 路由器自动更新国内重要网站名单&quot;&gt;&lt;/a&gt;OpenWrt 路由器自动更新国内
      
    
    </summary>
    
      <category term="路由器" scheme="https://ocd0711.ml/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    
      <category term="广告过滤" scheme="https://ocd0711.ml/tags/%E5%B9%BF%E5%91%8A%E8%BF%87%E6%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>clover 注入白果三码实现 imessage 正常使用</title>
    <link href="https://ocd0711.ml/2018/09/21/2018-9-21-clover-UUID/"/>
    <id>https://ocd0711.ml/2018/09/21/2018-9-21-clover-UUID/</id>
    <published>2018-09-21T01:11:00.000Z</published>
    <updated>2019-07-03T14:15:20.345Z</updated>
    
    <content type="html"><![CDATA[<p><strong>注入白果三码实现 iMessage 与 FaceTime 正常使用</strong></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>此法需建立在你有白苹果信息的情况下才能使用<br>完成后你将登陆任意appleid都不需要打电话激活</p></blockquote><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>首先你需要 iMessageDebug 这个工具来读取白果的三码</p><p>iMessageDebug 使用起来很方便首先需要一台白苹果，下载到机器上，或者U盘拷贝。。。。</p><ol><li>将 iMessageDebug 文件拖到桌面</li><li>打开终端</li><li>输入（chmod a+x ）桌面的 iMessageDebug 拖入终端按回车键（也许要输入用户密码）</li><li>sh iMessageDebug</li></ol><p>这样就获得了三码了，选择y是将三码生成文本发送到 Download 文件夹。</p><h2 id="Clover-的配置"><a href="#Clover-的配置" class="headerlink" title="Clover 的配置"></a>Clover 的配置</h2><p><img src="/images/image.png" alt="overwrote existing file"></p><p>填入主板MLB序列号和ROM（MLB就是BoardSerialNumber：XXXXXX）</p><p><img src="/images/image1.png" alt="upload successful"></p><ol><li>BoardSerialNumber 上写入你的mlb码（其实可不写）</li><li>“重点” smuuid 上写你的Hardware UUID，一定要照搬 不要改写后 12 位为 rom 码</li><li>序列号填写</li></ol><p><img src="/images/image2.png" alt="upload successful"></p><ol><li>(重点)写入你的 System-ID</li><li>注入 kext 是配置 clover 必选的</li><li>就是最重点的了 一定务必开启 inject System ID,如果不选的话，会导致 custom uuid 和 System-ID 数据颠倒</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;注入白果三码实现 iMessage 与 FaceTime 正常使用&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="黑苹果" scheme="https://ocd0711.ml/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="MacOS" scheme="https://ocd0711.ml/tags/MacOS/"/>
    
      <category term="Clover" scheme="https://ocd0711.ml/tags/Clover/"/>
    
      <category term="iMessage" scheme="https://ocd0711.ml/tags/iMessage/"/>
    
      <category term="FaceTime" scheme="https://ocd0711.ml/tags/FaceTime/"/>
    
  </entry>
  
  <entry>
    <title>Build Android on MacOS preparation</title>
    <link href="https://ocd0711.ml/2018/09/20/2018-9-20-Build-Android-on-MacOS-preparation/"/>
    <id>https://ocd0711.ml/2018/09/20/2018-9-20-Build-Android-on-MacOS-preparation/</id>
    <published>2018-09-20T01:26:01.000Z</published>
    <updated>2019-07-03T14:15:20.344Z</updated>
    
    <content type="html"><![CDATA[<p>This passage introduces a way to build Android on MacOS (NEW)</p><a id="more"></a><p><strong>Caution</strong>: 由于最新Xcode9编译Android源码问题很多，使用旧版Xcode 8.3.3</p><h2 id="编译前的准备工作"><a href="#编译前的准备工作" class="headerlink" title="编译前的准备工作"></a>编译前的准备工作</h2><p><strong>Xcode8.3.3</strong></p><ol><li><p>下载地址:(<a href="https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode8.3.3.xip" target="_blank" rel="noopener">https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode8.3.3.xip</a>)</p></li><li><p>切换Xcode版本<br><code>$ xcode-select --switch $PATH/Xcode.app</code></p></li></ol><p><strong>编译需要的软件包</strong></p><ol><li><p>(<a href="https://brew.sh/" target="_blank" rel="noopener">brew</a> 使用详见官网)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install bash-completion coreutils e2fsprogs findutilsgit gnu-sed gnupg gnutls imagemagick make maven md5sha1sum openssl repo sdl sdl2</span><br></pre></td></tr></table></figure></li><li><p>环境变量<br><code>$ vim ~/.bash_profile</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/findutils/libexec/gnubin:/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/opt/make/libexec/gnubin:$PATH</span><br></pre></td></tr></table></figure></li></ol><p><strong>Set the number of open files to be 1024</strong></p><p><code>ulimit -S -n 1024</code></p><p><strong>Jack memory</strong></p><pre><code>export ANDROID_JACK_VM_ARGS=&quot;-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G&quot;</code></pre><p><strong>python2</strong></p><ol><li>编译时用到python2命令，mac里只有python2.7 软链接成python2即可<br><code>$ ln /usr/bin/python2.7 /usr/bin/python2</code></li></ol><p><strong>bison报错</strong></p><ol><li>目前Android源码自带的bison不兼容macOS10.13新引入的一些安全限制。需要打补丁编译并替换源码自带的bison。以后源码更新应该会修复就不需要了<blockquote><p>详情可见 <a href="https://groups.google.com/forum/?fromgroups#!topic/android-building/D1-c5lZ9Oco" target="_blank" rel="noopener">android-building</a></p></blockquote></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">​$ cd external/bison</span><br><span class="line"></span><br><span class="line">$ git cherry-pick c0c852bd6fe462b148475476d9124fd740eba160</span><br><span class="line"></span><br><span class="line">$ mm</span><br><span class="line"></span><br><span class="line">$ cp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/bison</span><br></pre></td></tr></table></figure><h2 id="除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​"><a href="#除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​" class="headerlink" title="除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​"></a>除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This passage introduces a way to build Android on MacOS (NEW)&lt;/p&gt;
    
    </summary>
    
      <category term="Android Build" scheme="https://ocd0711.ml/categories/Android-Build/"/>
    
    
      <category term="MacOS" scheme="https://ocd0711.ml/tags/MacOS/"/>
    
      <category term="Android Build" scheme="https://ocd0711.ml/tags/Android-Build/"/>
    
  </entry>
  
  <entry>
    <title>Install ArchLinux on MacBook 2016 and later</title>
    <link href="https://ocd0711.ml/2018/06/08/2018-06-08-Install-Arch-Linux-Macbook-13/"/>
    <id>https://ocd0711.ml/2018/06/08/2018-06-08-Install-Arch-Linux-Macbook-13/</id>
    <published>2018-06-08T01:26:01.000Z</published>
    <updated>2019-07-08T06:13:55.169Z</updated>
    
    <content type="html"><![CDATA[<p>This passage introduces a way to install Arch Linux on MacBook that releases in 2016 and 2017</p><a id="more"></a><p><strong>Caution</strong>: You should be aware that some functions may not work properly. Do it on your own risk!</p><h2 id="1-Overview"><a href="#1-Overview" class="headerlink" title="1. Overview"></a>1. Overview</h2><p><strong>What works</strong>:</p><p><strong>1. On booting</strong></p><ul><li><input checked disabled type="checkbox"> Booting</li><li><input checked disabled type="checkbox"> Disks</li><li><input checked disabled type="checkbox"> HiDPI</li><li><input checked disabled type="checkbox"> Accelerated Video</li><li><input checked disabled type="checkbox"> Keyboard Backlight</li><li><input checked disabled type="checkbox"> USB</li><li><input checked disabled type="checkbox"> Screen Brightness Control</li><li><input checked disabled type="checkbox"> Sensors</li><li><input checked disabled type="checkbox"> Bluetooth</li></ul><p><strong>2. Require modules installed</strong></p><ul><li><input checked disabled type="checkbox"> Keyboard, touchbar and trackpad</li></ul><p><strong>3. Partly Working</strong></p><ul><li><input disabled type="checkbox"> WiFi (Has some improving method)</li></ul><p><strong>4. Not work</strong></p><ul><li><input disabled type="checkbox"> Suspend/Resume</li><li><input disabled type="checkbox"> Audio (two cards show up, and intel driver is loaded, but no sound)</li></ul><p><strong>Notice</strong>: You may refer to <a href="https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7" target="_blank" rel="noopener">roadrunner’s Gist</a> for a more accurate list.</p><h2 id="2-Preparation"><a href="#2-Preparation" class="headerlink" title="2. Preparation"></a>2. Preparation</h2><h3 id="2-1-Hardware"><a href="#2-1-Hardware" class="headerlink" title="2.1 Hardware"></a>2.1 Hardware</h3><p>In this installation, you  need a <strong>USB Stick more than 2 GB</strong>, a <strong>Keybord</strong>, A stable internet connection through tethering, and also, USB Hubs.</p><p><strong>Notice</strong>: This guide uses phone USB tethering and you had better not directly connect to WiFi as it is unstable.</p><h3 id="2-2-Software"><a href="#2-2-Software" class="headerlink" title="2.2 Software"></a>2.2 Software</h3><ol><li>Download the latest <strong>ArchLinux iso</strong></li><li>Burn it to your <strong>USB sticker</strong> - Use the command <code>dd</code> to achieve this.</li><li><strong>rEFInd Boot Manager</strong> - Used to boot your MacBook to ArchLinux</li></ol><p><strong>Notice</strong>: Refer to <code>dd</code> and <code>rEFInd</code>‘s manual for more information!</p><h2 id="3-Basic-Installation"><a href="#3-Basic-Installation" class="headerlink" title="3. Basic Installation"></a>3. Basic Installation</h2><h3 id="3-1-Booting-amp-Setting-up"><a href="#3-1-Booting-amp-Setting-up" class="headerlink" title="3.1 Booting &amp; Setting up"></a>3.1 Booting &amp; Setting up</h3><ol><li>Insert USB Sticker and reboot your MacBook, in the rEFInd menu, select the efi option for booting ArchLinux, and enter the Installation Environment.</li><li>Connect your keyboard and your phone to MacBook (your phone may need to connect to WiFi in order to not result in high Cellar fee.) </li><li>Set up tethering: In your phone, click <strong>Settings</strong> &gt; <strong>Network &amp; Internet</strong> &gt; <strong>Hotspot &amp; tethering</strong> &gt; <strong>USB Tethering</strong> and turn it on.</li><li>In the computer, type <code>dhcpcd</code> to set up the carrier interface and use <code>ping archlinux.org</code> to test your connection.</li></ol><h3 id="3-2-Partitioning"><a href="#3-2-Partitioning" class="headerlink" title="3.2 Partitioning"></a>3.2 Partitioning</h3><p><strong>Warning</strong>: Do it carefully!</p><ol><li><p>Use <code>fdisk -l</code> to check your partition table.</p></li><li><p>Look for the disk you want to install ArchLinux (<code>sda</code> <code>sdb</code> …)</p></li><li><p>If you could see a <code>EFI Partition</code> then please ignore the section with the mark <code>*</code></p></li><li><p>Use <code>fdisk sdX</code> to dig into your disk. Enter <code>p</code> for a table.</p></li><li><p>Partition your Disk. ( * You should create a partition of about <strong>500M</strong> at the start the partition table)</p></li><li><p>* Set EFI Partition</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parted sdX</span><br><span class="line"><span class="built_in">set</span> 1 boot on</span><br></pre></td></tr></table></figure></li><li><p>Format</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sdXy</span><br><span class="line">mkfs.vfat /dev/sda1*</span><br></pre></td></tr></table></figure></li><li><p>Mount</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdXy /mnt</span><br><span class="line">mkdir -p /mnt/boot</span><br><span class="line">mount /dev/sda /mnt/boot</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-3-Install"><a href="#3-3-Install" class="headerlink" title="3.3 Install"></a>3.3 Install</h3><p>   <strong>Notice</strong>: You may need to edit <code>/etc/pacman.d/mirrorlist</code> to choose a mirror<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacstrap /mnt base base-devel grub efibootmgr wireless_tools vim</span><br><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure></p><h3 id="3-4-Chroot"><a href="#3-4-Chroot" class="headerlink" title="3.4 Chroot"></a>3.4 Chroot</h3><p>Chroot into the system</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><p>and follow the official <a href="https://wiki.archlinux.org/index.php/installation_guide" target="_blank" rel="noopener">ArchLinux Instruction</a> set up your <code>hostname</code> <code>timezone</code> etc.</p><h4 id="3-4-1-Install-GRUB-Loader"><a href="#3-4-1-Install-GRUB-Loader" class="headerlink" title="3.4.1 Install GRUB ( Loader )"></a>3.4.1 Install GRUB ( Loader )</h4><p>Stay in the chroot mode and use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grub-install --efi-directory=/boot</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h2 id="4-MacBook-Specified-Configurations"><a href="#4-MacBook-Specified-Configurations" class="headerlink" title="4. MacBook Specified Configurations"></a>4. MacBook Specified Configurations</h2><h3 id="4-1-Make-Keyboard-Work"><a href="#4-1-Make-Keyboard-Work" class="headerlink" title="4.1 Make Keyboard Work"></a>4.1 Make Keyboard Work</h3><p>Install the Driver:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pacman -S linux-headers</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/roadrunner2/macbook12-spi-driver.git</span><br><span class="line"><span class="built_in">pushd</span> macbook12-spi-driver</span><br><span class="line">git checkout touchbar-driver-hid-driver</span><br><span class="line">sudo ln -s `<span class="built_in">pwd</span>` /usr/src/applespi-0.1</span><br><span class="line">sudo dkms install applespi/0.1</span><br><span class="line"><span class="built_in">popd</span></span><br></pre></td></tr></table></figure><p>Configure mkinitcpio.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/mkinitcpio.conf</span><br></pre></td></tr></table></figure><p>and in the <code>modules</code> section add :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Modules = (applespi intel_lpss_pci spi_pxa2xx_platform appletb)</span><br></pre></td></tr></table></figure><p>Then use <code>mkinitcpio -p linux</code> to load them on next boot.</p><p>Change sensitivity:<br>Save the two following two files to <code>/etc/udev/hwdb.d/</code>:</p><p><a href="https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#file-61-evdev-local-hwdb" target="_blank" rel="noopener">61-evdev-local.hwdb</a><br><a href="https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb" target="_blank" rel="noopener">61-libinput-local.hwdb</a> </p><p> <strong>Note</strong>: You can also see them in the appendix.</p><p> Reboot and enjoy.</p><h3 id="4-2-WiFi-improvements"><a href="#4-2-WiFi-improvements" class="headerlink" title="4.2 WiFi improvements"></a>4.2 WiFi improvements</h3><p>There are two ways to change the bad WiFi condition and the discussion is <a href="https://bugzilla.kernel.org/show_bug.cgi?id=193121" target="_blank" rel="noopener">here</a>.</p><h4 id="4-2-1-Edit-the-driver"><a href="#4-2-1-Edit-the-driver" class="headerlink" title="4.2.1 Edit the driver"></a>4.2.1 Edit the driver</h4><p>As <a href="https://bugzilla.kernel.org/show_bug.cgi?id=193121#c25" target="_blank" rel="noopener">here</a> suggests:<br>Use hex editor to change the <code>/lib/firmware/brcm/brcmfmac43602-pcie.bin</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/lib/firmware/brcm/brcmfmac43602-pcie.bin</span><br><span class="line">  offset     0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF    0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF</span><br><span class="line">0x00000000  80f140b882f1a4b982f1b0b982f1bcb9 ..@.............   80f140b882f1a4b982f1b0b982f1bcb9 ..@.............</span><br><span class="line">0x00000010  82f1cbb982f1dab982f1e9b982f1f8b9 ................   82f1cbb982f1dab982f1e9b982f1f8b9 ................</span><br><span class="line">...</span><br><span class="line">0x0007c820! 30643a66343a33650063636f64653d58 0d:f4:3e.ccode=X   30643a66343a33650063636f64653d30 0d:f4:3e.ccode=0</span><br><span class="line">0x0007c830! 30007265677265763d31350061613267 0.regrev=15.aa2g   00007265677265763d30000061613267 ..regrev=0..aa2g</span><br><span class="line">0x0007c840  3d3700616135673d370061676267303d =7.aa5g=7.agbg0=   3d3700616135673d370061676267303d =7.aa5g=7.agbg0=</span><br><span class="line">0x0007c850  37310061676267313d37310061676267 71.agbg1=71.agbg   37310061676267313d37310061676267 71.agbg1=71.agbg</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p><strong>Note</strong>: As I changed the file, I cannot connect to any WiFi networks. More Investigation required.</p><h4 id="4-2-2-Change-the-txpower"><a href="#4-2-2-Change-the-txpower" class="headerlink" title="4.2.2 Change the txpower"></a>4.2.2 Change the txpower</h4><p>This is simple (see <a href="https://bugzilla.kernel.org/show_bug.cgi?id=193121#c28" target="_blank" rel="noopener">#10</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip link <span class="built_in">set</span> wlp2s0 up   <span class="comment"># if not already up</span></span><br><span class="line">iwconfig wlp2s0 txpower 10dBm</span><br></pre></td></tr></table></figure><h2 id="5-Appendix"><a href="#5-Appendix" class="headerlink" title="5. Appendix"></a>5. Appendix</h2><p><strong>61-evdev-local.hwdb</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># MacBook8,1 (2015), MacBook9,1 (2016), MacBook10,1 (2017)</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook8,1:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook9,1:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook10,1:*</span><br><span class="line"> EVDEV_ABS_00=::95</span><br><span class="line"> EVDEV_ABS_01=::90</span><br><span class="line"> EVDEV_ABS_35=::95</span><br><span class="line"> EVDEV_ABS_36=::90</span><br><span class="line"></span><br><span class="line"># MacBookPro13,* (Late 2016), MacBookPro14,* (Mid 2017)</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,1:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,2:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,1:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,2:*</span><br><span class="line"> EVDEV_ABS_00=::96</span><br><span class="line"> EVDEV_ABS_01=::94</span><br><span class="line"> EVDEV_ABS_35=::96</span><br><span class="line"> EVDEV_ABS_36=::94</span><br><span class="line"></span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,3:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,3:*</span><br><span class="line"> EVDEV_ABS_00=::96</span><br><span class="line"> EVDEV_ABS_01=::95</span><br><span class="line"> EVDEV_ABS_35=::96</span><br><span class="line"> EVDEV_ABS_36=::95</span><br></pre></td></tr></table></figure><p> <strong>61-libinput-local.hwdb</strong></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">libinput:name:*Apple SPI Touchpad*:dmi:*</span><br><span class="line">LIBINPUT_MODEL_APPLE_TOUCHPAD=1</span><br><span class="line">LIBINPUT_ATTR_KEYBOARD_INTEGRATION=internal</span><br><span class="line">LIBINPUT_ATTR_TOUCH_SIZE_RANGE=200:150</span><br><span class="line">LIBINPUT_ATTR_PALM_SIZE_THRESHOLD=1200</span><br></pre></td></tr></table></figure><h2 id="6-Credits"><a href="#6-Credits" class="headerlink" title="6. Credits"></a>6. Credits</h2><ol><li><a href="https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb" target="_blank" rel="noopener">Roadrunner’s gist</a></li><li><a href="https://bugzilla.kernel.org/show_bug.cgi?id=193121" target="_blank" rel="noopener">Many awesome people in bugzilla</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This passage introduces a way to install Arch Linux on MacBook that releases in 2016 and 2017&lt;/p&gt;
    
    </summary>
    
      <category term="Computer" scheme="https://ocd0711.ml/categories/Computer/"/>
    
    
      <category term="ArchLinux" scheme="https://ocd0711.ml/tags/ArchLinux/"/>
    
  </entry>
  
</feed>
