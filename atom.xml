<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>OCD Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ocd.ooo/"/>
  <updated>2018-11-26T03:32:37.620Z</updated>
  <id>https://ocd.ooo/</id>
  
  <author>
    <name>OCD</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Trees</title>
    <link href="https://ocd.ooo/2018/11/26/2017-12-08-Trees/"/>
    <id>https://ocd.ooo/2018/11/26/2017-12-08-Trees/</id>
    <published>2018-11-26T03:32:37.620Z</published>
    <updated>2018-11-26T03:32:37.620Z</updated>
    
    <content type="html"><![CDATA[<p>In a <code>Tree</code>, the running time for most operations is <strong>O(logN)</strong></p><a id="more"></a><h2 id="4-1-Preliminaries"><a href="#4-1-Preliminaries" class="headerlink" title="4.1 Preliminaries"></a>4.1 Preliminaries</h2><ul><li>A <code>tree</code> can be defined in several ways. One natural way to define a tree is <strong>recursively</strong>.<ul><li>A <code>tree</code> is a collection of <em>nodes</em>.</li><li>If not empty, a <code>tree</code> consists of a distinguished node _r_, called the <strong>root</strong>, and zero or more nonempty (sub)trees _T1_, _T2_, …. , _Tk_, each of whose roots are connected by a directed <em>edge</em> from _r_</li><li>The <em>root</em> of each subtree is said to be a <strong>child</strong> of _r_, and _r_ is the parent of each subtree root.</li></ul></li></ul><p><img src="/images/tree.svg" alt="tree"> </p><p><strong>Figure 4.1</strong> A tree</p><h3 id="4-1-1-Implementation-of-Trees"><a href="#4-1-1-Implementation-of-Trees" class="headerlink" title="4.1.1 Implementation of Trees"></a>4.1.1 Implementation of Trees</h3><p>The solution is simple:<br>    Keep the children of each node in a linked list of tree nodes.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ElementType int</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span>* <span class="title">PtrToNode</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ElementType Element;</span><br><span class="line">PtrToNode FirstChild;</span><br><span class="line">PtrToNode NextSibling;</span><br><span class="line">&#125;;</span><br><span class="line">``` </span><br><span class="line">`FirstChild` points to the head of its child </span><br><span class="line">`NextSibling` points to its brother in the linked <span class="built_in">list</span></span><br><span class="line"></span><br><span class="line">### <span class="number">4.1</span><span class="number">.2</span> Tree Traversals with an Application</span><br><span class="line">The structure of a Unix file system.</span><br><span class="line">`/usr`</span><br><span class="line">__Codes to imply <span class="keyword">this</span> idea:__</span><br><span class="line">```c</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ListDir</span><span class="params">( DirectoryOrFile D, <span class="keyword">int</span> Depth )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (D is a legitimate entry)</span><br><span class="line">&#123;</span><br><span class="line">PrintName(D, Depth);</span><br><span class="line"><span class="keyword">if</span> (D is an directory )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> each child, C of D</span><br><span class="line">ListDir(C, Depth+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ListDirectory</span><span class="params">( DirectoryOrFile D )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ListDir(D, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SizeOfDirectory</span><span class="params">( DirectoryOrFile D )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> TotalSize;</span><br><span class="line">    </span><br><span class="line">    TotalSize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>( D is a legitimate entry )</span><br><span class="line">    &#123;</span><br><span class="line">        TotalSize = FileSize( D );</span><br><span class="line">        <span class="keyword">if</span>( D is a directory )</span><br><span class="line">            <span class="keyword">for</span> each child C of D</span><br><span class="line">                TotalSize += SizeOfDirectory( C );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> TotalSize;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="4-2-Binary-Trees"><a href="#4-2-Binary-Trees" class="headerlink" title="4.2 Binary Trees"></a>4.2 Binary Trees</h2><p>A binary tree is a tree in which no node can have more than two children.</p><h3 id="4-2-1-Implementation"><a href="#4-2-1-Implementation" class="headerlink" title="4.2.1 Implementation"></a>4.2.1 Implementation</h3><ul><li>Because a binary tree has most two children, we can keep direct pointers to them.</li><li>In that a node is a structure consists of the <em>Key</em> information plus two pointers (<code>left</code> and <code>right</code>) to other nodes.</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span>* <span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">PtrToNode</span> <span class="title">Tree</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ElementType Element;</span><br><span class="line">Tree Left;</span><br><span class="line">Tree Right;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="4-2-2-Expression-Trees"><a href="#4-2-2-Expression-Trees" class="headerlink" title="4.2.2 Expression Trees"></a>4.2.2 Expression Trees</h3><p><img src="/images/exp-tree.svg" alt="tree"><br>We can produce an (overly parenthesized) infix expression by recursively producing a parenthesized left expression, then print out the operator at the root, and finally recursively producing a right parenthesized expression.</p><p>This general strategy is known as an <em>inorder</em> traversal; it is easy to remember because of the type of expression it produces.</p><p>There are two alternative strategies. See the book for more examples.</p><h4 id="Constructing-an-Expression-Tree"><a href="#Constructing-an-Expression-Tree" class="headerlink" title="Constructing an Expression Tree"></a>Constructing an Expression Tree</h4><p>We now give an algorithm to convert a postfix expression into an expression tree.<br>As an example, suppose the input is:<br>    <code>a b + c d e + * *</code><br>Codes can be found <a href="https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-8" target="_blank" rel="noopener">here</a>.</p><h2 id="4-3-AVL-Tree"><a href="#4-3-AVL-Tree" class="headerlink" title="4.3 AVL Tree"></a>4.3 AVL Tree</h2><p>An <code>AVL</code> tree is a search tree with a <em>balance</em> condition.</p><ul><li>Require the left and right subtrees have the same height </li><li>Every node must have left and right trees with the same height.</li></ul><p>An <code>AVL</code> tree is identical to a binary search tree, except that for every node in the tree, the height of the left and right subtrees can differ at most 1. (The height of a empty tree is defined to be <code>-1</code>)<br><img src="/images/AVL-Tree-1.svg.png" alt="AVL-Tree-1"><br><strong>Figure: A AVL tree</strong></p><p><strong>Note: Balanced factor</strong> (Wikipedia)<br>In a binary tree the balance factor of a node N is defined to be the height difference</p><pre><code>BalanceFactor(N) := Height(RightSubtree(N)) – Height(LeftSubtree(N))</code></pre><p>of its two child subtrees. A binary tree is defined to be an AVL tree if the invariant</p><pre><code>BalanceFactor(N) ∈ {–1,0,+1}</code></pre><p>holds for every node N in the tree.</p><p>A node N with BalanceFactor(N) &lt; 0 is called “left-heavy”, one with BalanceFactor(N) &gt; 0 is called “right-heavy”, and one with BalanceFactor(N) = 0 is sometimes simply called “balanced”.</p><p>The minimum number of nodes, <em>S(h)</em> , in an <code>AVL</code> tree of height <strong>h</strong> is given by</p><pre><code>S(h) = S(h-1) + S(h-2) + 1 </code></pre><ul><li>Thus, all the tree operations can be performed in <strong>O($$log(N)$$)</strong> time, except possibly insertion( we will assume lazy deletion ). When we do a insertion, we need to update all the balancing information for the nodes on the path back to the <code>root</code>, but the reason that insertion is potentially difficult is that inserting a node could violate the <code>AVL</code> Tree property.</li><li>If this is the case, then the property has to be resorted before the insertion step is considered over. It turns out that this can always be done with a simple modification to the tree, known as a <strong>rotation</strong></li><li>After insertion, only nodes that are on the path from the insertion point to the root might have their balance altered because only those nodes have their subtrees altered. </li><li>As we follow the path up to the root and update the balancing information, we may find a node whose new balance violates the <code>AVL</code> condition.</li></ul><p>Lets call the node that must be rebalanced $${\alpha}$$. Since any node has at most two children, and a height imbalance requires that $${\alpha}$$’s two subtrees’ height differ by two, it is easy to see that a violation might occur in four cases:</p><ol><li>An insertion into the left subtree of the left child of $${\alpha}$$;</li><li>An insertion into the right subtree of the left child of $${\alpha}$$.</li><li>An insertion into the left subtree of the right child of $${\alpha}$$.</li><li>An insertion into the left subtree of the right child of $${\alpha}$$.</li></ol><p>The first case (<code>left-left</code> <code>right-right</code>) is fixed by a <em>single rotation</em> of the tree and the second case (<code>left-right</code> <code>right-left</code>) is handled by a more complex <em>double rotation</em>.</p><p><img src="/images/AVL-Tree-2.gif" alt="AVL rotation"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;In a &lt;code&gt;Tree&lt;/code&gt;, the running time for most operations is &lt;strong&gt;O(logN)&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="https://ocd.ooo/categories/Programming/"/>
    
    
      <category term="Develop" scheme="https://ocd.ooo/tags/Develop/"/>
    
      <category term="C" scheme="https://ocd.ooo/tags/C/"/>
    
      <category term="Data Structure" scheme="https://ocd.ooo/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>Use Apple Time-Machine on Raspberry Pi with ArchLinux ARM</title>
    <link href="https://ocd.ooo/2018/11/26/2018-03-29-Use-TM-On-RPi-With-Arch-Linux/"/>
    <id>https://ocd.ooo/2018/11/26/2018-03-29-Use-TM-On-RPi-With-Arch-Linux/</id>
    <published>2018-11-26T03:32:37.620Z</published>
    <updated>2018-11-26T03:32:37.620Z</updated>
    
    <content type="html"><![CDATA[<p>作为下次设置的备份.</p><a id="more"></a><h2 id="1-要求"><a href="#1-要求" class="headerlink" title="1. 要求"></a>1. 要求</h2><ol><li>A Raspberry </li><li>A hard drive </li><li>A stable internet connection</li></ol><h2 id="2-Installation"><a href="#2-Installation" class="headerlink" title="2. Installation"></a>2. Installation</h2><p> 使用 <code>yaourt</code> 进行环境设置</p><h3 id="2-1-Pre-install"><a href="#2-1-Pre-install" class="headerlink" title="2.1 Pre-install"></a>2.1 Pre-install</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Install required Packages</span></span><br><span class="line">yaourt -Syu</span><br><span class="line">yaourt -S avahi nss-mdns netatalk hfsplus</span><br></pre></td></tr></table></figure><p><strong>Note:</strong><br>In the process you may encounter architecture errors like<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">==&gt; ERROR: xxx is not available for the &apos;aarch64&apos; architecture.</span><br></pre></td></tr></table></figure></p><p>then just edit the PKGBUILD and set the <code>arch</code> = <code>&#39;any&#39;</code> to silent the warning</p><h3 id="2-2-Set-up-device-and-folder"><a href="#2-2-Set-up-device-and-folder" class="headerlink" title="2.2 Set up device and folder"></a>2.2 Set up device and folder</h3><h4 id="2-2-1-We-should-set-up-the-device-hard-drive"><a href="#2-2-1-We-should-set-up-the-device-hard-drive" class="headerlink" title="2.2.1. We should set up the device (hard drive)"></a>2.2.1. We should set up the device (hard drive)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Check if the device is connected </span></span><br><span class="line">sudo blkid</span><br></pre></td></tr></table></figure><p>Here is the output of my Pi:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜ sudo blkid</span><br><span class="line">/dev/mmcblk0p1: SEC_TYPE=&quot;msdos&quot; UUID=&quot;120A-474C&quot; TYPE=&quot;vfat&quot; PARTUUID=&quot;31203949-01&quot;</span><br><span class="line">/dev/mmcblk0p2: UUID=&quot;66ffe290-de04-4547-b091-82fc1854bd20&quot; TYPE=&quot;ext4&quot; PARTUUID=&quot;31203949-02&quot;</span><br><span class="line">/dev/sda1: LABEL=&quot;EFI&quot; UUID=&quot;67E3-17ED&quot; TYPE=&quot;vfat&quot; PARTLABEL=&quot;EFI System Partition&quot; PARTUUID=&quot;1e03d7c8-468b-40f0-a9f8-dcade8ea43e7&quot;</span><br><span class="line">/dev/sda2: LABEL=&quot;SeagateExpansionMedia&quot; UUID=&quot;18E4C435E4C41742&quot; TYPE=&quot;ntfs&quot; PARTUUID=&quot;f47076b7-b738-4136-aba3-7ce886844070&quot;</span><br><span class="line">/dev/sda3: UUID=&quot;d4394cd9-7e11-38db-95a9-7d781e0cbde0&quot; LABEL=&quot;MacOnDisk&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;4c697e1f-5b89-4c97-8bf3-11c819cb117e&quot;</span><br><span class="line">/dev/sda4: UUID=&quot;74f09d9f-73b2-30d5-9f89-b9ac88490538&quot; LABEL=&quot;Recovery HD&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;9a17bdc7-3761-458f-b000-4a00debeb31b&quot;</span><br><span class="line">/dev/sda5: UUID=&quot;3a161221-c554-3e56-ac93-b30c37087812&quot; LABEL=&quot;Time-Machine&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;2c0ebe1f-1af8-4928-98a3-ce615891e9f0&quot;</span><br><span class="line">/dev/mmcblk0: PTUUID=&quot;31203949&quot; PTTYPE=&quot;dos&quot;</span><br></pre></td></tr></table></figure><p>As you can see here, and I want to backup my Mac to <code>/dev/sda5</code> which labelled as <code>Time-Machine</code></p><h4 id="2-2-2-Add-a-user-to-the-machine"><a href="#2-2-2-Add-a-user-to-the-machine" class="headerlink" title="2.2.2. Add a user to the machine"></a>2.2.2. Add a user to the machine</h4><p>So that we can separate the account with others</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd timemachine</span><br><span class="line">sudo passed timemachine</span><br><span class="line"><span class="comment"># Then add the password you like for the user timechine</span></span><br></pre></td></tr></table></figure><h4 id="2-2-3-Set-up-a-folder"><a href="#2-2-3-Set-up-a-folder" class="headerlink" title="2.2.3. Set up a folder"></a>2.2.3. Set up a folder</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Folder in /media/Time-Machine</span></span><br><span class="line">sudo mkdir -p /media/Time-Machine</span><br><span class="line"></span><br><span class="line"><span class="comment"># Give it permission</span></span><br><span class="line">sudo chown -R timemachine:users /media/Time-Machine</span><br></pre></td></tr></table></figure><h4 id="2-2-4-Set-fstab"><a href="#2-2-4-Set-fstab" class="headerlink" title="2.2.4 Set fstab"></a>2.2.4 Set fstab</h4><p>So that we can mount it automatically to the folder</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/fstab</span><br></pre></td></tr></table></figure><p>and add:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/sda5 /media/Time-Machine hfsplus force,rw,user,auto 0 0</span><br></pre></td></tr></table></figure></p><p>and use:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount</span><br></pre></td></tr></table></figure></p><p>to mount the desired folder.</p><h3 id="2-3-Configuration"><a href="#2-3-Configuration" class="headerlink" title="2.3 Configuration"></a>2.3 Configuration</h3><h4 id="2-3-1-configure-afp-conf"><a href="#2-3-1-configure-afp-conf" class="headerlink" title="2.3.1 configure afp.conf"></a>2.3.1 configure <code>afp.conf</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/afp.conf</span><br><span class="line">``` </span><br><span class="line">and input the following lines:</span><br><span class="line"></span><br><span class="line">```conf</span><br><span class="line">[global]</span><br><span class="line">UAM list = uams_guest.so, uams_dhx.so, uams_dhx2.so,</span><br><span class="line"></span><br><span class="line">[Time Machine]</span><br><span class="line">path = /media/Time-Machine</span><br><span class="line">time machine = yes</span><br></pre></td></tr></table></figure><h4 id="2-3-2-configure-Service"><a href="#2-3-2-configure-Service" class="headerlink" title="2.3.2 configure Service"></a>2.3.2 configure Service</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/avahi/services/afpd.service</span><br></pre></td></tr></table></figure><p> and paste these lines:</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" standalone='no'?&gt;</span><span class="comment">&lt;!--*-nxml-*--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE service-group SYSTEM "avahi-service.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">service-group</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span> <span class="attr">replace-wildcards</span>=<span class="string">"yes"</span>&gt;</span>%h<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">type</span>&gt;</span>_afpovertcp._tcp<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">port</span>&gt;</span>548<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">type</span>&gt;</span>_device-info._tcp<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">port</span>&gt;</span>0<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">txt-record</span>&gt;</span>model=TimeCapsule<span class="tag">&lt;/<span class="name">txt-record</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service-group</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-Start"><a href="#3-Start" class="headerlink" title="3. Start"></a>3. Start</h2><p>Now we can start the service<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> netatalk.service</span><br><span class="line">sudo systemctl start netatalk.service</span><br><span class="line">sudo systemctl start avahi-daemon.service</span><br></pre></td></tr></table></figure></p><h2 id="Done"><a href="#Done" class="headerlink" title="Done!"></a>Done!</h2><p>Just Open your Time Machine Preferences and back your things up</p><p><strong>Note:</strong><br>the <code>username</code> is <code>timemachine</code><br>the <code>password</code> is the password you entered before</p><h2 id="Credits"><a href="#Credits" class="headerlink" title="Credits"></a>Credits</h2><ol><li><a href="">https://github.com/mr-bt/raspberrypi-timemachine</a></li><li><a href="">https://www.pihomeserver.fr/en/2013/01/16/raspberry-pi-home-server-arch-linux-sauvegarder-son-mac-avec-time-machine/</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为下次设置的备份.&lt;/p&gt;
    
    </summary>
    
      <category term="Computer" scheme="https://ocd.ooo/categories/Computer/"/>
    
      <category term="Raspberry Pi" scheme="https://ocd.ooo/categories/Computer/Raspberry-Pi/"/>
    
    
      <category term="MacOS" scheme="https://ocd.ooo/tags/MacOS/"/>
    
      <category term="Time Machine" scheme="https://ocd.ooo/tags/Time-Machine/"/>
    
  </entry>
  
  <entry>
    <title>Install ArchLinux on MacBook 2016 and later</title>
    <link href="https://ocd.ooo/2018/11/26/2018-06-08-Install-Arch-Linux-Macbook-13/"/>
    <id>https://ocd.ooo/2018/11/26/2018-06-08-Install-Arch-Linux-Macbook-13/</id>
    <published>2018-11-26T03:32:37.620Z</published>
    <updated>2018-11-26T03:32:37.620Z</updated>
    
    <content type="html"><![CDATA[<p>This passage introduces a way to install Arch Linux on MacBook that releases in 2016 and 2017</p><a id="more"></a><p><strong>Caution</strong>: You should be aware that some functions may not work properly. Do it on your own risk!</p><h2 id="1-Overview"><a href="#1-Overview" class="headerlink" title="1. Overview"></a>1. Overview</h2><p><strong>What works</strong>:</p><p><strong>1. On booting</strong></p><ul><li style="list-style: none"><input type="checkbox" checked> Booting</li><li style="list-style: none"><input type="checkbox" checked> Disks</li><li style="list-style: none"><input type="checkbox" checked> HiDPI</li><li style="list-style: none"><input type="checkbox" checked> Accelerated Video</li><li style="list-style: none"><input type="checkbox" checked> Keyboard Backlight</li><li style="list-style: none"><input type="checkbox" checked> USB</li><li style="list-style: none"><input type="checkbox" checked> Screen Brightness Control</li><li style="list-style: none"><input type="checkbox" checked> Sensors</li><li style="list-style: none"><input type="checkbox" checked> Bluetooth</li></ul><p><strong>2. Require modules installed</strong></p><ul><li style="list-style: none"><input type="checkbox" checked> Keyboard, touchbar and trackpad</li></ul><p><strong>3. Partly Working</strong></p><ul><li style="list-style: none"><input type="checkbox"> WiFi (Has some improving method)</li></ul><p><strong>4. Not work</strong></p><ul><li style="list-style: none"><input type="checkbox"> Suspend/Resume</li><li style="list-style: none"><input type="checkbox"> Audio (two cards show up, and intel driver is loaded, but no sound)</li></ul><p><strong>Notice</strong>: You may refer to <a href="https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7" target="_blank" rel="noopener">roadrunner’s Gist</a> for a more accurate list.</p><h2 id="2-Preparation"><a href="#2-Preparation" class="headerlink" title="2. Preparation"></a>2. Preparation</h2><h3 id="2-1-Hardware"><a href="#2-1-Hardware" class="headerlink" title="2.1 Hardware"></a>2.1 Hardware</h3><p>In this installation, you  need a <strong>USB Stick more than 2 GB</strong>, a <strong>Keybord</strong>, A stable internet connection through tethering, and also, USB Hubs.</p><p><strong>Notice</strong>: This guide uses phone USB tethering and you had better not directly connect to WiFi as it is unstable.</p><h3 id="2-2-Software"><a href="#2-2-Software" class="headerlink" title="2.2 Software"></a>2.2 Software</h3><ol><li>Download the latest <strong>ArchLinux iso</strong></li><li>Burn it to your <strong>USB sticker</strong> - Use the command <code>dd</code> to achieve this.</li><li><strong>rEFInd Boot Manager</strong> - Used to boot your MacBook to ArchLinux</li></ol><p><strong>Notice</strong>: Refer to <code>dd</code> and <code>rEFInd</code>‘s manual for more information!</p><h2 id="3-Basic-Installation"><a href="#3-Basic-Installation" class="headerlink" title="3. Basic Installation"></a>3. Basic Installation</h2><h3 id="3-1-Booting-amp-Setting-up"><a href="#3-1-Booting-amp-Setting-up" class="headerlink" title="3.1 Booting &amp; Setting up"></a>3.1 Booting &amp; Setting up</h3><ol><li>Insert USB Sticker and reboot your MacBook, in the rEFInd menu, select the efi option for booting ArchLinux, and enter the Installation Environment.</li><li>Connect your keyboard and your phone to MacBook (your phone may need to connect to WiFi in order to not result in high Cellar fee.) </li><li>Set up tethering: In your phone, click <strong>Settings</strong> &gt; <strong>Network &amp; Internet</strong> &gt; <strong>Hotspot &amp; tethering</strong> &gt; <strong>USB Tethering</strong> and turn it on.</li><li>In the computer, type <code>dhcpcd</code> to set up the carrier interface and use <code>ping archlinux.org</code> to test your connection.</li></ol><h3 id="3-2-Partitioning"><a href="#3-2-Partitioning" class="headerlink" title="3.2 Partitioning"></a>3.2 Partitioning</h3><p><strong>Warning</strong>: Do it carefully!</p><ol><li>Use <code>fdisk -l</code> to check your partition table.</li><li>Look for the disk you want to install ArchLinux (<code>sda</code> <code>sdb</code> …)</li><li>If you could see a <code>EFI Partition</code> then please ignore the section with the mark <code>*</code></li><li>Use <code>fdisk sdX</code> to dig into your disk. Enter <code>p</code> for a table.</li><li>Partition your Disk. ( * You should create a partition of about <strong>500M</strong> at the start the partition table)</li><li><p>* Set EFI Partition</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parted sdX</span><br><span class="line"><span class="built_in">set</span> 1 boot on</span><br></pre></td></tr></table></figure></li><li><p>Format</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sdXy</span><br><span class="line">mkfs.vfat /dev/sda1*</span><br></pre></td></tr></table></figure></li><li><p>Mount</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdXy /mnt</span><br><span class="line">mkdir -p /mnt/boot</span><br><span class="line">mount /dev/sda /mnt/boot</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-3-Install"><a href="#3-3-Install" class="headerlink" title="3.3 Install"></a>3.3 Install</h3><p>   <strong>Notice</strong>: You may need to edit <code>/etc/pacman.d/mirrorlist</code> to choose a mirror<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pacstrap /mnt base base-devel grub efibootmgr wireless_tools vim</span><br><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure></p><h3 id="3-4-Chroot"><a href="#3-4-Chroot" class="headerlink" title="3.4 Chroot"></a>3.4 Chroot</h3><p>Chroot into the system</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><p>and follow the official <a href="https://wiki.archlinux.org/index.php/installation_guide" target="_blank" rel="noopener">ArchLinux Instruction</a> set up your <code>hostname</code> <code>timezone</code> etc.</p><h4 id="3-4-1-Install-GRUB-Loader"><a href="#3-4-1-Install-GRUB-Loader" class="headerlink" title="3.4.1 Install GRUB ( Loader )"></a>3.4.1 Install GRUB ( Loader )</h4><p>Stay in the chroot mode and use the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grub-install --efi-directory=/boot</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h2 id="4-MacBook-Specified-Configurations"><a href="#4-MacBook-Specified-Configurations" class="headerlink" title="4. MacBook Specified Configurations"></a>4. MacBook Specified Configurations</h2><h3 id="4-1-Make-Keyboard-Work"><a href="#4-1-Make-Keyboard-Work" class="headerlink" title="4.1 Make Keyboard Work"></a>4.1 Make Keyboard Work</h3><p>Install the Driver:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pacman -S linux-headers</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/roadrunner2/macbook12-spi-driver.git</span><br><span class="line"><span class="built_in">pushd</span> macbook12-spi-driver</span><br><span class="line">git checkout touchbar-driver-hid-driver</span><br><span class="line">sudo ln -s `<span class="built_in">pwd</span>` /usr/src/applespi-0.1</span><br><span class="line">sudo dkms install applespi/0.1</span><br><span class="line"><span class="built_in">popd</span></span><br></pre></td></tr></table></figure><p>Configure mkinitcpio.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/mkinitcpio.conf</span><br></pre></td></tr></table></figure><p>and in the <code>modules</code> section add :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Modules = (applespi intel_lpss_pci spi_pxa2xx_platform appletb)</span><br></pre></td></tr></table></figure><p>Then use <code>mkinitcpio -p linux</code> to load them on next boot.</p><p>Change sensitivity:<br>Save the two following two files to <code>/etc/udev/hwdb.d/</code>:</p><p><a href="https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#file-61-evdev-local-hwdb" target="_blank" rel="noopener">61-evdev-local.hwdb</a><br><a href="https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb" target="_blank" rel="noopener">61-libinput-local.hwdb</a> </p><p> <strong>Note</strong>: You can also see them in the appendix.</p><p> Reboot and enjoy.</p><h3 id="4-2-WiFi-improvements"><a href="#4-2-WiFi-improvements" class="headerlink" title="4.2 WiFi improvements"></a>4.2 WiFi improvements</h3><p>There are two ways to change the bad WiFi condition and the discussion is <a href="https://bugzilla.kernel.org/show_bug.cgi?id=193121" target="_blank" rel="noopener">here</a>.</p><h4 id="4-2-1-Edit-the-driver"><a href="#4-2-1-Edit-the-driver" class="headerlink" title="4.2.1 Edit the driver"></a>4.2.1 Edit the driver</h4><p>As <a href="https://bugzilla.kernel.org/show_bug.cgi?id=193121#c25" target="_blank" rel="noopener">here</a> suggests:<br>Use hex editor to change the <code>/lib/firmware/brcm/brcmfmac43602-pcie.bin</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/lib/firmware/brcm/brcmfmac43602-pcie.bin</span><br><span class="line">  offset     0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF    0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF</span><br><span class="line">0x00000000  80f140b882f1a4b982f1b0b982f1bcb9 ..@.............   80f140b882f1a4b982f1b0b982f1bcb9 ..@.............</span><br><span class="line">0x00000010  82f1cbb982f1dab982f1e9b982f1f8b9 ................   82f1cbb982f1dab982f1e9b982f1f8b9 ................</span><br><span class="line">...</span><br><span class="line">0x0007c820! 30643a66343a33650063636f64653d58 0d:f4:3e.ccode=X   30643a66343a33650063636f64653d30 0d:f4:3e.ccode=0</span><br><span class="line">0x0007c830! 30007265677265763d31350061613267 0.regrev=15.aa2g   00007265677265763d30000061613267 ..regrev=0..aa2g</span><br><span class="line">0x0007c840  3d3700616135673d370061676267303d =7.aa5g=7.agbg0=   3d3700616135673d370061676267303d =7.aa5g=7.agbg0=</span><br><span class="line">0x0007c850  37310061676267313d37310061676267 71.agbg1=71.agbg   37310061676267313d37310061676267 71.agbg1=71.agbg</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p><strong>Note</strong>: As I changed the file, I cannot connect to any WiFi networks. More Investigation required.</p><h4 id="4-2-2-Change-the-txpower"><a href="#4-2-2-Change-the-txpower" class="headerlink" title="4.2.2 Change the txpower"></a>4.2.2 Change the txpower</h4><p>This is simple (see <a href="https://bugzilla.kernel.org/show_bug.cgi?id=193121#c28" target="_blank" rel="noopener">#10</a>)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip link <span class="built_in">set</span> wlp2s0 up   <span class="comment"># if not already up</span></span><br><span class="line">iwconfig wlp2s0 txpower 10dBm</span><br></pre></td></tr></table></figure><h2 id="5-Appendix"><a href="#5-Appendix" class="headerlink" title="5. Appendix"></a>5. Appendix</h2><p><strong>61-evdev-local.hwdb</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># MacBook8,1 (2015), MacBook9,1 (2016), MacBook10,1 (2017)</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook8,1:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook9,1:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook10,1:*</span><br><span class="line"> EVDEV_ABS_00=::95</span><br><span class="line"> EVDEV_ABS_01=::90</span><br><span class="line"> EVDEV_ABS_35=::95</span><br><span class="line"> EVDEV_ABS_36=::90</span><br><span class="line"></span><br><span class="line"># MacBookPro13,* (Late 2016), MacBookPro14,* (Mid 2017)</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,1:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,2:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,1:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,2:*</span><br><span class="line"> EVDEV_ABS_00=::96</span><br><span class="line"> EVDEV_ABS_01=::94</span><br><span class="line"> EVDEV_ABS_35=::96</span><br><span class="line"> EVDEV_ABS_36=::94</span><br><span class="line"></span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,3:*</span><br><span class="line">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,3:*</span><br><span class="line"> EVDEV_ABS_00=::96</span><br><span class="line"> EVDEV_ABS_01=::95</span><br><span class="line"> EVDEV_ABS_35=::96</span><br><span class="line"> EVDEV_ABS_36=::95</span><br></pre></td></tr></table></figure><p> <strong>61-libinput-local.hwdb</strong></p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">libinput:name:*Apple SPI Touchpad*:dmi:*</span><br><span class="line">LIBINPUT_MODEL_APPLE_TOUCHPAD=1</span><br><span class="line">LIBINPUT_ATTR_KEYBOARD_INTEGRATION=internal</span><br><span class="line">LIBINPUT_ATTR_TOUCH_SIZE_RANGE=200:150</span><br><span class="line">LIBINPUT_ATTR_PALM_SIZE_THRESHOLD=1200</span><br></pre></td></tr></table></figure><h2 id="6-Credits"><a href="#6-Credits" class="headerlink" title="6. Credits"></a>6. Credits</h2><ol><li><a href="https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb" target="_blank" rel="noopener">Roadrunner’s gist</a></li><li><a href="https://bugzilla.kernel.org/show_bug.cgi?id=193121" target="_blank" rel="noopener">Many awesome people in bugzilla</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This passage introduces a way to install Arch Linux on MacBook that releases in 2016 and 2017&lt;/p&gt;
    
    </summary>
    
      <category term="Computer" scheme="https://ocd.ooo/categories/Computer/"/>
    
    
      <category term="ArchLinux" scheme="https://ocd.ooo/tags/ArchLinux/"/>
    
  </entry>
  
  <entry>
    <title>用户输入和 while 循环</title>
    <link href="https://ocd.ooo/2018/11/26/2017-11-23-User-input-and-while-loop/"/>
    <id>https://ocd.ooo/2018/11/26/2017-11-23-User-input-and-while-loop/</id>
    <published>2018-11-26T03:32:37.619Z</published>
    <updated>2018-11-26T03:32:37.619Z</updated>
    
    <content type="html"><![CDATA[<p>使用 input() 处理用户输入</p><a id="more"></a><h2 id="7-1-函数-input-工作原理"><a href="#7-1-函数-input-工作原理" class="headerlink" title="7.1 函数 input() 工作原理"></a>7.1 函数 <code>input()</code> 工作原理</h2><p><strong>E.g:</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">message = input(<span class="string">"Tell me something, and I will repeat it back to you: "</span>)</span><br><span class="line">print(message)</span><br></pre></td></tr></table></figure></p><h6 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Tell me something, and I will repeat it back to you: </span><br><span class="line">Hello, Everyone!</span><br><span class="line">Hello, Everyone!</span><br></pre></td></tr></table></figure><h3 id="7-1-1-编写清晰的程序"><a href="#7-1-1-编写清晰的程序" class="headerlink" title="7.1.1 编写清晰的程序"></a>7.1.1 编写清晰的程序</h3><p>没当你编写函数 <code>input()</code> 时, 都应指定清晰而易于明白的提示如下所示:<br><strong>E.g:</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = input(<span class="string">"Please enter your name"</span>)</span><br><span class="line">print(<span class="string">"Hello, "</span> + name + <span class="string">"!"</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-1"><a href="#Output-1" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Please enter your name: Eric</span><br><span class="line">Hello, Eric!</span><br></pre></td></tr></table></figure><h3 id="7-1-2-使用-int-来获取数值输入"><a href="#7-1-2-使用-int-来获取数值输入" class="headerlink" title="7.1.2 使用 int() 来获取数值输入"></a>7.1.2 使用 int() 来获取数值输入</h3><p>使用函数 <code>input()</code> 时, Python 会将用户输入解读为字符串, 为解决此问题, 可使用函数 <code>int()</code></p><p><strong>E.g:</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">age = input(&quot;How old are you?&quot;)</span><br><span class="line">age = int(age)</span><br></pre></td></tr></table></figure></p><h3 id="7-1-3-求模运算符"><a href="#7-1-3-求模运算符" class="headerlink" title="7.1.3 求模运算符 %"></a>7.1.3 求模运算符 <code>%</code></h3><p><strong>E.g:</strong> even_or_odd.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">number = input(<span class="string">"Enter a number, and I'll tell you whether it is even or odd: "</span>)</span><br><span class="line">number = int(number)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> number % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">"\nThe number "</span> + str(number) + <span class="string">" is even."</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"\nThe number "</span> + str(number) + <span class="string">" is odd."</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-2"><a href="#Output-2" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Enter a number, and I&apos;ll tell you whether it is even or odd: 43</span><br><span class="line"></span><br><span class="line">The number 43 is odd</span><br></pre></td></tr></table></figure><h2 id="7-2-while-循环简介"><a href="#7-2-while-循环简介" class="headerlink" title="7.2 while 循环简介"></a>7.2 <code>while</code> 循环简介</h2><h3 id="7-2-1-使用-while-循环"><a href="#7-2-1-使用-while-循环" class="headerlink" title="7.2.1 使用 while 循环"></a>7.2.1 使用 <code>while</code> 循环</h3><p><strong>E.g:</strong> counting.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">current_number = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> current_number &lt;= <span class="number">5</span>:</span><br><span class="line">    print(current_number)</span><br><span class="line">    current_number += <span class="number">1</span></span><br></pre></td></tr></table></figure></p><h6 id="Output-3"><a href="#Output-3" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h3 id="7-2-2-让用户选择何时退出"><a href="#7-2-2-让用户选择何时退出" class="headerlink" title="7.2.2 让用户选择何时退出"></a>7.2.2 让用户选择何时退出</h3><p>we can define a variable and evaluate it when entering <code>while</code><br><strong>E.g:</strong> parrot.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">prompt = <span class="string">"\nTell me something, and I will repeat it back to you: "</span></span><br><span class="line">prompt += <span class="string">"\nEnter 'quit' to end the program: "</span></span><br><span class="line">message = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> message != <span class="string">'quit'</span>:</span><br><span class="line">    message = input(prompt)</span><br><span class="line">    <span class="keyword">if</span> message != <span class="string">'quit'</span>:</span><br><span class="line">        print(message)</span><br></pre></td></tr></table></figure></p><h6 id="Output-4"><a href="#Output-4" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Tell me something, and I will repeat it back to you:</span><br><span class="line">Enter &apos;quit&apos; to end the program: hello</span><br><span class="line">hello</span><br><span class="line"></span><br><span class="line">Tell me something, and I will repeat it back to you:</span><br><span class="line">Enter &apos;quit&apos; to end the program: 1</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">Tell me something, and I will repeat it back to you:</span><br><span class="line">Enter &apos;quit&apos; to end the program: quit</span><br></pre></td></tr></table></figure><h3 id="7-2-3-使用标志"><a href="#7-2-3-使用标志" class="headerlink" title="7.2.3 使用标志"></a>7.2.3 使用标志</h3><p><strong>E.g:</strong>  improved_parrot.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">prompt = <span class="string">"\nTell me something, and I will repeat it back to you: "</span></span><br><span class="line">prompt += <span class="string">"\nEnter 'quit' to end the program: "</span></span><br><span class="line">message = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">active = <span class="keyword">True</span></span><br><span class="line"><span class="keyword">while</span> active == <span class="keyword">True</span>:</span><br><span class="line">    message = input(prompt)</span><br><span class="line">    <span class="keyword">if</span> message == <span class="string">'quit'</span>:</span><br><span class="line">        active = <span class="keyword">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(message)</span><br></pre></td></tr></table></figure></p><h6 id="Output-same-as-above"><a href="#Output-same-as-above" class="headerlink" title="Output: same as above"></a>Output: <code>same as above</code></h6><h3 id="7-2-4-Use-break-to-quit-a-loop"><a href="#7-2-4-Use-break-to-quit-a-loop" class="headerlink" title="7.2.4 Use break to quit a loop"></a>7.2.4 Use <code>break</code> to quit a loop</h3><p><strong>E.g:</strong> second_inproved_parrot.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">prompt = <span class="string">"\nTell me something, and I will repeat it back to you: "</span></span><br><span class="line">prompt += <span class="string">"\nEnter 'quit' to end the program: "</span></span><br><span class="line">message = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    message = input(prompt)</span><br><span class="line">    <span class="keyword">if</span> message == <span class="string">'quit'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(message)</span><br></pre></td></tr></table></figure></p><p>注: 在任何循环中都可使用 break</p><h3 id="7-2-5-Use-continue"><a href="#7-2-5-Use-continue" class="headerlink" title="7.2.5 Use continue"></a>7.2.5 Use <code>continue</code></h3><p><strong>E.g:</strong> counting.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">current_number = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> current_number &lt; <span class="number">10</span>:</span><br><span class="line">    current_number += <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> current_number %<span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">    print(current_number)</span><br></pre></td></tr></table></figure></p><h6 id="Output-5"><a href="#Output-5" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">3</span><br><span class="line">5</span><br><span class="line">7</span><br><span class="line">9</span><br></pre></td></tr></table></figure><h3 id="7-2-6-避免无限循环"><a href="#7-2-6-避免无限循环" class="headerlink" title="7.2.6 避免无限循环"></a>7.2.6 避免无限循环</h3><h2 id="7-3-使用-while-处理列表和字典"><a href="#7-3-使用-while-处理列表和字典" class="headerlink" title="7.3 使用 while 处理列表和字典"></a>7.3 使用 <code>while</code> 处理列表和字典</h2><h3 id="7-3-1-在列表中移动元素"><a href="#7-3-1-在列表中移动元素" class="headerlink" title="7.3.1 在列表中移动元素"></a>7.3.1 在列表中移动元素</h3><p><strong>E.g:</strong> confirmed_users.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">unconfirmed_users = [<span class="string">'alice'</span>, <span class="string">'brian'</span>, <span class="string">'candace'</span>]</span><br><span class="line">confirmed_users = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> unconfirmed_users:</span><br><span class="line">    current_user = unconfirmed_users.pop()</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">"Verifying user: "</span> + current_user.title())</span><br><span class="line">    confirmed_users.append(current_user)</span><br><span class="line">    </span><br><span class="line">print(<span class="string">"\nThe following users have been confirmed: "</span>)</span><br><span class="line"><span class="keyword">for</span> confirmed_user <span class="keyword">in</span> confirmed_users:</span><br><span class="line">    print(confirmed_user.title())</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line"><span class="comment">###### Output:</span></span><br></pre></td></tr></table></figure></p><p>Verifying user: Candace<br>Verifying user: Brian<br>Verifying user: Alice</p><p>The following users have been confirmed:<br>Candace<br>Brian<br>Alice<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 7.3.2 删除包含特定值的所有列表元素</span><br><span class="line">在第二章中, 我们使用函数 `remove()` 来删除列表中的特定值, 现在要删除多个相同元素:</span><br><span class="line">__E.g:__ pets.py</span><br><span class="line">```python</span><br><span class="line">pets = [&apos;dog&apos;, &apos;cat&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;cat&apos;, &apos;rabbit&apos;, &apos;cat&apos;]</span><br><span class="line">print(pets)</span><br><span class="line"></span><br><span class="line">while &apos;cat&apos; in pets:</span><br><span class="line">    pets.remove(&apos;cat&apos;)</span><br><span class="line">    </span><br><span class="line">print(pets)</span><br></pre></td></tr></table></figure></p><h6 id="Output-6"><a href="#Output-6" class="headerlink" title="Output"></a>Output</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&apos;dog&apos;, &apos;cat&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;cat&apos;, &apos;rabbit&apos;, &apos;cat&apos;]</span><br><span class="line">[&apos;dog&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;rabbit&apos;]</span><br></pre></td></tr></table></figure><h3 id="7-3-3-使用用户输入填充字典"><a href="#7-3-3-使用用户输入填充字典" class="headerlink" title="7.3.3 使用用户输入填充字典"></a>7.3.3 使用用户输入填充字典</h3><p><strong>E.g:</strong> mountain_poll.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">responses = &#123;&#125;</span><br><span class="line"></span><br><span class="line">polling_active = <span class="keyword">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> polling_active:</span><br><span class="line">    name = input(<span class="string">"\nWhat is your name? "</span>)</span><br><span class="line">    response = input(<span class="string">"Which mountain would you like to climb someday? "</span>)</span><br><span class="line">    </span><br><span class="line">    responses[name] = response</span><br><span class="line">    </span><br><span class="line">    repeat = input(<span class="string">"Would you like to let another person respond? (yes/no)"</span>)</span><br><span class="line">    <span class="keyword">if</span> repeat == <span class="string">'no'</span>:</span><br><span class="line">        polling_active = <span class="keyword">False</span></span><br><span class="line">        </span><br><span class="line">print(<span class="string">"\n--- Poll Result ---\n"</span>)</span><br><span class="line"><span class="keyword">for</span> name, mountain <span class="keyword">in</span> responses.items():</span><br><span class="line">    print(name.title() + <span class="string">" would like to climb "</span> + mountain.title() + <span class="string">"."</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-7"><a href="#Output-7" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">What is your name? bbn</span><br><span class="line">Which mountain would you like to climb someday? a</span><br><span class="line">Would you like to let another person respond? (yes/no)no</span><br><span class="line"></span><br><span class="line">--- Poll Result ---</span><br><span class="line"></span><br><span class="line">Bbn would like to climb a.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 input() 处理用户输入&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="https://ocd.ooo/categories/Programming/"/>
    
    
      <category term="Python" scheme="https://ocd.ooo/tags/Python/"/>
    
      <category term="Develop" scheme="https://ocd.ooo/tags/Develop/"/>
    
  </entry>
  
  <entry>
    <title>Algorithm Analysis</title>
    <link href="https://ocd.ooo/2018/11/26/2017-11-26-Algorithm-Analysis/"/>
    <id>https://ocd.ooo/2018/11/26/2017-11-26-Algorithm-Analysis/</id>
    <published>2018-11-26T03:32:37.619Z</published>
    <updated>2018-11-26T03:32:37.619Z</updated>
    
    <content type="html"><![CDATA[<p>Showing two possible Algorithms:</p><a id="more"></a><h2 id="1-Maximum-Subsequence-Sum"><a href="#1-Maximum-Subsequence-Sum" class="headerlink" title="1. Maximum Subsequence Sum"></a>1. Maximum Subsequence Sum</h2><h3 id="A-O-N-logN"><a href="#A-O-N-logN" class="headerlink" title="A. O( N*logN )"></a>A. O( N*logN )</h3><p>This example uses a <code>divide and conquer</code> strategy<br><strong>Example</strong>:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  main.c</span></span><br><span class="line"><span class="comment">//  Temp</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by clfbbn on 2017/11/26.</span></span><br><span class="line"><span class="comment">//  Copyright © 2017年 clfbbn. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Max3</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">        max = a;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        max = b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (max &lt; c) &#123;</span><br><span class="line">        max = c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">MaxSubSum</span><span class="params">( <span class="keyword">const</span> <span class="keyword">int</span> A[<span class="number">8</span>], <span class="keyword">int</span> Left, <span class="keyword">int</span> Right)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> MaxLeftSum, MaxRightSum;</span><br><span class="line">    <span class="keyword">int</span> MaxLeftBroaderSum, MaxRightBroaderSum;</span><br><span class="line">    <span class="keyword">int</span> LeftBroaderSum, RightBroaderSum;</span><br><span class="line">    <span class="keyword">int</span> Center, i;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (Left == Right) &#123;</span><br><span class="line">        <span class="keyword">if</span> (A[ Left ] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> A[ Left ];</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Center = (Left + Right) / <span class="number">2</span>;</span><br><span class="line">    MaxLeftSum = MaxSubSum(A, Left, Center);</span><br><span class="line">    MaxRightSum = MaxSubSum(A, Center + <span class="number">1</span>, Right);</span><br><span class="line">    </span><br><span class="line">    MaxLeftBroaderSum = <span class="number">0</span>; MaxRightBroaderSum = <span class="number">0</span>;</span><br><span class="line">    LeftBroaderSum = <span class="number">0</span>; RightBroaderSum = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = Center; i &gt;= Left; --i) &#123;</span><br><span class="line">        LeftBroaderSum += A[i];</span><br><span class="line">        <span class="keyword">if</span> (LeftBroaderSum &gt; MaxLeftBroaderSum) &#123;</span><br><span class="line">            MaxLeftBroaderSum = LeftBroaderSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = Center + <span class="number">1</span>; i &lt;= Right; ++i) &#123;</span><br><span class="line">        RightBroaderSum += A[i];</span><br><span class="line">        <span class="keyword">if</span> (RightBroaderSum &gt; MaxRightBroaderSum) &#123;</span><br><span class="line">            MaxRightBroaderSum = RightBroaderSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Max3( MaxLeftSum, MaxRightSum, MaxRightBroaderSum + MaxLeftBroaderSum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MaxSubsequenceSum</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> A[], <span class="keyword">int</span> N)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> MaxSubSum(A, <span class="number">0</span>, N - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">8</span>] = &#123;<span class="number">4</span>, <span class="number">-3</span>, <span class="number">5</span>, <span class="number">-2</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">-2</span>,&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, MaxSubsequenceSum(<span class="built_in">array</span>, <span class="number">8</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-O-N"><a href="#B-O-N" class="headerlink" title="B. O(N)"></a>B. O(N)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MaxSunsequenceSum_New</span><span class="params">( <span class="keyword">const</span> <span class="keyword">int</span> A[], <span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ThisSum, MaxSum, j;</span><br><span class="line">    </span><br><span class="line">    ThisSum = MaxSum = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; N; j++) &#123;</span><br><span class="line">        ThisSum += A[j];</span><br><span class="line">        <span class="keyword">if</span> (ThisSum &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            ThisSum = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ThisSum &gt; MaxSum) &#123;</span><br><span class="line">            MaxSum = ThisSum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> MaxSum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-Binary-Search-O-logN"><a href="#2-Binary-Search-O-logN" class="headerlink" title="2. Binary Search ( O(logN) )"></a>2. Binary Search ( O(logN) )</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ElementType int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BinarySearch</span><span class="params">(<span class="keyword">const</span> ElementType A[], <span class="keyword">int</span> N, ElementType x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> Low, High, Mid;</span><br><span class="line">    </span><br><span class="line">    Low = <span class="number">0</span>;</span><br><span class="line">    High = N - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (Low &lt;= High) &#123;</span><br><span class="line">        Mid = (Low + High) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; A[Mid]) &#123;</span><br><span class="line">            High = Mid;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; A[Mid]) &#123;</span><br><span class="line">            Low = Mid + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ElementType Array[] = &#123;<span class="number">1</span>, <span class="number">7</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, BinarySearch(Array, <span class="number">0</span>, <span class="number">7</span>));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-Euclid’s-Algorithm-O-logN"><a href="#3-Euclid’s-Algorithm-O-logN" class="headerlink" title="3. Euclid’s Algorithm ( O(logN) )"></a>3. Euclid’s Algorithm ( O(logN) )</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; y) &#123;</span><br><span class="line">        t = x;</span><br><span class="line">        x = y;</span><br><span class="line">        y = t;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (y &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        t = x;</span><br><span class="line">        x = y;</span><br><span class="line">        y = t % y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-Exponentiation"><a href="#4-Exponentiation" class="headerlink" title="4. Exponentiation"></a>4. Exponentiation</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">int</span> <span class="title">Pow</span><span class="params">( <span class="keyword">int</span> X, <span class="keyword">int</span> N )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (N == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>( N % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> Pow(X * X, N / <span class="number">2</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Pow(X * X, N / <span class="number">2</span>) * X;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-Exercises"><a href="#5-Exercises" class="headerlink" title="5. Exercises"></a>5. Exercises</h2><h3 id="5-1-Calculate-sum-i-0-N-A-iX-i"><a href="#5-1-Calculate-sum-i-0-N-A-iX-i" class="headerlink" title="5.1 Calculate $$\sum_{i=0}^N A_iX^i$$"></a>5.1 Calculate $$\sum_{i=0}^N A_iX^i$$</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">int</span> <span class="title">Cal</span><span class="params">(<span class="keyword">int</span> A[], <span class="keyword">int</span> X, <span class="keyword">int</span> N)</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    sum = A[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N - <span class="number">1</span> ; i++) &#123;</span><br><span class="line">        sum = X * sum + A[i + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-2-Three-Ways-to-generate-numbers-between-A-and-B"><a href="#5-2-Three-Ways-to-generate-numbers-between-A-and-B" class="headerlink" title="5.2 Three Ways to generate numbers between A and B"></a>5.2 Three Ways to generate numbers between A and B</h3><h4 id="Way-1"><a href="#Way-1" class="headerlink" title="Way 1"></a>Way 1</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inIt</span><span class="params">(<span class="keyword">int</span> * arr, <span class="keyword">int</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++ i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x == arr[i]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">generateA</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> x, <span class="keyword">const</span> <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>* A = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * (y - x + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">int</span> generated;</span><br><span class="line">    srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y - x + <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        A[i] = <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; (y - x + <span class="number">1</span>)) &#123;</span><br><span class="line">        generated = rand() % (y - x + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (inIt(A, generated, i) == <span class="number">0</span>) &#123;</span><br><span class="line">            A[i++] = generated;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Way-2"><a href="#Way-2" class="headerlink" title="Way 2"></a>Way 2</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">generateB</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> x, <span class="keyword">const</span> <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>* A = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * (y - x + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">int</span> generated;</span><br><span class="line">    srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">int</span>* Used = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * (y - x + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y - x + <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        Used[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; (y - x + <span class="number">1</span>)) &#123;</span><br><span class="line">        generated = rand() % (y - x + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (Used[generated] == <span class="number">0</span>) &#123;</span><br><span class="line">            Used[generated] = <span class="number">1</span>;</span><br><span class="line">            A[i++] = generated;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Way-3"><a href="#Way-3" class="headerlink" title="Way 3"></a>Way 3</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">generateC</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> x, <span class="keyword">const</span> <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>* A = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * (y - x + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y - x + <span class="number">1</span>; ++i) &#123;</span><br><span class="line">        A[i] = i ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; y - x + <span class="number">1</span>; ++ i) &#123;</span><br><span class="line">        swap(&amp;A[i], &amp;A[RandonInt(<span class="number">0</span>, i)]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Showing two possible Algorithms:&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="https://ocd.ooo/categories/Programming/"/>
    
    
      <category term="Develop" scheme="https://ocd.ooo/tags/Develop/"/>
    
      <category term="C" scheme="https://ocd.ooo/tags/C/"/>
    
      <category term="Data Structure" scheme="https://ocd.ooo/tags/Data-Structure/"/>
    
  </entry>
  
  <entry>
    <title>Python-Functions</title>
    <link href="https://ocd.ooo/2018/11/26/2017-11-26-Function/"/>
    <id>https://ocd.ooo/2018/11/26/2017-11-26-Function/</id>
    <published>2018-11-26T03:32:37.619Z</published>
    <updated>2018-11-26T03:32:37.619Z</updated>
    
    <content type="html"><![CDATA[<p>要执行函数定义的特定任务, 可调用 <code>函数</code></p><h2 id="8-1-定义函数"><a href="#8-1-定义函数" class="headerlink" title="8.1 定义函数"></a>8.1 定义函数</h2><p><strong>E.g:</strong> greeter.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet_user</span><span class="params">()</span>:</span>                           <span class="comment"># Line 1</span></span><br><span class="line">    <span class="string">"""Show simple greetings"""</span>             <span class="comment"># Line 2</span></span><br><span class="line">    print(<span class="string">"Hello!"</span>)                         <span class="comment"># Line 3</span></span><br><span class="line">    </span><br><span class="line">greet_user()                                <span class="comment"># Line 4</span></span><br></pre></td></tr></table></figure></p><h6 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello!</span><br></pre></td></tr></table></figure><h4 id="解释"><a href="#解释" class="headerlink" title="解释:"></a>解释:</h4><p>Line 1: <code>def</code> 表明你要定义一个函数, 后面缩进构成函数体<br>Line 2: 文档字符串, 由三个引号引起<br>Line 3: 函数代码<br>Line 4: 函数调用</p><h3 id="8-1-1-向函数传递信息"><a href="#8-1-1-向函数传递信息" class="headerlink" title="8.1.1 向函数传递信息"></a>8.1.1 向函数传递信息</h3><p><strong>E.g:</strong> improved_greeter.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet_user</span><span class="params">(username)</span>:</span>                           <span class="comment"># A - 1</span></span><br><span class="line">    <span class="string">"""Show simple greeting message"""</span></span><br><span class="line">    print(<span class="string">"Hello, "</span> + username.title() + <span class="string">"!"</span>)</span><br><span class="line">    </span><br><span class="line">greet_user(<span class="string">'jesse'</span>)                                 <span class="comment"># A - 2</span></span><br></pre></td></tr></table></figure></p><h6 id="Output-1"><a href="#Output-1" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello, Jesse!</span><br></pre></td></tr></table></figure><h3 id="8-1-2-实参和形参"><a href="#8-1-2-实参和形参" class="headerlink" title="8.1.2 实参和形参"></a>8.1.2 实参和形参</h3><p>在 <code>A - 1</code> 中, <code>username</code> 是一个形参<br>在 <code>A - 2</code> 中, <code>&#39;jesse&#39;</code> 是一个实参</p><h2 id="8-2-传递实参"><a href="#8-2-传递实参" class="headerlink" title="8.2 传递实参"></a>8.2 传递实参</h2><h3 id="8-2-1-位置实参"><a href="#8-2-1-位置实参" class="headerlink" title="8.2.1 位置实参"></a>8.2.1 位置实参</h3><p>你调用函数时, Python 必须根据调用中的每个实参都关联到函数定义中的一个形参, 为此, 最简单的关联方式是基于实参的顺序<br>这种调用方式被称为 <code>位置实参</code></p><p><strong>E.g:</strong> pets.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">describe_pet</span><span class="params">(animal_type, pet_name)</span>:</span></span><br><span class="line">    <span class="string">"""Show pets' information"""</span></span><br><span class="line">    print(<span class="string">"\nI have a "</span> + animal_type + <span class="string">"."</span>)</span><br><span class="line">    print(<span class="string">"My "</span> + animal_type + <span class="string">"'s name is "</span> + pet_name.title() + <span class="string">"."</span>)</span><br><span class="line">    </span><br><span class="line">describe_pet(<span class="string">'hamster'</span>, <span class="string">'harry'</span>)</span><br><span class="line">describe_pet(<span class="string">'dog'</span>, <span class="string">'willie'</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-2"><a href="#Output-2" class="headerlink" title="Output"></a>Output</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">I have a hamster.</span><br><span class="line">My hamster&apos;s name is Harry.</span><br><span class="line"></span><br><span class="line">I have a dog.</span><br><span class="line">My dog&apos;s name is Willie.</span><br></pre></td></tr></table></figure><h3 id="8-2-2-关键字实参"><a href="#8-2-2-关键字实参" class="headerlink" title="8.2.2 关键字实参"></a>8.2.2 关键字实参</h3><p><strong>E.g:</strong> new_pets.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">describe_pet</span><span class="params">(animal_type, pet_name)</span>:</span></span><br><span class="line">    <span class="string">"""Show pets' information"""</span></span><br><span class="line">    print(<span class="string">"\nI have a "</span> + animal_type + <span class="string">"."</span>)</span><br><span class="line">    print(<span class="string">"My "</span> + animal_type + <span class="string">"'s name is "</span> + pet_name.title() + <span class="string">"."</span>)</span><br><span class="line">    </span><br><span class="line">describe_pet(pet_name = <span class="string">'harry'</span>, animal_type = <span class="string">'hamster'</span>)</span><br><span class="line">describe_pet(<span class="string">'dog'</span>, <span class="string">'willie'</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-is-the-same-as-above"><a href="#Output-is-the-same-as-above" class="headerlink" title="Output is the same as above"></a>Output is the same as <code>above</code></h6><h3 id="8-2-3-默认值"><a href="#8-2-3-默认值" class="headerlink" title="8.2.3 默认值"></a>8.2.3 默认值</h3><p><strong>E.g:</strong> new2_pets.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">describe_pet</span><span class="params">(animal_type = <span class="string">'dog'</span>, pet_name)</span>:</span></span><br><span class="line">    <span class="string">"""Show pets' information"""</span></span><br><span class="line">    print(<span class="string">"\nI have a "</span> + animal_type + <span class="string">"."</span>)</span><br><span class="line">    print(<span class="string">"My "</span> + animal_type + <span class="string">"'s name is "</span> + pet_name.title() + <span class="string">"."</span>)</span><br><span class="line">    </span><br><span class="line">describe_pet(pet_name = <span class="string">'harry'</span>, animal_type = <span class="string">'hamster'</span>)</span><br><span class="line">describe_pet(pet_name = <span class="string">'willie'</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-3"><a href="#Output-3" class="headerlink" title="Output"></a>Output</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">I have a hamster.</span><br><span class="line">My hamster&apos;s name is Harry.</span><br><span class="line"></span><br><span class="line">I have a dog.</span><br><span class="line">My dog&apos;s name is Willie.</span><br></pre></td></tr></table></figure><p>注: 使用默认值时, 在形参列表中必须先列出没有默认值的形参</p><h3 id="8-2-4-等效的函数调用"><a href="#8-2-4-等效的函数调用" class="headerlink" title="8.2.4 等效的函数调用"></a>8.2.4 等效的函数调用</h3><p>注意到在之前的函数定义: <code>def describe_pet(pet_name, animal_type = &#39;dog&#39;)</code> 在任何情况下都必须给 <code>pet_name</code> 提供实参</p><p>略 23333</p><h3 id="8-2-5-避免实参错误"><a href="#8-2-5-避免实参错误" class="headerlink" title="8.2.5 避免实参错误"></a>8.2.5 避免实参错误</h3><h2 id="8-3-返回值"><a href="#8-3-返回值" class="headerlink" title="8.3 返回值"></a>8.3 返回值</h2><h3 id="8-3-1-简单返回值"><a href="#8-3-1-简单返回值" class="headerlink" title="8.3.1 简单返回值"></a>8.3.1 简单返回值</h3><p><strong>E.g:</strong> formatted_name.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_formatted_name</span><span class="params">(first_name, last_name)</span>:</span></span><br><span class="line">    <span class="string">"""Return Formatted Names"""</span></span><br><span class="line">    full_name = first_name + <span class="string">' '</span> + last_name</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> full_name.title()</span><br><span class="line">    </span><br><span class="line">musician = get_formatted_name(<span class="string">'jimi'</span>, <span class="string">'hendrix'</span>)</span><br><span class="line">print(musician)</span><br></pre></td></tr></table></figure></p><h6 id="Output-4"><a href="#Output-4" class="headerlink" title="Output"></a>Output</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Jimi Hendrix</span><br></pre></td></tr></table></figure><h3 id="8-3-2-使实参可选"><a href="#8-3-2-使实参可选" class="headerlink" title="8.3.2 使实参可选"></a>8.3.2 使实参可选</h3><p><strong>E.g:</strong><br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_formatted_name</span><span class="params">(first_name, last_name, middle_name = <span class="string">''</span>)</span></span></span><br></pre></td></tr></table></figure></p><h3 id="8-3-3-返回字典"><a href="#8-3-3-返回字典" class="headerlink" title="8.3.3 返回字典"></a>8.3.3 返回字典</h3><p><strong>E.g:</strong> person.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_person</span><span class="params">(first_name, last_name, age = <span class="string">''</span>)</span>:</span></span><br><span class="line">    <span class="string">"""return a Dictionary"""</span></span><br><span class="line">    person = &#123;<span class="string">'first'</span>: first_name, <span class="string">'last'</span>: last_name&#125;</span><br><span class="line">    <span class="keyword">if</span> age:</span><br><span class="line">        person[<span class="string">'age'</span>] = age</span><br><span class="line">    <span class="keyword">return</span> person</span><br><span class="line">    </span><br><span class="line">musician = build_person(<span class="string">'jimi'</span>, <span class="string">'henrix'</span>, age = <span class="number">27</span>)</span><br><span class="line">print(musician)</span><br></pre></td></tr></table></figure></p><h6 id="Output-5"><a href="#Output-5" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&apos;first&apos;: &apos;jimi&apos;, &apos;last&apos;: &apos;henrix&apos;, &apos;age&apos;: 27&#125;</span><br></pre></td></tr></table></figure><h3 id="8-3-4-结合使用函数和-while-循环"><a href="#8-3-4-结合使用函数和-while-循环" class="headerlink" title="8.3.4 结合使用函数和 while 循环"></a>8.3.4 结合使用函数和 <code>while</code> 循环</h3><p><strong>E.g:</strong><br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_formatted_name</span><span class="params">(first_name, last_name)</span>:</span></span><br><span class="line">    <span class="string">"""Return Formatted Names"""</span></span><br><span class="line">    full_name = first_name + <span class="string">' '</span> + last_name</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> full_name.title()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Infinite Loop!</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    print(<span class="string">"\nPlease tell me your name: "</span>)</span><br><span class="line">    f_name = input(<span class="string">"First name: "</span>)</span><br><span class="line">    l_name = input(<span class="string">"Last name: "</span>)</span><br><span class="line">    </span><br><span class="line">    formatted_name = get_formatted_name(f_name, l_name)</span><br><span class="line">    print(<span class="string">"\nHello, "</span> + formatted_name.title())</span><br></pre></td></tr></table></figure></p><h2 id="8-4-传递列表"><a href="#8-4-传递列表" class="headerlink" title="8.4  传递列表"></a>8.4  传递列表</h2><p><strong>E.g:</strong> greet_users.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet_users</span><span class="params">(names)</span>:</span></span><br><span class="line">    <span class="string">"""Send greetings to everyone in the list"""</span></span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">        print(<span class="string">"Hello, "</span> + name.title() + <span class="string">"!"</span>)</span><br><span class="line">        </span><br><span class="line">usernames = [<span class="string">'hannah'</span>, <span class="string">'ty'</span>, <span class="string">'margot'</span>]</span><br><span class="line">greet_users(usernames)</span><br></pre></td></tr></table></figure></p><h6 id="Output-6"><a href="#Output-6" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hello, Hannah!</span><br><span class="line">Hello, Ty!</span><br><span class="line">Hello, Margot!</span><br></pre></td></tr></table></figure><h3 id="8-4-1-在函数中修改列表"><a href="#8-4-1-在函数中修改列表" class="headerlink" title="8.4.1 在函数中修改列表"></a>8.4.1 在函数中修改列表</h3><p><strong>E.g:</strong> printing_models.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_models</span><span class="params">(unprinted_designs, completed_models)</span>:</span></span><br><span class="line"><span class="string">""" ... """</span></span><br><span class="line"><span class="keyword">while</span> unprinted_designs:</span><br><span class="line">current_design = unprinted_designs.pop()</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Print model: "</span> + current_design)</span><br><span class="line">completed_models.append(current_design)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_completed_models</span><span class="params">(completed_models)</span>:</span></span><br><span class="line">print(<span class="string">"\nThe following models have been printed: "</span>)</span><br><span class="line"><span class="keyword">for</span> completed_model <span class="keyword">in</span> completed_models:</span><br><span class="line">print(completed_model)</span><br><span class="line"></span><br><span class="line">unprinted_designs = [<span class="string">'iphone case'</span>, <span class="string">'rebot pendant'</span>, <span class="string">'dodecahedron'</span>]</span><br><span class="line">completed_models = []</span><br><span class="line">print_models(unprinted_designs, completed_models)</span><br><span class="line">show_completed_models(completed_models)</span><br></pre></td></tr></table></figure></p><h6 id="Output-7"><a href="#Output-7" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Print model: dodecahedron</span><br><span class="line">Print model: rebot pendant</span><br><span class="line">Print model: iphone case</span><br><span class="line"></span><br><span class="line">The following models have been printed: </span><br><span class="line">dodecahedron</span><br><span class="line">rebot pendant</span><br><span class="line">iphone case</span><br></pre></td></tr></table></figure><h3 id="8-4-2-禁止函数修改列表"><a href="#8-4-2-禁止函数修改列表" class="headerlink" title="8.4.2 禁止函数修改列表"></a>8.4.2 禁止函数修改列表</h3><p>Use <code>function[:]</code> to pass a copy of the list to a sunction<br>切片法表示创建列表副本</p><h2 id="8-5-传递任意数量的实参"><a href="#8-5-传递任意数量的实参" class="headerlink" title="8.5 传递任意数量的实参"></a>8.5 传递任意数量的实参</h2><p><strong>E.g:</strong> pizza.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_pizza</span><span class="params">(*toppings)</span>:</span></span><br><span class="line">    print(toppings)</span><br><span class="line">    </span><br><span class="line">make_pizza(<span class="string">'pepperoni'</span>)</span><br><span class="line">make_pizza(<span class="string">'mushrooms'</span>, <span class="string">'green peppers'</span>, <span class="string">'extra cheese'</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-8"><a href="#Output-8" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(&apos;pepperoni&apos;,)</span><br><span class="line">(&apos;mushrooms&apos;, &apos;green peppers&apos;, &apos;extra cheese&apos;)</span><br></pre></td></tr></table></figure><h4 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation:"></a>Explanation:</h4><p><code>*toppings</code> 创建了一个名为 <code>toppings</code> 的空元组, 并把所有值封装到元组中</p><h3 id="8-5-1-结合使用位置实参和任意数量实参"><a href="#8-5-1-结合使用位置实参和任意数量实参" class="headerlink" title="8.5.1 结合使用位置实参和任意数量实参"></a>8.5.1 结合使用位置实参和任意数量实参</h3><p><strong>E.g:</strong> new_pizza.py<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_pizza</span><span class="params">(size, *toppings)</span>:</span></span><br><span class="line">    print(<span class="string">"\nMaking a "</span> + str(size) + <span class="string">"-inch pizza with the following toppings:"</span>)</span><br><span class="line">    <span class="keyword">for</span> topping <span class="keyword">in</span> toppings:</span><br><span class="line">        print(<span class="string">"- "</span> + topping)</span><br><span class="line">    </span><br><span class="line">make_pizza(<span class="number">16</span>, <span class="string">'pepperoni'</span>)</span><br><span class="line">make_pizza(<span class="number">12</span>, <span class="string">'mushrooms'</span>, <span class="string">'green peppers'</span>, <span class="string">'extra cheese'</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-9"><a href="#Output-9" class="headerlink" title="Output"></a>Output</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Making a 16-inch pizza with the following toppings:</span><br><span class="line">- pepperoni</span><br><span class="line"></span><br><span class="line">Making a 12-inch pizza with the following toppings:</span><br><span class="line">- mushrooms</span><br><span class="line">- green peppers</span><br><span class="line">- extra cheese</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;要执行函数定义的特定任务, 可调用 &lt;code&gt;函数&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;8-1-定义函数&quot;&gt;&lt;a href=&quot;#8-1-定义函数&quot; class=&quot;headerlink&quot; title=&quot;8.1 定义函数&quot;&gt;&lt;/a&gt;8.1 定义函数&lt;/h2&gt;&lt;p&gt;&lt;stro
      
    
    </summary>
    
      <category term="Programming" scheme="https://ocd.ooo/categories/Programming/"/>
    
    
      <category term="Python" scheme="https://ocd.ooo/tags/Python/"/>
    
      <category term="Develop" scheme="https://ocd.ooo/tags/Develop/"/>
    
  </entry>
  
  <entry>
    <title>If Statement</title>
    <link href="https://ocd.ooo/2018/11/26/2017-11-11-if-statements/"/>
    <id>https://ocd.ooo/2018/11/26/2017-11-11-if-statements/</id>
    <published>2018-11-26T03:32:37.618Z</published>
    <updated>2018-11-26T03:32:37.618Z</updated>
    
    <content type="html"><![CDATA[<p> An class for <code>if</code> STATEMENT</p><a id="more"></a><h2 id="3-1-An-simple-example"><a href="#3-1-An-simple-example" class="headerlink" title="3.1 An simple example"></a>3.1 An simple example</h2><p><em>cars.py</em><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cars = [<span class="string">'audi'</span>, <span class="string">'bmw'</span>, <span class="string">'subaru'</span>, <span class="string">'toyota'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> car <span class="keyword">in</span> cars:</span><br><span class="line">    <span class="keyword">if</span> car == <span class="string">'bmw'</span>:</span><br><span class="line">        print(car.upper())</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(car.title())</span><br></pre></td></tr></table></figure></p><h6 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h6><p><code>Audi</code></p><p><code>BMW</code></p><p><code>Subaru</code></p><p><code>Toyota</code></p><h2 id="3-2-条件测试"><a href="#3-2-条件测试" class="headerlink" title="3.2 条件测试"></a>3.2 条件测试</h2><h3 id="3-2-1-检查是否相等"><a href="#3-2-1-检查是否相等" class="headerlink" title="3.2.1 检查是否相等"></a>3.2.1 检查是否相等</h3><p><code>car == &#39;bmw&#39;</code> will output like <code>True</code> or <code>False</code><br>The following code will always be true<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">car = <span class="string">'audi'</span></span><br><span class="line">car == <span class="string">'audi'</span></span><br></pre></td></tr></table></figure></p><h6 id="Output-True"><a href="#Output-True" class="headerlink" title="Output: True"></a>Output: <code>True</code></h6><h4 id="3-2-1-1-检查是否相等时不考虑大小写"><a href="#3-2-1-1-检查是否相等时不考虑大小写" class="headerlink" title="3.2.1.1 检查是否相等时不考虑大小写"></a>3.2.1.1 检查是否相等时不考虑大小写</h4><p><strong>Use <code>lower()</code> or <code>upper</code></strong></p><p>E.g:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">car = <span class="string">'Audi'</span></span><br><span class="line">print(car.lower() == <span class="string">'audi'</span>)</span><br><span class="line">print(car)</span><br></pre></td></tr></table></figure></p><h6 id="Output-1"><a href="#Output-1" class="headerlink" title="Output:"></a>Output:</h6><p><code>True</code><br><code>Audi</code><br>–&gt; 操作不影响存储在变量 <code>car</code> 中的值</p><h3 id="3-2-2-检查是否不相等"><a href="#3-2-2-检查是否不相等" class="headerlink" title="3.2.2 检查是否不相等"></a>3.2.2 检查是否不相等</h3><p><strong>Use <code>!=</code></strong></p><p>E.g: toppings.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">requested_topping = <span class="string">'mushrooms'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> requested_topping != <span class="string">'anchovies'</span>:</span><br><span class="line">    print(<span class="string">"Hold the anchovies!"</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-Hold-the-anchovies"><a href="#Output-Hold-the-anchovies" class="headerlink" title="Output: Hold the anchovies!"></a>Output: <code>Hold the anchovies!</code></h6><h3 id="3-2-3-比较数字"><a href="#3-2-3-比较数字" class="headerlink" title="3.2.3 比较数字"></a>3.2.3 比较数字</h3><p><strong>also use <code>==</code> and <code>!=</code></strong></p><p>E.g: magic_number.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">answer = <span class="number">17</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> answer != <span class="number">42</span>:</span><br><span class="line">    print(<span class="string">"This is not the correct answer. please try again!"</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-This-is-not-the-correct-answer-please-try-again"><a href="#Output-This-is-not-the-correct-answer-please-try-again" class="headerlink" title="Output: This is not the correct answer. please try again!"></a>Output: <code>This is not the correct answer. please try again!</code></h6><h3 id="3-2-4-检查多个条件"><a href="#3-2-4-检查多个条件" class="headerlink" title="3.2.4 检查多个条件"></a>3.2.4 检查多个条件</h3><p><strong>Use <code>and</code> and <code>or</code></strong></p><h4 id="3-2-4-1-使用-and-检查多个条件"><a href="#3-2-4-1-使用-and-检查多个条件" class="headerlink" title="3.2.4.1 使用 and 检查多个条件"></a>3.2.4.1 使用 <code>and</code> 检查多个条件</h4><p>E.g:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">age_0 = <span class="number">22</span></span><br><span class="line">age_1 = <span class="number">18</span></span><br><span class="line">print(age_0 &gt;= <span class="number">21</span> <span class="keyword">and</span> age_1 &gt;= <span class="number">21</span>)  <span class="comment"># False</span></span><br><span class="line">age_1 = <span class="number">22</span></span><br><span class="line">print(age_0 &gt;= <span class="number">21</span> <span class="keyword">and</span> age_1 &gt;= <span class="number">21</span>)  <span class="comment"># True</span></span><br></pre></td></tr></table></figure></p><h4 id="3-2-4-2-使用-or-检查多个条件"><a href="#3-2-4-2-使用-or-检查多个条件" class="headerlink" title="3.2.4.2 使用 or 检查多个条件"></a>3.2.4.2 使用 <code>or</code> 检查多个条件</h4><p><strong>同上</strong></p><h3 id="3-2-5-检查特定值是否在表中"><a href="#3-2-5-检查特定值是否在表中" class="headerlink" title="3.2.5 检查特定值是否在表中"></a>3.2.5 检查特定值是否在表中</h3><p><strong>使用关键词 <code>in</code></strong></p><p>E.g:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">requested_toppings = [<span class="string">'mushrooms'</span>, <span class="string">'onions'</span>, <span class="string">'pineapple'</span>]</span><br><span class="line">print(<span class="string">'mushrooms'</span> <span class="keyword">in</span> requested_toppings)    <span class="comment"># True</span></span><br><span class="line">print(<span class="string">'pepperoni'</span> <span class="keyword">in</span> requested_toppings)    <span class="comment"># false</span></span><br></pre></td></tr></table></figure></p><h3 id="3-2-6-检查特定元素不在列表中"><a href="#3-2-6-检查特定元素不在列表中" class="headerlink" title="3.2.6 检查特定元素不在列表中"></a>3.2.6 检查特定元素不在列表中</h3><p><strong>使用关键字 <code>not in</code></strong></p><p>E.g: banned_users.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">banned_users = [<span class="string">'andrew'</span>, <span class="string">'carolina'</span>, david<span class="string">']</span></span><br><span class="line"><span class="string">user = '</span>marie<span class="string">'</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if user not in banned_users:</span></span><br><span class="line"><span class="string">    print(user.title() + ", you can post a response if you wish.")</span></span><br></pre></td></tr></table></figure></p><h6 id="Output-2"><a href="#Output-2" class="headerlink" title="Output:"></a>Output:</h6><p><code>Marie, you can post a response if you wish</code></p><h3 id="3-2-7-bool-expression"><a href="#3-2-7-bool-expression" class="headerlink" title="3.2.7 bool expression"></a>3.2.7 bool expression</h3><p><strong>条件测试的别名, 要么为 <code>True</code> 要么为 <code>False</code></strong></p><p>E.g:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">game_active = <span class="keyword">True</span></span><br><span class="line">can_edit = <span class="keyword">False</span></span><br></pre></td></tr></table></figure></p><h2 id="3-3-If语句"><a href="#3-3-If语句" class="headerlink" title="3.3 If语句"></a>3.3 If语句</h2><h3 id="3-3-1-简单的-if-语句"><a href="#3-3-1-简单的-if-语句" class="headerlink" title="3.3.1 简单的 if 语句"></a>3.3.1 简单的 if 语句</h3><p><strong>一个测试一个操作</strong></p><p>E.g:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition_test:</span><br><span class="line">    do something</span><br></pre></td></tr></table></figure></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">19</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    print(<span class="string">"You are old enough to vote!"</span>)</span><br><span class="line">    print(<span class="string">"Have you registered to vote yet?"</span>)</span><br></pre></td></tr></table></figure><p>this will print two lines</p><h6 id="Output-3"><a href="#Output-3" class="headerlink" title="Output:"></a>Output:</h6><p><code>You are old enough to vote!</code><br><code>Have you registered to vote yet?</code></p><p>if age is less than 18, the program will give no output.</p><h3 id="3-3-2-if-else-语句"><a href="#3-3-2-if-else-语句" class="headerlink" title="3.3.2 if-else 语句"></a>3.3.2 if-else 语句</h3><p><strong><code>else</code> 在if不成立时执行</strong></p><p>E.g:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">17</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    print(<span class="string">"You are old enough to vote"</span>)</span><br><span class="line">    print(<span class="string">"Have you registered to vote yet?"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"Sorry, you are too young to vote."</span>)</span><br><span class="line">    print(<span class="string">"Please register to cote as soon as you turn 18!"</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-4"><a href="#Output-4" class="headerlink" title="Output:"></a>Output:</h6><p><code>Sorry, you are too young to vote.</code><br><code>Please register to cote as soon as you turn 18!</code></p><h3 id="3-3-3-if-elif-else-结构"><a href="#3-3-3-if-elif-else-结构" class="headerlink" title="3.3.3 if-elif-else 结构"></a>3.3.3 if-elif-else 结构</h3><p><strong>检查超过两个条件的情形</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> age &lt; <span class="number">4</span>:</span><br><span class="line">    print(<span class="string">"Your admission cost is $0"</span>)</span><br><span class="line"><span class="keyword">elif</span> age &lt; <span class="number">18</span></span><br><span class="line">    print(<span class="string">"Your admission cost is $5"</span>)</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    print(<span class="string">"Your admission cost is $10"</span>)</span><br></pre></td></tr></table></figure><h6 id="Output-Your-admission-cost-is-5"><a href="#Output-Your-admission-cost-is-5" class="headerlink" title="Output: Your admission cost is $5"></a>Output: <code>Your admission cost is $5</code></h6><h3 id="3-3-4-使用多个-elif-代码块"><a href="#3-3-4-使用多个-elif-代码块" class="headerlink" title="3.3.4 使用多个 elif 代码块"></a>3.3.4 使用多个 <code>elif</code> 代码块</h3><h3 id="3-3-5-省略-else-代码块"><a href="#3-3-5-省略-else-代码块" class="headerlink" title="3.3.5 省略 else 代码块"></a>3.3.5 省略 <code>else</code> 代码块</h3><h3 id="3-3-6-测试多个条件"><a href="#3-3-6-测试多个条件" class="headerlink" title="3.3.6 测试多个条件"></a>3.3.6 测试多个条件</h3><h2 id="3-4-使用-if-语句处理列表"><a href="#3-4-使用-if-语句处理列表" class="headerlink" title="3.4 使用 if 语句处理列表"></a>3.4 使用 <code>if</code> 语句处理列表</h2><h3 id="3-4-1-检查特殊元素"><a href="#3-4-1-检查特殊元素" class="headerlink" title="3.4.1 检查特殊元素"></a>3.4.1 检查特殊元素</h3><p>E.g: toppings.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">requested_toppings = [<span class="string">'mushrooms'</span>, <span class="string">'green_peppers'</span>, extra cheese<span class="string">']</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for requested_topping in requested_toppings:</span></span><br><span class="line"><span class="string">    print("Adding " + requested_topping + '</span>.<span class="string">')</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">print("\nFinished making your pizza")</span></span><br></pre></td></tr></table></figure></p><h6 id="Output-5"><a href="#Output-5" class="headerlink" title="Output"></a>Output</h6><p><code>Adding mushrooms.</code><br><code>Adding green_peppers.</code><br><code>Adding extra cheese.</code></p><p><code>Finished making your pizza</code></p><p>A polished version<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">requested_toppings = [<span class="string">'mushrooms'</span>, <span class="string">'green_peppers'</span>, extra cheese<span class="string">']</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">for requested_topping in requested_toppings:</span></span><br><span class="line"><span class="string">    if requested_topping == '</span>green_peppers<span class="string">':</span></span><br><span class="line"><span class="string">        print(“Sorry we are out of green peppers right now.")</span></span><br><span class="line"><span class="string">    else: </span></span><br><span class="line"><span class="string">        print("Adding " + requested_topping + '</span>.<span class="string">')</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">print("\nFinished making your pizza")</span></span><br></pre></td></tr></table></figure></p><h6 id="Output-6"><a href="#Output-6" class="headerlink" title="Output:"></a>Output:</h6><p><code>Adding mushrooms</code><br><code>Sorry we are out of green peppers right now.</code><br><code>Adding extra cheese</code></p><p><code>Finished making your pizza</code></p><h3 id="3-4-2-确定列表不是空的"><a href="#3-4-2-确定列表不是空的" class="headerlink" title="3.4.2 确定列表不是空的"></a>3.4.2 确定列表不是空的</h3><p><strong>使用 <code>for</code></strong></p><p>E.g:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">requested_toppings = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> requested_toppings:</span><br><span class="line">    <span class="keyword">for</span> requested_topping <span class="keyword">in</span> requested_toppings:</span><br><span class="line">        print(<span class="string">"Adding "</span> + requested_topping + <span class="string">'.'</span>)</span><br><span class="line">    print(<span class="string">"Finished making your pizza"</span>)</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    print(<span class="string">"Are you sure you want a plain pizza?"</span>)</span><br></pre></td></tr></table></figure></p><h6 id="Output-7"><a href="#Output-7" class="headerlink" title="Output:"></a>Output:</h6><p><code>Are you sure you want a plain pizza?</code></p><h3 id="3-4-3-使用多个列表"><a href="#3-4-3-使用多个列表" class="headerlink" title="3.4.3 使用多个列表"></a>3.4.3 使用多个列表</h3><p>Skipped</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; An class for &lt;code&gt;if&lt;/code&gt; STATEMENT&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="https://ocd.ooo/categories/Programming/"/>
    
    
      <category term="Python" scheme="https://ocd.ooo/tags/Python/"/>
    
      <category term="Develop" scheme="https://ocd.ooo/tags/Develop/"/>
    
  </entry>
  
  <entry>
    <title>Python 列表</title>
    <link href="https://ocd.ooo/2018/11/26/2017-11-11-python-list/"/>
    <id>https://ocd.ooo/2018/11/26/2017-11-11-python-list/</id>
    <published>2018-11-26T03:32:37.618Z</published>
    <updated>2018-11-26T03:32:37.618Z</updated>
    
    <content type="html"><![CDATA[<p>使用 <code>[]</code> 表示列表</p><a id="more"></a><h2 id="2-1-Example-–-bicycles-py"><a href="#2-1-Example-–-bicycles-py" class="headerlink" title="2.1. Example – bicycles.py"></a>2.1. Example – bicycles.py</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bicycles = [<span class="string">'trek'</span>, <span class="string">'cannondale'</span>, <span class="string">'redline'</span>, <span class="string">'specialized'</span>] </span><br><span class="line">print( bicycles)</span><br></pre></td></tr></table></figure><p><strong>The output is</strong> <code>[&#39;trek&#39;, &#39;cannondale&#39;, &#39;redline&#39;, &#39;specialized&#39;]</code></p><p><strong>输出元素</strong> –&gt; <code>print(bicycles[0])</code> to print <code>trek</code></p><h1 id="START-FROM-0"><a href="#START-FROM-0" class="headerlink" title="START FROM 0!!!!!"></a>START FROM 0!!!!!</h1><p>注: 使用 <code>bicycle[-1]</code> 以取得 bicycle 中的倒数第一个元素<br>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<code>bicycle[-2]</code> 以取得 bicycle 中的倒数第二个元素<br>&ensp;&ensp;&ensp;&ensp;·······<br>&ensp;&ensp;&ensp;&ensp;依次类推<br><br>    </p><h2 id="2-2-改变一个元素的值-Example-–-gt-change-‘trek’-to-‘test’"><a href="#2-2-改变一个元素的值-Example-–-gt-change-‘trek’-to-‘test’" class="headerlink" title="2.2. 改变一个元素的值 Example –&gt; change ‘trek’ to ‘test’"></a>2.2. 改变一个元素的值 Example –&gt; change ‘trek’ to ‘test’</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bicycles[<span class="number">0</span>] = <span class="string">'test'</span></span><br></pre></td></tr></table></figure><p><br></p><h2 id="2-3-使用append-将元素添加到列表末尾"><a href="#2-3-使用append-将元素添加到列表末尾" class="headerlink" title="2.3. 使用append() 将元素添加到列表末尾"></a>2.3. 使用append() 将元素添加到列表末尾</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bicycles.append(<span class="string">'test_end'</span>)</span><br></pre></td></tr></table></figure><p>one more example here</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">motorbicycles = []</span><br><span class="line">motorbicycles.append(<span class="string">'cannondale'</span>)</span><br><span class="line">motorbicycles.append(<span class="string">'redline'</span>)</span><br><span class="line">motorbicycles.append(<span class="string">'specialized'</span>)</span><br><span class="line">print(motorbicycles)</span><br></pre></td></tr></table></figure><h6 id="Output-39-cannondale-39-39-reline-39-39-specialized-39"><a href="#Output-39-cannondale-39-39-reline-39-39-specialized-39" class="headerlink" title="Output [&#39;cannondale&#39;, &#39;reline&#39;, &#39;specialized&#39;]"></a>Output <code>[&#39;cannondale&#39;, &#39;reline&#39;, &#39;specialized&#39;]</code></h6><p><br></p><h2 id="2-4-使用-insert-向列表添加元素"><a href="#2-4-使用-insert-向列表添加元素" class="headerlink" title="2.4. 使用 insert() 向列表添加元素"></a>2.4. 使用 insert() 向列表添加元素</h2><p>注: motorbicycles 与上文相同.<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">motorbicycles.insert(<span class="number">0</span>, <span class="string">'ducati'</span>)</span><br><span class="line">print(motorbicycles)</span><br></pre></td></tr></table></figure></p><h6 id="Output-39-ducati-39-39-cannondale-39-39-realine-39-39-specialized-39"><a href="#Output-39-ducati-39-39-cannondale-39-39-realine-39-39-specialized-39" class="headerlink" title="Output [&#39;ducati&#39;, &#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]"></a>Output <code>[&#39;ducati&#39;, &#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]</code></h6><p><br></p><h2 id="2-5-删除语句"><a href="#2-5-删除语句" class="headerlink" title="2.5. 删除语句"></a>2.5. 删除语句</h2><h3 id="2-5-1-使用-del-语句"><a href="#2-5-1-使用-del-语句" class="headerlink" title="2.5.1 使用 del 语句"></a>2.5.1 使用 del 语句</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> motorbicycles[<span class="number">0</span>]</span><br><span class="line">print(motorbicycles)</span><br></pre></td></tr></table></figure><h6 id="Output-39-cannondale-39-39-realine-39-39-specialized-39"><a href="#Output-39-cannondale-39-39-realine-39-39-specialized-39" class="headerlink" title="Output [&#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]"></a>Output <code>[&#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]</code></h6><h3 id="2-5-2-使用-pop-删除元素"><a href="#2-5-2-使用-pop-删除元素" class="headerlink" title="2.5.2 使用 pop() 删除元素"></a>2.5.2 使用 pop() 删除元素</h3><p>pop()可删除列表末尾的元素，并让你能够接着使用它。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">motorcycles = [<span class="string">'honda'</span>, <span class="string">'yamaha'</span>, <span class="string">'suzuki'</span>]</span><br><span class="line">print(motorcycles)</span><br><span class="line">popped_motorcycle = motorcycles.pop()</span><br><span class="line">print(motorcycles)</span><br><span class="line">print(popped_motorcycle)</span><br></pre></td></tr></table></figure></p><h6 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h6><p><code>[&#39;honda&#39;, &#39;yamaha&#39;, &#39;suzuki&#39;]</code><br><code>[&#39;honda&#39;, &#39;yamaha&#39;]</code><br><code>suzuki</code><br>使用 pop(<strong>int</strong>) 来确定弹出位置 <code>motorcycles.pop(0)</code> 为弹出第0(1)个位置的 <em>honda</em></p><h3 id="2-5-3-使用-remove-按值删除元素"><a href="#2-5-3-使用-remove-按值删除元素" class="headerlink" title="2.5.3 使用 remove 按值删除元素"></a>2.5.3 使用 remove 按值删除元素</h3><p><code>motorcycles.remove(&#39;honda&#39;)</code> 会删除 <strong>honda</strong></p><h2 id="2-6-使用-sort-对列表进行永久排序"><a href="#2-6-使用-sort-对列表进行永久排序" class="headerlink" title="2.6 使用 sort() 对列表进行永久排序"></a>2.6 使用 sort() 对列表进行永久排序</h2><p> cars.py<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cars = [<span class="string">'bmw'</span>, <span class="string">'audi'</span>, <span class="string">'toyota'</span>, <span class="string">'subaru'</span>]</span><br><span class="line">cars.sort()</span><br><span class="line">print(cars)</span><br><span class="line">cars.sort(reverse=<span class="keyword">True</span>)</span><br><span class="line">print(cars)</span><br></pre></td></tr></table></figure></p><h6 id="output"><a href="#output" class="headerlink" title="output:"></a>output:</h6><p><code>[&#39;audi&#39;, &#39;bmw&#39;, &#39;subaru&#39;, &#39;toyota&#39;]</code></p><p><code>[&#39;toyota&#39;, &#39;subaru&#39;, &#39;bmw&#39;, &#39;audi&#39;]</code></p><h2 id="2-7-使用-sorted-对列表进行临时排序"><a href="#2-7-使用-sorted-对列表进行临时排序" class="headerlink" title="2.7 使用 sorted() 对列表进行临时排序"></a>2.7 使用 sorted() 对列表进行临时排序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cars = [<span class="string">'bmw'</span>, <span class="string">'audi'</span>, <span class="string">'toyota'</span>, <span class="string">'subaru'</span>]</span><br><span class="line"><span class="comment">#cars.sort()</span></span><br><span class="line">print(cars)</span><br><span class="line">print(sorted(cars))</span><br><span class="line">print(cars)</span><br><span class="line">print(sorted(cars, reverse=<span class="keyword">True</span>))</span><br></pre></td></tr></table></figure><h6 id="output-1"><a href="#output-1" class="headerlink" title="output:"></a>output:</h6><p><code>[&#39;bmw&#39;, &#39;audi&#39;, &#39;toyota&#39;, &#39;subaru&#39;]</code></p><p><code>[&#39;audi&#39;, &#39;bmw&#39;, &#39;subaru&#39;, &#39;toyota&#39;]</code></p><p><code>[&#39;bmw&#39;, &#39;audi&#39;, &#39;toyota&#39;, &#39;subaru&#39;]</code></p><p><code>[&#39;toyota&#39;, &#39;subaru&#39;, &#39;bmw&#39;, &#39;audi&#39;]</code></p><h2 id="2-8-使用-len-确定列表长度"><a href="#2-8-使用-len-确定列表长度" class="headerlink" title="2.8 使用 len() 确定列表长度"></a>2.8 使用 len() 确定列表长度</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">len(cars)</span><br></pre></td></tr></table></figure><h2 id="2-9-遍历整个列表"><a href="#2-9-遍历整个列表" class="headerlink" title="2.9 遍历整个列表"></a>2.9 遍历整个列表</h2><p>for 循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">magicians = [<span class="string">'alice'</span>, <span class="string">'david'</span>, <span class="string">'carolina'</span>]</span><br><span class="line"><span class="keyword">for</span> magician <span class="keyword">in</span> magicians:</span><br><span class="line">  print(magician)</span><br></pre></td></tr></table></figure><h6 id="每次从列表取名字-存在-magician-中并打印-print"><a href="#每次从列表取名字-存在-magician-中并打印-print" class="headerlink" title="每次从列表取名字, 存在 magician 中并打印 (print)"></a>每次从列表取名字, 存在 <code>magician</code> 中并打印 (<code>print</code>)</h6><p>每个缩进的代码行都是循环的一部分，且将针对列表中的每个值都执行一次。因此，可对列表中的每个值执行任意次数的操作。</p><h2 id="2-10-创建数值列表"><a href="#2-10-创建数值列表" class="headerlink" title="2.10 创建数值列表"></a>2.10 创建数值列表</h2><h3 id="2-10-1-使用-range"><a href="#2-10-1-使用-range" class="headerlink" title="2.10.1 使用 range()"></a>2.10.1 使用 range()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>)</span><br><span class="line">  print(value)</span><br></pre></td></tr></table></figure><h6 id="Output-1"><a href="#Output-1" class="headerlink" title="Output:"></a>Output:</h6><p><code>1</code><br><code>2</code><br><code>3</code><br><code>4</code></p><p>在这个示例 中，range()只是打印数字1~ 4， 这是你在编程语言中经常看到的差一行为的结果。函数 range() 让 Python 从你指定的第一个值开始 数，并在到达你 指定的第二个值后停止，因此输出不包含 第二个值（这里 为 5）。</p><p><strong>E.g: To print 1 2 3 4 5, use:</strong><br> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line"> print(value)</span><br></pre></td></tr></table></figure></p><h3 id="2-10-2-使用-list-和-range-建表"><a href="#2-10-2-使用-list-和-range-建表" class="headerlink" title="2.10.2 使用 list() 和 range() 建表"></a>2.10.2 使用 list() 和 range() 建表</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">numbers = list(range(<span class="number">1</span>,<span class="number">6</span>))</span><br><span class="line">print(numbers)</span><br><span class="line"><span class="comment"># 设置步长</span></span><br><span class="line">even_number = list(range(<span class="number">2</span>,<span class="number">11</span>,<span class="number">2</span>))</span><br><span class="line">print(even_number)</span><br></pre></td></tr></table></figure><h6 id="Output-2"><a href="#Output-2" class="headerlink" title="Output:"></a>Output:</h6><p><code>[1, 2, 3, 4, 5]</code><br><code>[2, 4, 6, 8, 10]</code></p><p><em>平方数组</em><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">squares = []</span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>):</span><br><span class="line">  squares.append(value**<span class="number">2</span>)</span><br><span class="line">  </span><br><span class="line">print(squares)</span><br></pre></td></tr></table></figure></p><h2 id="2-11-对数字列表进行简单计算"><a href="#2-11-对数字列表进行简单计算" class="headerlink" title="2.11 对数字列表进行简单计算"></a>2.11 对数字列表进行简单计算</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">digits = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">0</span>]</span><br><span class="line">print(min(digits))</span><br><span class="line">print(max(digits))</span><br><span class="line">print(sum(digits))</span><br></pre></td></tr></table></figure><h6 id="Output-3"><a href="#Output-3" class="headerlink" title="Output:"></a>Output:</h6><p><code>0</code><br><code>9</code><br><code>45</code></p><h3 id="2-11-1列表解析"><a href="#2-11-1列表解析" class="headerlink" title="2.11.1列表解析"></a>2.11.1列表解析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">squares = [value**<span class="number">2</span> <span class="keyword">for</span> value <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">11</span>)]</span><br><span class="line">print(squares)</span><br></pre></td></tr></table></figure><h6 id="Output-1-4-9-16-25-36-49-64-81-100"><a href="#Output-1-4-9-16-25-36-49-64-81-100" class="headerlink" title="Output: [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]"></a>Output: <code>[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</code></h6><h2 id="2-12-切片"><a href="#2-12-切片" class="headerlink" title="2.12 切片"></a>2.12 切片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">players = [<span class="string">'charles'</span>, <span class="string">'martina'</span>, <span class="string">'michael'</span>, <span class="string">'florence'</span>, <span class="string">'eli'</span>]</span><br><span class="line">print(players[<span class="number">0</span>:<span class="number">3</span>]</span><br></pre></td></tr></table></figure><h6 id="Output-39-charles-39-39-martina-39-39-michael-39"><a href="#Output-39-charles-39-39-martina-39-39-michael-39" class="headerlink" title="Output: [&#39;charles&#39;, &#39;martina&#39;, &#39;michael&#39;]"></a>Output: <code>[&#39;charles&#39;, &#39;martina&#39;, &#39;michael&#39;]</code></h6><h3 id="遍历切片"><a href="#遍历切片" class="headerlink" title="遍历切片"></a>遍历切片</h3><p>处理 列表 的 部分 元素—— Python 称之为 切片。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> player <span class="keyword">in</span> players[:<span class="number">3</span>]:</span><br><span class="line">    print(player.title())</span><br></pre></td></tr></table></figure><h2 id="2-13-复制列表"><a href="#2-13-复制列表" class="headerlink" title="2.13 复制列表"></a>2.13 复制列表</h2><p><em>foods.py</em><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">my_foods = [<span class="string">'pizza'</span>, <span class="string">'falafel'</span>, <span class="string">'carrot cake'</span>]</span><br><span class="line">friends_foods = my_foods[:]</span><br><span class="line"></span><br><span class="line">print(<span class="string">"My favorite foods are:"</span>)</span><br><span class="line">print(my_foods)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"\nMy friend's favorite foods are:"</span>)</span><br><span class="line">print(friend_foods)</span><br></pre></td></tr></table></figure></p><p>这实际上产生了2个列表，他们是独立的。E.g:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">friends_foods.append(<span class="string">'ice cream'</span>)</span><br><span class="line">print(my_foods)</span><br><span class="line">print(friends_foods)</span><br></pre></td></tr></table></figure></p><p>此代码中输出并不相同，可见相互独立。</p><p><strong>需要用切片复制列表，否则不能得到两个列表</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">my_foods = [<span class="string">'pizza'</span>, <span class="string">'falafel'</span>, <span class="string">'carrot cake'</span>]</span><br><span class="line"></span><br><span class="line">friend_foods = my_foods</span><br><span class="line"></span><br><span class="line">my_foods.append(<span class="string">'cannoli'</span>)</span><br><span class="line">friend_food.append(<span class="string">'ice cream'</span>)</span><br><span class="line"></span><br><span class="line">print(my_foods)</span><br><span class="line">print(friend_food)</span><br></pre></td></tr></table></figure></p><p>实际上, 输出是一样的</p><h2 id="2-14-元组"><a href="#2-14-元组" class="headerlink" title="2.14 元组"></a>2.14 元组</h2><p>Python 将不能修改的值称为不可变的，而不可变的列表被称为元组。</p><h3 id="2-14-1-定义元组"><a href="#2-14-1-定义元组" class="headerlink" title="2.14.1 定义元组"></a>2.14.1 定义元组</h3><p>使用圆括号标识</p><p><em>dimensions.py</em><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dimensions = (<span class="number">200</span>, <span class="number">50</span>)</span><br><span class="line">print(dimensions[<span class="number">0</span>])</span><br><span class="line">print(dimensions[<span class="number">1</span>])</span><br></pre></td></tr></table></figure></p><h6 id="Output-4"><a href="#Output-4" class="headerlink" title="Output:"></a>Output:</h6><p><code>200</code><br><code>50</code></p><p>值不能被改变:<br><code>dimensions[0] = 50</code></p><h6 id="Output-5"><a href="#Output-5" class="headerlink" title="Output:"></a>Output:</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Traceback (most recent call last): File &quot;dimensions.py&quot;, line 3, in &lt; module&gt; dimensions[ 0] = 250 TypeError: &apos;tuple&apos; object does not support item assignment</span><br></pre></td></tr></table></figure><h3 id="遍历元组中所有值"><a href="#遍历元组中所有值" class="headerlink" title="遍历元组中所有值"></a>遍历元组中所有值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dimensions = (<span class="number">50</span>, <span class="number">200</span>)</span><br><span class="line"><span class="keyword">for</span> dimension <span class="keyword">in</span> dimensions:</span><br><span class="line">    print(dimension)</span><br></pre></td></tr></table></figure><h6 id="Output-6"><a href="#Output-6" class="headerlink" title="Output:"></a>Output:</h6><p><code>200</code><br><code>50</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 &lt;code&gt;[]&lt;/code&gt; 表示列表&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="https://ocd.ooo/categories/Programming/"/>
    
    
      <category term="Python" scheme="https://ocd.ooo/tags/Python/"/>
    
      <category term="Develop" scheme="https://ocd.ooo/tags/Develop/"/>
    
  </entry>
  
  <entry>
    <title>Python 入门</title>
    <link href="https://ocd.ooo/2018/11/26/2017-11-11-new-to-python/"/>
    <id>https://ocd.ooo/2018/11/26/2017-11-11-new-to-python/</id>
    <published>2018-11-26T03:32:37.618Z</published>
    <updated>2018-11-26T03:32:37.618Z</updated>
    
    <content type="html"><![CDATA[<p>Python - A powerful language</p><a id="more"></a><h3 id="1-1-A-simple-program"><a href="#1-1-A-simple-program" class="headerlink" title="1.1. A simple program"></a>1.1. A simple program</h3><p>Hello, world<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line">print(<span class="string">"Hello"</span>, <span class="string">"World"</span>)</span><br></pre></td></tr></table></figure></p><h3 id="1-2-数据类型"><a href="#1-2-数据类型" class="headerlink" title="1.2. 数据类型"></a>1.2. 数据类型</h3><p><code>int</code> and <code>str</code></p><h3 id="1-2-1-str-Usage"><a href="#1-2-1-str-Usage" class="headerlink" title="1.2.1. str Usage"></a>1.2.1. str Usage</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">print(name.title())                         <span class="comment"># 首字母大写</span></span><br><span class="line">print(name.upper())                         <span class="comment"># 全部大写</span></span><br><span class="line">print(name.lower())                         <span class="comment"># 全部小写</span></span><br><span class="line">print(favourite_language.rstrip())          <span class="comment"># 去处末尾空格</span></span><br><span class="line">print(favourite_language.lstrip())          <span class="comment"># 去处开头空格</span></span><br><span class="line">print(favourite_language.strip())           <span class="comment"># 去除所有空格</span></span><br></pre></td></tr></table></figure><h3 id="1-2-2-int-Usage"><a href="#1-2-2-int-Usage" class="headerlink" title="1.2.2. int Usage"></a>1.2.2. int Usage</h3><p>+ - * / 运算</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Python - A powerful language&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="https://ocd.ooo/categories/Programming/"/>
    
    
      <category term="Python" scheme="https://ocd.ooo/tags/Python/"/>
    
      <category term="Develop" scheme="https://ocd.ooo/tags/Develop/"/>
    
  </entry>
  
  <entry>
    <title>在 macOS 编译 Android 的尝试</title>
    <link href="https://ocd.ooo/2018/11/26/2017-11-15-Build-Android-on-MacOS/"/>
    <id>https://ocd.ooo/2018/11/26/2017-11-15-Build-Android-on-MacOS/</id>
    <published>2018-11-26T03:32:37.618Z</published>
    <updated>2018-11-26T03:32:37.619Z</updated>
    
    <content type="html"><![CDATA[<p>尝试在 macOS 10.13 上编译 Android LineageOS 14.1 备份以便将来使用<br><a id="more"></a></p><h2 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h2><h3 id="1-1-repo"><a href="#1-1-repo" class="headerlink" title="1.1 repo"></a>1.1 repo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install repo</span><br></pre></td></tr></table></figure><h3 id="1-2-准备硬盘-镜像"><a href="#1-2-准备硬盘-镜像" class="headerlink" title="1.2 准备硬盘(镜像)"></a>1.2 准备硬盘(镜像)</h3><p>我的办法使直接从移动硬盘上割了一块以储存 Android 源码, 格式应当设置为 macOS拓展 日志式 <code>区分大小写</code></p><h3 id="1-3-准备源码"><a href="#1-3-准备源码" class="headerlink" title="1.3 准备源码"></a>1.3 准备源码</h3><p>从 GitHub 同步 Lineage 14.1 源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">repo init -u git://github.com/LineageOS/android.git -b cm-14.1</span><br><span class="line">repo sync -j4</span><br></pre></td></tr></table></figure><p>唔，作为 IPv6 用户，同步速度 10M/s 无压力呀。<br>如遇速度慢请使用 USTC 镜像代替 Google Source 进行同步，必要时可能需要爱国XD～</p><h3 id="1-4-Xcode-降级"><a href="#1-4-Xcode-降级" class="headerlink" title="1.4 Xcode 降级"></a>1.4 Xcode 降级</h3><p>在同步代码的时候，我们可以进行一些其他工作<del>为编译的顺畅进行做好准备</del><br>Xcode 9 的 SDK 对 Android 7.1 十分不友好， 因此，建议从 <a href="https://developer.apple.com/download/more/" target="_blank" rel="noopener">Apple Developer</a> 下载 Xcode 8.3.3.<br>将 Xcode8.3.3.app 移动到 /Application 中， 然后运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-select -p /Application/Xcode8.3.3.app</span><br></pre></td></tr></table></figure><h3 id="1-5-Java-安装"><a href="#1-5-Java-安装" class="headerlink" title="1.5 Java 安装"></a>1.5 Java 安装</h3><p>编译 Lineage14.1 需要 <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">JDK8</a>, 如果安装了JDK 9 你还是先卸了吧。。。毕竟我是没法子转 JDK Version.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#卸载Java9</span></span><br><span class="line">sudo rm -fr /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin</span><br><span class="line">sudo rm -fr /Library/PreferencePanes/JavaControlPanel.prefPane</span><br><span class="line">sudo rm -fr ~/Library/Application\ Support/Java</span><br><span class="line">sudo rm -fr /Library/Java/JavaVirtualMachines/jdk-9.jdk</span><br></pre></td></tr></table></figure><p>然后即可安装 JDK 8.<br>安装后确认:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">➜ java -version</span><br><span class="line">java version <span class="string">"1.8.0_151"</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_151-b12)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="1-6-依赖安装"><a href="#1-6-依赖安装" class="headerlink" title="1.6 依赖安装"></a>1.6 依赖安装</h3><p>唔 这个参考 <a href="https://source.android.com/source/initializing" target="_blank" rel="noopener">Android Source</a></p><h2 id="2-开始编译"><a href="#2-开始编译" class="headerlink" title="2. 开始编译"></a>2. 开始编译</h2><h3 id="2-1-设置环境变量"><a href="#2-1-设置环境变量" class="headerlink" title="2.1 设置环境变量"></a>2.1 设置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ccache</span></span><br><span class="line"><span class="built_in">export</span> USE_CCACHE=1             <span class="comment"># 开启 CCACHE</span></span><br><span class="line"><span class="built_in">export</span> CCACHE_DIR=/&lt;path_of_your_choice&gt;/.ccache <span class="comment"># 设置 CCACHE 文件夹</span></span><br><span class="line">prebuilts/misc/darwin-x86/ccache/ccache -M 50G    <span class="comment"># 设置 CCACHE 大小</span></span><br></pre></td></tr></table></figure><p>也可以将上述写入 ~/.bash_profile 以避免重复输入。。</p><h3 id="2-2-对内核进行修改"><a href="#2-2-对内核进行修改" class="headerlink" title="2.2 对内核进行修改"></a>2.2 对内核进行修改</h3><h4 id="2-2-1-gsed"><a href="#2-2-1-gsed" class="headerlink" title="2.2.1 gsed"></a>2.2.1 gsed</h4><p>我们注意到 <code>brew install gnu-sed</code> 使用的是 <code>gsed</code> 命令。<br>因此我们要对 kernel source 中的脚本进行修改。</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--- a/scripts/headers_install.sh</span></span><br><span class="line"><span class="comment">+++ b/scripts/headers_install.sh</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">-   sed -r \</span></span><br><span class="line"><span class="addition">+   gsed -r \</span></span><br></pre></td></tr></table></figure><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--- a/arch/arm64/kernel/vdso/gen_vdso_offsets.sh</span></span><br><span class="line"><span class="comment">+++ b/arch/arm64/kernel/vdso/gen_vdso_offsets.sh</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">- sed -n -e 's/^00*/0/' -e \</span></span><br><span class="line"><span class="addition">+ gsed -n -e 's/^00*/0/' -e \</span></span><br></pre></td></tr></table></figure><h4 id="2-2-2-xargs"><a href="#2-2-2-xargs" class="headerlink" title="2.2.2 xargs"></a>2.2.2 xargs</h4><p>Mac 的 xargs 与Linux存在差别，因此进行修改:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install findutils</span><br></pre></td></tr></table></figure><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--- a/scripts/Makefile.modpost</span></span><br><span class="line"><span class="comment">+++ b/scripts/Makefile.modpost</span></span><br><span class="line"></span><br><span class="line"><span class="deletion">- MODLISTCMD := find $(MODVERDIR) -name '*.mod' | xargs -r grep -h '\.ko$$' | sort  -u</span></span><br><span class="line"><span class="addition">+ MODLISTCMD := find $(MODVERDIR) -name '*.mod' | gxargs -r grep -h '\.ko$$' | sort  -u</span></span><br></pre></td></tr></table></figure><h3 id="2-3-Bison"><a href="#2-3-Bison" class="headerlink" title="2.3 Bison"></a>2.3 Bison</h3><p>Bison requires a commit to work.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># in the root of the source code</span></span><br><span class="line"><span class="built_in">cd</span> external/bison</span><br><span class="line">git cherry-pick c0c852bd6fe462b148475476d9124fd740eba160</span><br><span class="line"><span class="built_in">cd</span> ../../</span><br><span class="line">mm bison</span><br><span class="line">cp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/</span><br><span class="line"></span><br><span class="line"><span class="comment"># Credits: https://groups.google.com/forum/#!topic/android-building/D1-c5lZ9Oco</span></span><br></pre></td></tr></table></figure><h2 id="3-Here-wo-go"><a href="#3-Here-wo-go" class="headerlink" title="3. Here wo go"></a>3. Here wo go</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">breakfast &lt;device_name&gt;         <span class="comment"># 从 Lineage 的 repo 上下载 device kernel 等</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/TheMuppets/&lt;repo&gt; vendor/&lt;device_name&gt;</span><br><span class="line">                                <span class="comment"># 从 TheMuppets 的 repo 下载 vendor 文件</span></span><br><span class="line">lunch lineage_&lt;device_name&gt;-userdebug</span><br><span class="line">make -j&lt;cpu_num&gt; bacon          <span class="comment"># 开始编译</span></span><br></pre></td></tr></table></figure><h3 id="3-1-out-of-memory-error"><a href="#3-1-out-of-memory-error" class="headerlink" title="3.1 out of memory error"></a>3.1 out of memory error</h3><p>诶机器差的命啊:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JACK_SERVER_VM_ARGUMENTS=<span class="string">"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m"</span> \</span><br><span class="line">jack-admin <span class="built_in">kill</span>-server &amp;&amp; jack-admin start-server \</span><br><span class="line">make -j&lt;cpu_num&gt; bacon</span><br></pre></td></tr></table></figure><h2 id="4-Job-done"><a href="#4-Job-done" class="headerlink" title="4. Job done"></a>4. Job done</h2><p>没什么好写的233333<br>我什么也不会呀</p><p>注: 当初找 xargs 的 GNU 版本找了很久, 现在发现奇淫技巧:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜ brew search --desc xargs</span><br><span class="line">findutils: Collection of GNU find, xargs, and locate</span><br></pre></td></tr></table></figure><h2 id="Special-Thanks"><a href="#Special-Thanks" class="headerlink" title="Special Thanks"></a>Special Thanks</h2><p>@Asuka<br>@XINGRZ</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;尝试在 macOS 10.13 上编译 Android LineageOS 14.1 备份以便将来使用&lt;br&gt;
    
    </summary>
    
    
      <category term="Develop" scheme="https://ocd.ooo/tags/Develop/"/>
    
      <category term="Android build" scheme="https://ocd.ooo/tags/Android-build/"/>
    
  </entry>
  
  <entry>
    <title>Sony_Headphone_Connect_update_google_assistant</title>
    <link href="https://ocd.ooo/2018/11/09/Sony-Headphone-Connect-update-google-assistant/"/>
    <id>https://ocd.ooo/2018/11/09/Sony-Headphone-Connect-update-google-assistant/</id>
    <published>2018-11-09T06:53:03.000Z</published>
    <updated>2018-11-26T03:32:37.622Z</updated>
    
    <content type="html"><![CDATA[<p>前阵子 jd 入了个大法的 WH-1000XM2, 国行缺少了 google assistant,外加大妈的中文提示语音…实在是难受, 然后找刷成国际版的方法. google 一圈貌似已经发布了 2.0.1 的固件, 但配套的程序没提示更新.</p><h2 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h2><p>这篇讲的内容并不受 Sony 官方支持, 本人也并不对此造成的保修作废、耳机变砖、耳机电池爆炸等等问题负责. 尝试此方法带来的任何后果自负. 本文内容仅适用于 WH-1000XM2, 其余型号请自行研究. 本文所提供的内容针对 Sony Headphone Connect 3.2.0 版本.</p><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><ul><li>apktool</li><li>一个靠谱的文本编辑器</li></ul><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><blockquote><p>提醒: 你用别的方法反编译后类、方法、命名空间等的命名方式不一定与我的相同, 建议善用文本搜索</p></blockquote><p>手机上抓包,发现软件启动的时候请求 <code>https://info.update.sony.net/HP001/MDRID289202/info/info.xml</code>, 居然返回的是404. 不负责的猜测了一下 MDRID289202 是机身的内部型号(包括版本号). 全局搜索了下源码发现<code>MDRID289202</code> 在 <code>com.sony.songpal.mdr.automagic.AutoMagicManager</code> 里面.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> URL <span class="title">m9721d</span><span class="params">(String str, String str2)</span> </span>&#123;</span><br><span class="line">    String str3 = <span class="string">"info.update.sony.net"</span>;</span><br><span class="line">    <span class="keyword">if</span> (str == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(String.format(Locale.getDefault(), <span class="string">"%s:code=%d"</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">"AutoMagicManagerErrorDomain"</span>, Integer.valueOf(AutoMagicError.NoCategoryID.ordinal())&#125;));</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(String.format(Locale.getDefault(), <span class="string">"%s:code=%d"</span>, <span class="keyword">new</span> Object[]&#123;<span class="string">"AutoMagicManagerErrorDomain"</span>, Integer.valueOf(AutoMagicError.NoServiceID.ordinal())&#125;));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> URL(String.format(Locale.getDefault(), <span class="string">"http://%s/%s/%s/info/%s"</span>, <span class="keyword">new</span> Object[]&#123;str3, str, str2, <span class="string">"info.xml"</span>&#125;));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</span><br><span class="line">            SpLog.m12039a(f5487a, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这玩意用了两个字符串类的参数, 然后在 URL 里面就是 HP001 和 MDRID289202, 于是猜测假如我篡改这个参数的获取程序使其获取成国外行货的代码, 大概就能强制更新了(前提是硬件完全一样). 顺藤摸瓜检查 m9271d 这方法的调用, 查到了保存这个参数的类 com.sony.songpal.mdr.application.p061b.C1702a.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">m7942a</span><span class="params">(C2503b c2503b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Command.fromByteCode(c2503b.m11224a()) == Command.UPDT_RET_PARAM) &#123;</span><br><span class="line">        cm cmVar = (cm) c2503b;</span><br><span class="line">        <span class="keyword">if</span> (cmVar.m11579e() != <span class="keyword">this</span>.f4438n) &#123;</span><br><span class="line">            SpLog.m12040b(f4425a, <span class="keyword">this</span>.f4438n + <span class="string">" expected, but received "</span> + cmVar.m11579e());</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        af f = cmVar.m11580f();</span><br><span class="line">        <span class="keyword">switch</span> (cmVar.m11579e()) &#123;</span><br><span class="line">            <span class="keyword">case</span> CATEGORY_ID:</span><br><span class="line">                <span class="keyword">this</span>.f4429e = ((ag) f).m11716a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SERVICE_ID:</span><br><span class="line">                <span class="keyword">this</span>.f4430f = ((ag) f).m11716a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> NATION_CODE:</span><br><span class="line">                <span class="keyword">this</span>.f4431g = ((ag) f).m11716a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> LANGUAGE:</span><br><span class="line">                <span class="keyword">this</span>.f4432h = ((ag) f).m11716a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> SERIAL_NUMBER:</span><br><span class="line">                <span class="keyword">this</span>.f4433i = ((ag) f).m11716a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> BATTERY_POWER_THRESHOLD:</span><br><span class="line">                <span class="keyword">this</span>.f4434j = ((ae) f).m11711a();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Invalid inquired type "</span> + cmVar.m11579e() + <span class="string">" was expected"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.f4437m != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.f4437m.countDown();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>SMALI 指令码对应如下(com.sony.songpal.mdr.application.b.a)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.line 156</span><br><span class="line">    :pswitch_1</span><br><span class="line">    check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;</span><br><span class="line"> </span><br><span class="line">    invoke-virtual &#123;v0&#125;, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</span><br><span class="line"> </span><br><span class="line">    move-result-object v0</span><br><span class="line"> </span><br><span class="line">    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;-&gt;f:Ljava/lang/String;</span><br><span class="line"> </span><br><span class="line">    goto :goto_1</span><br></pre></td></tr></table></figure><p>把这玩意的SERVICE_ID那改成外国行货的ID就好了. 比如</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> SERVICE_ID:</span><br><span class="line">    <span class="keyword">this</span>.f4430f = <span class="string">"MDRID123456"</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>但问题来了, 不知道外国行货的 ID 是多少, 可能ID是连着的, 于是我试了试 MDRID289200, 确认有这个型号. 于是修改 Apktool 解包的 SMALI 为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.line 156</span><br><span class="line">    :pswitch_1</span><br><span class="line">    #check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;</span><br><span class="line"> </span><br><span class="line">    #invoke-virtual &#123;v0&#125;, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</span><br><span class="line"> </span><br><span class="line">    #move-result-object v0</span><br><span class="line"> </span><br><span class="line">    const-string v0, &quot;MDRID289200&quot;</span><br><span class="line"> </span><br><span class="line">    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;-&gt;f:Ljava/lang/String;</span><br><span class="line"> </span><br><span class="line">    goto :goto_1</span><br></pre></td></tr></table></figure><p>重新用 Apktool 打包, 然后用自己的证书签名. 传到手机那, 成功检测到更新. 实测貌似没啥毛病，更新成了国外版本的 2.0.1 固件并且语音变成了英文. 于是自己也试了一下, 更新后貌似确实没啥毛病.</p><p>装回原版程序后再次用抓包抓了一下, 发现请求的 service id 已经变成了 MDRID289200. 大概不用担心以后又变回国行固件的问题.</p><h2 id="简要教程"><a href="#简要教程" class="headerlink" title="简要教程"></a>简要教程</h2><ol><li>用Apktool解包: <code>apktool d a.apk</code> (我为了方便文件名改成了a.apk), 这一步会创建一个名为a的文件夹</li><li>进入文件夹, 全局搜索<code>invoke-virtual {v0}, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</code>, 打开包含这一行的文件.</li><li>跳至 <code>.line 156</code>, 把里面的内容修改成我上面所述的内容.</li><li>重新打包: <code>apktool b a -o b.apk</code>, 这会生成b.apk</li><li>给b.apk签名, 这个网上都有教程我就不写了</li><li>把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行</li><li>把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行</li></ol><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前阵子 jd 入了个大法的 WH-1000XM2, 国行缺少了 google assistant,外加大妈的中文提示语音…实在是难受, 然后找刷成国际版的方法. google 一圈貌似已经发布了 2.0.1 的固件, 但配套的程序没提示更新.&lt;/p&gt;
&lt;h2 id=&quot;警告&quot;
      
    
    </summary>
    
      <category term="Android App" scheme="https://ocd.ooo/categories/Android-App/"/>
    
    
      <category term="sony" scheme="https://ocd.ooo/tags/sony/"/>
    
      <category term="sony headphone connect" scheme="https://ocd.ooo/tags/sony-headphone-connect/"/>
    
      <category term="android app 反编译修改" scheme="https://ocd.ooo/tags/android-app-%E5%8F%8D%E7%BC%96%E8%AF%91%E4%BF%AE%E6%94%B9/"/>
    
  </entry>
  
  <entry>
    <title>自编译 AOSP 下载地址</title>
    <link href="https://ocd.ooo/2018/11/02/sony-aosp-build/"/>
    <id>https://ocd.ooo/2018/11/02/sony-aosp-build/</id>
    <published>2018-11-01T19:00:01.000Z</published>
    <updated>2018-11-26T03:32:37.622Z</updated>
    
    <content type="html"><![CDATA[<p>这是自编译 AOSP (Pie) 下载地址, 不定期更新</p><a id="more"></a><p>更新日期:2018.11.02</p><p>Sony XZ2(akari): <a href="https://drive.google.com/open?id=1ASnigMBNDodnAYGPaNbiiyQ4e74asQWt" target="_blank" rel="noopener">点击跳转</a></p><p>Sony XZ1(Yoshino): <a href="">暂未上传</a></p><p>Sony XZ Premiumg(maple): <a href="https://drive.google.com/open?id=1bQQNSfjUfOEgWg6XEXtR7Mkb_Sxzxmer" target="_blank" rel="noopener">点击跳转</a><br>BUG: 音量键位未指定,wifi/蓝牙 fc, camera2 api 未开启</p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是自编译 AOSP (Pie) 下载地址, 不定期更新&lt;/p&gt;
    
    </summary>
    
      <category term="Android Build" scheme="https://ocd.ooo/categories/Android-Build/"/>
    
    
      <category term="sony" scheme="https://ocd.ooo/tags/sony/"/>
    
      <category term="android build download" scheme="https://ocd.ooo/tags/android-build-download/"/>
    
  </entry>
  
  <entry>
    <title>OpenWRT自动更新软件包脚本</title>
    <link href="https://ocd.ooo/2018/10/17/2018-10-17-OpenWRT-update-sh/"/>
    <id>https://ocd.ooo/2018/10/17/2018-10-17-OpenWRT-update-sh/</id>
    <published>2018-10-17T03:03:26.000Z</published>
    <updated>2018-11-26T03:32:37.620Z</updated>
    
    <content type="html"><![CDATA[<p>首先新建一个shell脚本文件，如/root/autoupgrade.sh，加上执行权限，写入以下几行：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">opkg update</span><br><span class="line"><span class="keyword">for</span> ipk <span class="keyword">in</span> $(opkg list-upgradable | awk <span class="string">'$1!~/^kmod|^Multiple/&#123;print $1&#125;'</span>); <span class="keyword">do</span></span><br><span class="line">opkg upgrade <span class="variable">$ipk</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure></p><p>然后加入到计划任务中：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#  文件格式说明</span><br><span class="line">#  ——分钟 (0 - 59)</span><br><span class="line"># |  ——小时 (0 - 23)</span><br><span class="line"># | |  ——日   (1 - 31)</span><br><span class="line"># | | |  ——月   (1 - 12)</span><br><span class="line"># | | | |  ——星期 (0 - 7)（星期日=0或7）</span><br><span class="line"># | | | | |</span><br><span class="line"># * * * * * 被执行的命令</span><br><span class="line"># 0 1 * * * /root/autoupgrade.sh</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先新建一个shell脚本文件，如/root/autoupgrade.sh，加上执行权限，写入以下几行：&lt;br&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
      <category term="路由器" scheme="https://ocd.ooo/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    
      <category term="OpenWRT" scheme="https://ocd.ooo/tags/OpenWRT/"/>
    
  </entry>
  
  <entry>
    <title>Next 主题自动更换背景图片</title>
    <link href="https://ocd.ooo/2018/09/29/change-background/"/>
    <id>https://ocd.ooo/2018/09/29/change-background/</id>
    <published>2018-09-29T01:44:00.000Z</published>
    <updated>2018-11-26T03:32:37.622Z</updated>
    
    <content type="html"><![CDATA[<p>如果觉得 NexT的空白主题看腻了或者太多人用觉得不够个性化，那么不妨试试自动更新背景图片。</p><a id="more"></a><h2 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h2><h3 id="图片来源"><a href="#图片来源" class="headerlink" title="图片来源"></a>图片来源</h3><p>自动更换背景的实现是修改添加背景的 css 样式实现。图片来源是 <a href="https://source.unsplash.com/" target="_blank" rel="noopener">unsplash</a></p><p>这个网站，里面不仅免费提供了很多高清美图，而且还提供api接口调用，实在是良心。这里实现的原理也是调用了这个网站的接口。</p><h2 id="修改背景样式"><a href="#修改背景样式" class="headerlink" title="修改背景样式"></a>修改背景样式</h2><p>修改themes\next\source\css\<br>_custom\custom.styl文件，这个是Next故意留给用户自己个性化定制一些样式的文件，添加以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(https://source.unsplash.com/random/1600x900);</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果自己不喜欢这个网址提供的图片做背景，那么修改url()里面的路径即可。repeat、attachment、position就是调整图片的位置，不重复出现、不滚动等等。</p><h2 id="修改不透明度"><a href="#修改不透明度" class="headerlink" title="修改不透明度"></a>修改不透明度</h2><p>完成这一步其实背景就会自动更换了，但是会出现一个问题，因为next主题的背景是纯透明的，这样子就造成背景图片的影响看不见文字，这对于博客来说肯定不行。</p><p>那么就需要调整背景的不透明度了。同样是修改themes\next\source\css _custom\custom.styl文件。在后面添加如下代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main-inner</span> &#123; </span><br><span class="line"></span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">60px</span> <span class="number">60px</span> <span class="number">60px</span> <span class="number">60px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">opacity</span>: <span class="number">0.8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">500px</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>background: #fff; 白色</li><li>opacity: 0.8;不透明度</li></ul><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>完成上述设置，我们来看看效果</p><p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fvq67w13yqj31kw0x2u0z.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果觉得 NexT的空白主题看腻了或者太多人用觉得不够个性化，那么不妨试试自动更新背景图片。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://ocd.ooo/categories/Hexo/"/>
    
    
      <category term="theme-NexT" scheme="https://ocd.ooo/tags/theme-NexT/"/>
    
      <category term="unsplash" scheme="https://ocd.ooo/tags/unsplash/"/>
    
  </entry>
  
  <entry>
    <title>OSX 和 windows 时间不同步解决方法</title>
    <link href="https://ocd.ooo/2018/09/28/2018-9-27-OSX-windows-Fixed-time-out-of-sync-issue/"/>
    <id>https://ocd.ooo/2018/09/28/2018-9-27-OSX-windows-Fixed-time-out-of-sync-issue/</id>
    <published>2018-09-28T05:19:00.000Z</published>
    <updated>2018-11-26T03:32:37.621Z</updated>
    
    <content type="html"><![CDATA[<p>OSX 和 windows 时间不同步解决方法<br><a id="more"></a></p><h2 id="教程正文"><a href="#教程正文" class="headerlink" title="教程正文"></a>教程正文</h2><hr><p>很多同学都是 mac osx 和 windows 双系统,但是有个问题,进入mac osx再进windows 时间就不对了这个是因为</p><p><strong>Windows 与 Mac缺省看待系统硬件时间的方式是不一样的：</strong></p><p>Windows把系统硬件时间当作本地时间(local time)，即操作系统中显示的时间跟BIOS中显示的时间是一样的。</p><p>Mac把硬件时间当作 UTC，操作系统中显示的时间是硬件时间经过换算得来的，比如说北京时间是GMT+8，则系统中显示时间是硬件时间+8这样，当PC中同时有多系统共存时，就出现了问题。</p><p>假如你的mac设置的时区都为北京时间东八区，当前系统时间为9：00AM。则此时硬件中存储的实际是UTC 时间1:00AM。这时你重启进入Windows后，你会发现windows系统中显示的时间是 1:00AM，比mac中慢了八个小时。</p><p>同理，你在Windows中更改或用网络同步了系统时间后，再到mac中去看，系统就会快了8小时。</p><p>解决这个问题的方法很简单：<br>修改 Windows 对硬件时间的对待方式，这样只在 Windows 上修改后就无需在mac上设置了。<br>让 Windows 把硬件时间当作 UTC</p><p>window7用户开始-&gt;运行-&gt;输入CMD</p><p>window8/10用户 WIN+x 选择管理员模式进入CMD</p><p>输入下面命令并回车<br>代码:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</span><br></pre></td></tr></table></figure></p><p>这样一来就不用在osx下安装时间补丁了.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;OSX 和 windows 时间不同步解决方法&lt;br&gt;
    
    </summary>
    
      <category term="黑苹果" scheme="https://ocd.ooo/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="windows" scheme="https://ocd.ooo/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-NexT 主题修改页面透明度及页面颜色</title>
    <link href="https://ocd.ooo/2018/09/26/2018-9-26-NexT-theme-Page-transparency-color/"/>
    <id>https://ocd.ooo/2018/09/26/2018-9-26-NexT-theme-Page-transparency-color/</id>
    <published>2018-09-26T08:33:00.000Z</published>
    <updated>2018-11-26T03:32:37.621Z</updated>
    
    <content type="html"><![CDATA[<p>由于NexT主题默认的背景是不透明的，如果我们设置的有canvas_nest和canvas_three等3D动画效果，则会被文章界面遮住，本文主要讲述如何修改Hexo站点的页面透明度。</p><p>主要是通过修改CSS样式来实现</p><h2 id="文章部分"><a href="#文章部分" class="headerlink" title="文章部分"></a>文章部分</h2><hr><blockquote><p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// Post &amp; Comments blocks.</span><br><span class="line">.post-block &#123;</span><br><span class="line">  padding: $content-desktop-padding;</span><br><span class="line">- background: white;</span><br><span class="line">+ background: rgba(255,255,255,0.7);</span><br><span class="line">  box-shadow: $box-shadow-inner;</span><br><span class="line">  border-radius: $border-radius-inner;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="阅读全文按钮"><a href="#阅读全文按钮" class="headerlink" title="阅读全文按钮"></a>阅读全文按钮</h2><hr><blockquote><p>文件位置 ~Hexo根目录/themes/next/source/css/_variables/Pisces.style<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// Button</span><br><span class="line">  $btn-default-radius           = 2px</span><br><span class="line">- $btn-default-bg               = white</span><br><span class="line">+ $btn-default-bg               = rgba(255,255,255,0.5)</span><br><span class="line">  $btn-default-color            = $text-color</span><br><span class="line">  $btn-default-border-color     = $text-color</span><br><span class="line">  $btn-default-hover-color      = white</span><br><span class="line">  $btn-default-hover-bg         = $black-deep</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="分页部分"><a href="#分页部分" class="headerlink" title="分页部分"></a>分页部分</h2><hr><blockquote><p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// Pagination.</span><br><span class="line">.pagination &#123;</span><br><span class="line">  .prev, .next, .page-number &#123;</span><br><span class="line">    margin-bottom: initial;</span><br><span class="line">    top: initial;</span><br><span class="line">  &#125;</span><br><span class="line">  margin: sboffset 0 0;</span><br><span class="line">- background: white;</span><br><span class="line">+ background: rgba(255,255,255,0.7);</span><br><span class="line">  box-shadow: $box-shadow;</span><br><span class="line">  border-radius: $border-radius;</span><br><span class="line">  padding: 10px 0 10px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="评论区部分"><a href="#评论区部分" class="headerlink" title="评论区部分"></a>评论区部分</h2><hr><blockquote><p>~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// Comments blocks.</span><br><span class="line">.comments &#123;</span><br><span class="line">  padding: $content-desktop-padding;</span><br><span class="line">  margin: initial;</span><br><span class="line">  margin-top: sboffset;</span><br><span class="line">- background: white;</span><br><span class="line">+ background: rgba(255,255,255,0.7);</span><br><span class="line">  box-shadow: $box-shadow;</span><br><span class="line">  border-radius: $border-radius;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="侧栏菜单界面"><a href="#侧栏菜单界面" class="headerlink" title="侧栏菜单界面"></a>侧栏菜单界面</h2><hr><blockquote><p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_layout.style<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">.header-inner &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 0;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  padding: 0;</span><br><span class="line">  width: $sidebar-desktop;</span><br><span class="line">- background: white;</span><br><span class="line">+ background: rgba(255,255,255,0.7);</span><br><span class="line">  box-shadow: $box-shadow-inner;</span><br><span class="line">  border-radius: $border-radius-inner;</span><br><span class="line"></span><br><span class="line">  +desktop-large() &#123;</span><br><span class="line">    .container &amp; &#123; width: $sidebar-desktop; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  +tablet() &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: auto;</span><br><span class="line">    border-radius: initial;</span><br><span class="line">  &#125;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: auto;</span><br><span class="line">    border-radius: initial;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="个人资料界面"><a href="#个人资料界面" class="headerlink" title="个人资料界面"></a>个人资料界面</h2><hr><blockquote><p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_sidebar.style<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">.sidebar-inner &#123;</span><br><span class="line">//padding: 20px 10px 0;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  width: $sidebar-desktop;</span><br><span class="line">  color: $text-color;</span><br><span class="line">- background: white;</span><br><span class="line">+ background: rgba(255,255,255,0.7);</span><br><span class="line">  box-shadow: $box-shadow;</span><br><span class="line">  border-radius: $border-radius;</span><br><span class="line">  if (hexo-config(&apos;motion.enable&apos;) and hexo-config(&apos;motion.transition.sidebar&apos;)) &#123; opacity: 0; &#125;</span><br><span class="line"></span><br><span class="line">  &amp;.affix &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    top: $sidebar-offset;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由于NexT主题默认的背景是不透明的，如果我们设置的有canvas_nest和canvas_three等3D动画效果，则会被文章界面遮住，本文主要讲述如何修改Hexo站点的页面透明度。&lt;/p&gt;
&lt;p&gt;主要是通过修改CSS样式来实现&lt;/p&gt;
&lt;h2 id=&quot;文章部分&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="Hexo" scheme="https://ocd.ooo/categories/Hexo/"/>
    
    
      <category term="NexT" scheme="https://ocd.ooo/tags/NexT/"/>
    
  </entry>
  
  <entry>
    <title>OpenWrt 自动更新设置和屏蔽广告</title>
    <link href="https://ocd.ooo/2018/09/22/2018-9-22-OpenWrt-auto-update-and-adblock/"/>
    <id>https://ocd.ooo/2018/09/22/2018-9-22-OpenWrt-auto-update-and-adblock/</id>
    <published>2018-09-22T07:55:00.000Z</published>
    <updated>2018-11-26T03:32:37.621Z</updated>
    
    <content type="html"><![CDATA[<h2 id="OpenWrt-路由器自动更新国内重要网站名单"><a href="#OpenWrt-路由器自动更新国内重要网站名单" class="headerlink" title="OpenWrt 路由器自动更新国内重要网站名单"></a>OpenWrt 路由器自动更新国内重要网站名单</h2><hr><p>登陆路由器后:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@OpenWrt:~# cd /usr/bin</span><br><span class="line">root@OpenWrt:~# touch chinalist</span><br><span class="line">root@OpenWrt:~# chmod +x chinalist</span><br><span class="line">root@OpenWrt:~# vi chinalist</span><br></pre></td></tr></table></figure><p>/usr/bin/chinalist:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh                                                                                                                                                               </span><br><span class="line"></span><br><span class="line">wget -4 --no-check-certificate -O /etc/dnsmasq.d/accelerated-domains.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/accelerated-domains.china.conf</span><br><span class="line">wget -4 --no-check-certificate -O /etc/dnsmasq.d/bogus-nxdomain.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/bogus-nxdomain.china.conf</span><br></pre></td></tr></table></figure><h2 id="OpenWrt-路由器自动屏蔽广告"><a href="#OpenWrt-路由器自动屏蔽广告" class="headerlink" title="OpenWrt 路由器自动屏蔽广告"></a>OpenWrt 路由器自动屏蔽广告</h2><hr><p>/etc/dnsmasq.d 下有个 blockad.conf 文件, 内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server=/.mobads.baidu.com/127.0.0.0</span><br><span class="line">server=/.mobads-logs.baidu.com/127.0.0.0</span><br><span class="line">server=/.media.admob.com/127.0.0.0</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>意思是 /mobads.baidu.com 的域名解析转发到 127.0.0.0, 这个地址不具备域名解析的功能, 于是就达到了屏蔽广告的功能.</p><p>运行命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@OpenWrt:~# cd /usr/bin</span><br><span class="line">root@OpenWrt:~# touch blockad</span><br><span class="line">root@OpenWrt:~# chmod +x blockad</span><br><span class="line">root@OpenWrt:~# vi blockad</span><br></pre></td></tr></table></figure><p>/usr/bin/blockad:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"></span><br><span class="line"># Author:    https://github.com/softwaredownload/openwrt-fanqiang</span><br><span class="line"># Date:        2016-01-09</span><br><span class="line"></span><br><span class="line">TMP_HOSTS=/tmp/block.hosts.unsorted</span><br><span class="line">HOSTS=/etc/dnsmasq.d/blockad.conf</span><br><span class="line"></span><br><span class="line"># remove any old TMP_HOSTS that might have stuck around</span><br><span class="line">rm $&#123;TMP_HOSTS&#125; 2&gt; /dev/null</span><br><span class="line"></span><br><span class="line">for URL in \</span><br><span class="line">    &quot;https://raw.githubusercontent.com/vokins/simpleu/master/hosts&quot; \</span><br><span class="line">    &quot;http://adaway.org/hosts.txt&quot;</span><br><span class="line">do</span><br><span class="line">    # filter out comment lines, empty lines, localhost... </span><br><span class="line">    # remove trailing comments, space( ,tab), empty line</span><br><span class="line">    # replace line to dnsmasq format</span><br><span class="line">    # remove carriage returns</span><br><span class="line">    # append the results to TMP_HOSTS</span><br><span class="line">    wget -4 --no-check-certificate -qO- &quot;$&#123;URL&#125;&quot; | grep -v -e &quot;^#&quot; -e &quot;^\s*$&quot; -e &quot;localhost&quot; -e &quot;^;&quot; -e &quot;^@&quot; -e &quot;^:&quot; -e &quot;^[a-zA-Z]&quot; \</span><br><span class="line">    | sed -E -e &quot;s/#.*$//&quot; -e &quot;s/[[:space:]]*//g&quot; -e &quot;/^$/d&quot; \</span><br><span class="line">    -e &quot;s/^127.0.0.1/server=\/./&quot; -e &quot;s/0.0.0.0/server=\/./&quot; -e &quot;/^[0-9].*$/d&quot; -e &quot;s/$/\/127.0.0.0/&quot; \</span><br><span class="line">    | tr -d &quot;\r&quot; &gt;&gt; $&#123;TMP_HOSTS&#125;</span><br><span class="line"></span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"># remove duplicate hosts and save the real hosts file</span><br><span class="line">sort $&#123;TMP_HOSTS&#125; | uniq &gt; $&#123;HOSTS&#125;</span><br><span class="line"></span><br><span class="line">rm $&#123;TMP_HOSTS&#125; 2&gt; /dev/null</span><br></pre></td></tr></table></figure><p>OpenWrt 自动生成广告屏蔽列表说明:</p><p>第一个 URL 主要用于国内, 下面几个 URL 是屏蔽国外广告<br>运行上面命令产生的广告屏蔽列表比较长, 如果路由器性能较差, dnsmasq 匹配域名负荷会太大, 可以用下面这个简化版的文件, 不要用上面的脚本:</p><blockquote><p><a href="https://github.com/softwaredownload/openwrt-fanqiang/blob/master/openwrt/dir505/etc/dnsmasq.d/blockad.conf" target="_blank" rel="noopener">https://github.com/softwaredownload/openwrt-fanqiang/blob/master/openwrt/dir505/etc/dnsmasq.d/blockad.conf</a></p></blockquote><p>如果dnsmasq超负荷工作，可能会失去响应，导致打不开网页，这时需要登录路由器运行命令：</p><p><code>/etc/init.d/dnsmasq restart</code></p><p>所以，还是尽量用性能好点的路由器吧<br>路由器性能比电脑差很多，如果屏蔽列表很长，那么短时间内快速打开数个网页就可能导致dnsmasq失去响应。最好是看完一个网页就关闭一个，再打开新的网页。<br>在路由器里屏蔽的好处是所有接入路由器的设备都全部起作用。<br>通常的做法，在路由器里屏蔽部分域名，然后在电脑里设置更广泛、精确的屏蔽，主要是设置host文件屏蔽和浏览器插件屏蔽。<br>浏览器插件屏蔽，可以装这些Chrome浏览器插件：uBlock Origin，ADfree.Player.Online。其中uBlock Origin的作用和Adblock Plus类似，但是设置更加丰富。</p><h2 id="计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks"><a href="#计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks" class="headerlink" title="计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks"></a>计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks</h2><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@OpenWrt:~# crontab -e</span><br></pre></td></tr></table></figure><p>输入以下内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*/30 * * * * isfound=$(ps | grep &quot;ss-redir&quot; | grep -v &quot;grep&quot;); if [ -z &quot;$isfound&quot; ]; then echo &quot;$(date): restart ss-redir...&quot;&gt;&gt;/tmp/log/ss-monitor.log &amp;&amp; /etc/init.d/shadowsocks restart; fi</span><br><span class="line">* 12 * * * /usr/bin/chinalist</span><br><span class="line">* 12 * * * /usr/bin/blockad</span><br></pre></td></tr></table></figure><p>OpenWrt计划任务说明：</p><ul><li>每半小时检查shadowsocks-libev 客户端，如果退出就自动重启</li><li>每天中午12点运行chinalist</li><li>每天中午12点运行blockad</li></ul><p>2014-09-24版的dir505, wr2543预编译固件是启用了计划任务的，这会有潜在的不确定性，如果更新时下载的文件如accelerated-domains.china.conf存在错误，导致dnsmasq无法启动，翻墙功能自然失效。</p><p>如果你启用了计划任务，某一天突然不能翻墙了，这时设置客户端的IP地址为和路由器同网段，登录路由器，用ps命令查看dnsmasq进程是否启动了，如果没有启动，就重刷固件或者用<a href="https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d “https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d”" target="_blank" rel="noopener">点击跳转</a><br>下面的文件代替 路由器里/etc/dnsmasq.d/下的文件。</p><h2 id="附录：计划任务定时关闭路由器OpenWrt"><a href="#附录：计划任务定时关闭路由器OpenWrt" class="headerlink" title="附录：计划任务定时关闭路由器OpenWrt"></a>附录：计划任务定时关闭路由器OpenWrt</h2><hr><p>人类的本性是目光短浅，玩得一时兴趣就会忘记定时休息的重要性。解决办法是在路由器里设置计划任务，禁止夜里某个时间段里使用路由器。下面的例子中，每20分钟检测一次，如果迟于20点30或者早于7点就自动关闭OpenWrt。这对小孩子特别有用，现在很多孩子使用电子设备上瘾，一个人睡的话甚至半夜在被窝里偷偷上网，现在好了，除非孩子强大到会登陆路由器修改设置，否则半夜重启路由器都无法上网了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/20 * * * * TIME=$(date +&quot;%H%M&quot;); if [ $TIME -ge 2030 ] || [ $TIME -le 700 ]; then poweroff; fi</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h2><blockquote><p><a href="https://github.com/vokins/simpleu" target="_blank" rel="noopener">https://github.com/vokins/simpleu</a><br><a href="https://github.com/jjack/openwrt-adblock" target="_blank" rel="noopener">https://github.com/jjack/openwrt-adblock</a><br><a href="https://github.com/felixonmars/dnsmasq-china-list" target="_blank" rel="noopener">https://github.com/felixonmars/dnsmasq-china-list</a><br>install-shadowsocks-on-hg255d-openwrt-and-config-nat<br><a href="https://pcjetzt.com/vpn-test-besten-vpn-anbieter-im-vergleich/" target="_blank" rel="noopener">https://pcjetzt.com/vpn-test-besten-vpn-anbieter-im-vergleich/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;OpenWrt-路由器自动更新国内重要网站名单&quot;&gt;&lt;a href=&quot;#OpenWrt-路由器自动更新国内重要网站名单&quot; class=&quot;headerlink&quot; title=&quot;OpenWrt 路由器自动更新国内重要网站名单&quot;&gt;&lt;/a&gt;OpenWrt 路由器自动更新国内
      
    
    </summary>
    
      <category term="路由器" scheme="https://ocd.ooo/categories/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    
      <category term="广告过滤" scheme="https://ocd.ooo/tags/%E5%B9%BF%E5%91%8A%E8%BF%87%E6%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>clover 注入白果三码实现 imessage 正常使用</title>
    <link href="https://ocd.ooo/2018/09/21/2018-9-21-clover-UUID/"/>
    <id>https://ocd.ooo/2018/09/21/2018-9-21-clover-UUID/</id>
    <published>2018-09-21T01:11:00.000Z</published>
    <updated>2018-11-26T03:32:37.621Z</updated>
    
    <content type="html"><![CDATA[<p><strong>注入白果三码实现 iMessage 与 FaceTime 正常使用</strong></p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>此法需建立在你有白苹果信息的情况下才能使用<br>完成后你将登陆任意appleid都不需要打电话激活</p></blockquote><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>首先你需要 iMessageDebug 这个工具来读取白果的三码</p><p>iMessageDebug 使用起来很方便首先需要一台白苹果，下载到机器上，或者U盘拷贝。。。。</p><ol><li>将 iMessageDebug 文件拖到桌面</li><li>打开终端</li><li>输入（chmod a+x ）桌面的 iMessageDebug 拖入终端按回车键（也许要输入用户密码）</li><li>sh iMessageDebug</li></ol><p>这样就获得了三码了，选择y是将三码生成文本发送到 Download 文件夹。</p><h2 id="Clover-的配置"><a href="#Clover-的配置" class="headerlink" title="Clover 的配置"></a>Clover 的配置</h2><p><img src="/images/image.png" alt="overwrote existing file"></p><p>填入主板MLB序列号和ROM（MLB就是BoardSerialNumber：XXXXXX）</p><p><img src="/images/image1.png" alt="upload successful"></p><ol><li>BoardSerialNumber 上写入你的mlb码（其实可不写）</li><li>“重点” smuuid 上写你的Hardware UUID，一定要照搬 不要改写后 12 位为 rom 码</li><li>序列号填写</li></ol><p><img src="/images/image2.png" alt="upload successful"></p><ol><li>(重点)写入你的 System-ID</li><li>注入 kext 是配置 clover 必选的</li><li>就是最重点的了 一定务必开启 inject System ID,如果不选的话，会导致 custom uuid 和 System-ID 数据颠倒</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;注入白果三码实现 iMessage 与 FaceTime 正常使用&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="黑苹果" scheme="https://ocd.ooo/categories/%E9%BB%91%E8%8B%B9%E6%9E%9C/"/>
    
    
      <category term="MacOS" scheme="https://ocd.ooo/tags/MacOS/"/>
    
      <category term="Clover" scheme="https://ocd.ooo/tags/Clover/"/>
    
      <category term="iMessage" scheme="https://ocd.ooo/tags/iMessage/"/>
    
      <category term="FaceTime" scheme="https://ocd.ooo/tags/FaceTime/"/>
    
  </entry>
  
  <entry>
    <title>Build Android on MacOS preparation</title>
    <link href="https://ocd.ooo/2018/09/20/2018-9-20-Build-Android-on-MacOS-preparation/"/>
    <id>https://ocd.ooo/2018/09/20/2018-9-20-Build-Android-on-MacOS-preparation/</id>
    <published>2018-09-20T01:26:01.000Z</published>
    <updated>2018-11-26T03:32:37.621Z</updated>
    
    <content type="html"><![CDATA[<p>This passage introduces a way to build Android on MacOS (NEW)</p><a id="more"></a><p><strong>Caution</strong>: 由于最新Xcode9编译Android源码问题很多，使用旧版Xcode 8.3.3</p><h2 id="编译前的准备工作"><a href="#编译前的准备工作" class="headerlink" title="编译前的准备工作"></a>编译前的准备工作</h2><p><strong>Xcode8.3.3</strong></p><ol><li><p>下载地址:(<a href="https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode8.3.3.xip" target="_blank" rel="noopener">https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode8.3.3.xip</a>)</p></li><li><p>切换Xcode版本<br><code>$ xcode-select --switch $PATH/Xcode.app</code></p></li></ol><p><strong>编译需要的软件包</strong></p><ol><li><p>(<a href="https://brew.sh/" target="_blank" rel="noopener">brew</a> 使用详见官网)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install bash-completion coreutils e2fsprogs findutilsgit gnu-sed gnupg gnutls imagemagick make maven md5sha1sum openssl repo sdl sdl2</span><br></pre></td></tr></table></figure></li><li><p>环境变量<br><code>$ vim ~/.bash_profile</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/findutils/libexec/gnubin:/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/opt/make/libexec/gnubin:$PATH</span><br></pre></td></tr></table></figure></li></ol><p><strong>Set the number of open files to be 1024</strong></p><p><code>ulimit -S -n 1024</code></p><p><strong>Jack memory</strong></p><pre><code>export ANDROID_JACK_VM_ARGS=&quot;-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G&quot;</code></pre><p><strong>python2</strong></p><ol><li>编译时用到python2命令，mac里只有python2.7 软链接成python2即可<br><code>$ ln /usr/bin/python2.7 /usr/bin/python2</code></li></ol><p><strong>bison报错</strong></p><ol><li>目前Android源码自带的bison不兼容macOS10.13新引入的一些安全限制。需要打补丁编译并替换源码自带的bison。以后源码更新应该会修复就不需要了<blockquote><p>详情可见 <a href="https://groups.google.com/forum/?fromgroups#!topic/android-building/D1-c5lZ9Oco" target="_blank" rel="noopener">android-building</a></p></blockquote></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">​$ cd external/bison</span><br><span class="line"></span><br><span class="line">$ git cherry-pick c0c852bd6fe462b148475476d9124fd740eba160</span><br><span class="line"></span><br><span class="line">$ mm</span><br><span class="line"></span><br><span class="line">$ cp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/bison</span><br></pre></td></tr></table></figure><h2 id="除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​"><a href="#除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​" class="headerlink" title="除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​"></a>除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This passage introduces a way to build Android on MacOS (NEW)&lt;/p&gt;
    
    </summary>
    
      <category term="Android Build" scheme="https://ocd.ooo/categories/Android-Build/"/>
    
    
      <category term="MacOS" scheme="https://ocd.ooo/tags/MacOS/"/>
    
      <category term="Android Build" scheme="https://ocd.ooo/tags/Android-Build/"/>
    
  </entry>
  
  <entry>
    <title>Lists Stacks and Queues</title>
    <link href="https://ocd.ooo/2018/09/19/2017-11-30-Lists-Stacks-and-Queues/"/>
    <id>https://ocd.ooo/2018/09/19/2017-11-30-Lists-Stacks-and-Queues/</id>
    <published>2018-09-19T07:06:00.000Z</published>
    <updated>2018-11-26T03:32:37.620Z</updated>
    
    <content type="html"><![CDATA[<p>A Brief ADT Introduction to Lists Stacks and Queues</p><a id="more"></a><h2 id="1-Lists"><a href="#1-Lists" class="headerlink" title="1. Lists"></a>1. Lists</h2><h3 id="1-1-Lists-ADTs"><a href="#1-1-Lists-ADTs" class="headerlink" title="1.1 Lists ADTs"></a>1.1 Lists ADTs</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _LIST_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _LIST_H</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> PtrToNode List;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode Position;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span><br><span class="line"></span><br><span class="line"><span class="function">List <span class="title">MakeEmpty</span><span class="params">(List L)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsEmpty</span><span class="params">(List L)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsLast</span><span class="params">(Position P, List L)</span></span>;</span><br><span class="line"><span class="function">Position <span class="title">Find</span><span class="params">( ElementType X, List L)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">( ElementType X, List L)</span></span>;</span><br><span class="line"><span class="function">Position <span class="title">FindPrevious</span><span class="params">(ElementType X, List L)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(ElementType X, List L, Position P)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DeleteList</span><span class="params">(List L)</span></span>;</span><br><span class="line"><span class="function">Position <span class="title">Header</span><span class="params">(List L)</span></span>;</span><br><span class="line"><span class="function">Position <span class="title">First</span><span class="params">(List L)</span></span>;</span><br><span class="line"><span class="function">Position <span class="title">Advancde</span><span class="params">(Position P)</span></span>;</span><br><span class="line"><span class="function">ElementType <span class="title">Retrieve</span><span class="params">(Position P)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">/* main_h */</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Element;</span><br><span class="line">    Position Next;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="1-1-1-IsEmpty-IsLast"><a href="#1-1-1-IsEmpty-IsLast" class="headerlink" title="1.1.1 IsEmpty / IsLast"></a>1.1.1 IsEmpty / IsLast</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsEmpty</span><span class="params">(List L)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> L-&gt;Next == <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsLast</span><span class="params">(Position P, List L)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> P-&gt;Next == <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-1-2-Find-Delete-FindPrevious-Insert"><a href="#1-1-2-Find-Delete-FindPrevious-Insert" class="headerlink" title="1.1.2 Find / Delete / FindPrevious / Insert"></a>1.1.2 Find / Delete / FindPrevious / Insert</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Position <span class="title">Find</span><span class="params">( ElementType X, List L)</span> </span>&#123;</span><br><span class="line">    Position P;</span><br><span class="line">    </span><br><span class="line">    P = L-&gt;Next;        <span class="comment">// Because there is a head</span></span><br><span class="line">    <span class="keyword">while</span> (P != <span class="literal">NULL</span> &amp;&amp; P-&gt;Element != X) &#123;</span><br><span class="line">        P = P-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">( ElementType X, List L)</span> </span>&#123;</span><br><span class="line">    Position P, TempCell;</span><br><span class="line">    P = FindPrevious(X, L);</span><br><span class="line">    <span class="comment">/* Avoid there is no such Element X */</span></span><br><span class="line">    <span class="keyword">if</span> (!IsLast(P, L)) &#123;</span><br><span class="line">        TempCell = P-&gt;Next;</span><br><span class="line">        P-&gt;Next = TempCell-&gt;Next;</span><br><span class="line">        <span class="built_in">free</span>( TempCell );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Position <span class="title">FindPrevious</span><span class="params">(ElementType X, List L)</span> </span>&#123;</span><br><span class="line">    Position P;</span><br><span class="line">    P = L;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (P-&gt;Next != <span class="literal">NULL</span> &amp;&amp; P-&gt;Next-&gt;Element != X) &#123;</span><br><span class="line">        P = P-&gt;Next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(ElementType X, List L, Position P)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* Insert X behind P */</span></span><br><span class="line">    Position TempCell;</span><br><span class="line">    </span><br><span class="line">    TempCell = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct Node));</span><br><span class="line">    <span class="keyword">if</span> (TempCell == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Error no memory.\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    TempCell-&gt;Element = X;</span><br><span class="line">    TempCell-&gt;Next = P-&gt;Next;</span><br><span class="line">    P-&gt;Next = TempCell;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-2-Doubly-Linked-Lists"><a href="#1-2-Doubly-Linked-Lists" class="headerlink" title="1.2 Doubly Linked Lists"></a>1.2 Doubly Linked Lists</h3><h3 id="1-3-Circularly-Linked-Lists"><a href="#1-3-Circularly-Linked-Lists" class="headerlink" title="1.3 Circularly Linked Lists"></a>1.3 Circularly Linked Lists</h3><h3 id="1-4-Examples"><a href="#1-4-Examples" class="headerlink" title="1.4 Examples"></a>1.4 Examples</h3><h4 id="The-Polynomial-ADT"><a href="#The-Polynomial-ADT" class="headerlink" title="The Polynomial ADT"></a>The Polynomial <strong>ADT</strong></h4><p>Please refer to my <a href="https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-6" target="_blank" rel="noopener">Github Repo</a> to see add and multiply.</p><h4 id="Radix-Sort"><a href="#Radix-Sort" class="headerlink" title="Radix Sort"></a>Radix Sort</h4><p>Please refer to this <a href="http://austingwalters.com/radix-sort-in-c/" target="_blank" rel="noopener">blog</a> for some information.<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RadixSort</span><span class="params">(<span class="keyword">int</span>* Array, <span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = Array[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span>* temp = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * N);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++ i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (max &lt; Array[i]) &#123;</span><br><span class="line">            max = Array[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (max / ret &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> init[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++ i) &#123;</span><br><span class="line">            init[(Array[i]/ret)%index] ++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; index; ++ i) &#123;</span><br><span class="line">            init[i] += init[i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = N - <span class="number">1</span>; i &gt;= <span class="number">0</span>; -- i) &#123;</span><br><span class="line">            temp[--init[(Array[i] / ret) % index]] = Array[i];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++ i) &#123;</span><br><span class="line">            Array[i] = temp[i];</span><br><span class="line">        &#125;</span><br><span class="line">        ret *= index;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">int</span>* A = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++ i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, A + i);</span><br><span class="line">    &#125;</span><br><span class="line">    RadixSort(A, n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++ i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\t"</span>, A[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="Multilists"><a href="#Multilists" class="headerlink" title="Multilists"></a>Multilists</h4><h3 id="1-5-Cursor-Implementation-of-Linked-Lists"><a href="#1-5-Cursor-Implementation-of-Linked-Lists" class="headerlink" title="1.5 Cursor Implementation of Linked Lists"></a>1.5 Cursor Implementation of Linked Lists</h3><p><strong>In a language where pointers are not available, we use an array of structures to make Linked lists</strong></p><p>We use the following declaration<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* A */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> PtrToNode;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode Position;</span><br><span class="line"><span class="keyword">typedef</span> PtrToNode List;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Element;</span><br><span class="line">    Position Next;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> <span class="title">CursorSpace</span>[ <span class="title">SpaceSize</span> ];</span></span><br></pre></td></tr></table></figure></p><p><strong>/<em> B - An initialized CursorSpace </em>/</strong></p><table><thead><tr><th>Slot</th><th>Element</th><th>Next</th></tr></thead><tbody><tr><td>0</td><td></td><td>1</td></tr><tr><td>1</td><td></td><td>2</td></tr><tr><td>2</td><td></td><td>3</td></tr></tbody></table><p><strong>/<em> Example </em>/</strong></p><p>if the value of L is 5 and the value of M is 3<br>Then L presents the list <em>a, b, e</em> M presents <em>c, d, f</em></p><table><thead><tr><th>Slot</th><th>Element</th><th>Next</th></tr></thead><tbody><tr><td>0</td><td>-</td><td>6</td></tr><tr><td>1</td><td>b</td><td>9</td></tr><tr><td>2</td><td>f</td><td>0</td></tr><tr><td>3</td><td>header</td><td>7</td></tr><tr><td>4</td><td>-</td><td>0</td></tr><tr><td>5</td><td>header</td><td>10</td></tr><tr><td>6</td><td>-</td><td>4</td></tr><tr><td>7</td><td>c</td><td>8</td></tr><tr><td>8</td><td>d</td><td>2</td></tr><tr><td>9</td><td>e</td><td>0</td></tr><tr><td>10</td><td>a</td><td>1</td></tr></tbody></table><p>//  Unknown Why It is implied like this<br>We keep a list ( the <em>freelist</em> ) of cells that are not in any list.<br>The list will use cell 0 as a header – Shown in <code>section B</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> Position <span class="title">CursorAlloc</span><span class="params">( <span class="keyword">void</span> )</span> </span>&#123;</span><br><span class="line">    Position P;</span><br><span class="line">    </span><br><span class="line">    P = CursorSpace[<span class="number">0</span>].Next;</span><br><span class="line">    Cursor[<span class="number">0</span>].Next = CursorSpace[P].Next;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> P</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">void</span> CursorFree( Position P ) &#123;</span><br><span class="line">    CursorSpace[P].Next = Cursor[<span class="number">0</span>].Next;</span><br><span class="line">    CursorSpace[<span class="number">0</span>].Next = P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsEmpty</span><span class="params">( List L )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> CursorSpace[L].Next == <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Position Find( ElementType X, List L) &#123;</span><br><span class="line">    Position = P;</span><br><span class="line">    </span><br><span class="line">    P = CursorSpace[L].Next;</span><br><span class="line">    <span class="keyword">while</span>(P &amp;&amp; CursorSpace[P].Element != X) &#123;</span><br><span class="line">        P = CursorSpace[P].Next;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">( ElementType X, List L)</span> </span>&#123;</span><br><span class="line">    Position P, TempCell;</span><br><span class="line">    </span><br><span class="line">    P = FindPrevious(X, L);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( !IsLast(P, L) ) &#123;</span><br><span class="line">        TempCell = CursorSpace[P].Next;</span><br><span class="line">        CursorSpace[P].Next = CursorSpace[TempCell].Next;</span><br><span class="line">        CursorFree(TempCell);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="2-The-Stack-ADT"><a href="#2-The-Stack-ADT" class="headerlink" title="2. The Stack ADT"></a>2. The Stack ADT</h2><ul><li>A stack is a list with the restriction that insertions and deletions can only be performed in one position.</li><li>Stacks are sometimes known as <code>LIFO</code> ( Last in, First Out )</li><li>Stacks use <code>push</code> and <code>pop</code> and only the top element is accessiable</li></ul><p><img src="/images/stack.png" alt="Figure 1"></p><h3 id="2-1-Implementations-of-Stacks"><a href="#2-1-Implementations-of-Stacks" class="headerlink" title="2.1 Implementations of Stacks"></a>2.1 Implementations of Stacks</h3><h4 id="2-1-1-Linked-List-Implementation-of-Stacks"><a href="#2-1-1-Linked-List-Implementation-of-Stacks" class="headerlink" title="2.1.1 Linked List Implementation of Stacks"></a>2.1.1 Linked List Implementation of Stacks</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _Stack_h</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">PtrToNode</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> PtrToNode Stack;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsEmpty</span><span class="params">( Stack S )</span></span>;</span><br><span class="line"><span class="function">Stack <span class="title">CreateStack</span><span class="params">( <span class="keyword">void</span> )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DisposeStack</span><span class="params">( Stack S )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeEmpty</span><span class="params">( Stack S )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push</span><span class="params">( ElementType X, Stack S )</span></span>;</span><br><span class="line"><span class="function">ElementType <span class="title">Top</span><span class="params">( Stack S )</span></span>;     <span class="comment">//  Output the Top</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pop</span><span class="params">( Stack S)</span></span>;             <span class="comment">//  Only Delete</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span> &#123;</span></span><br><span class="line">    ElementType Element;</span><br><span class="line">    PtrToNode Next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Operations</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsEmpty</span><span class="params">( Stack S )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> S-&gt;Next == <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Stack <span class="title">CreateStack</span><span class="params">( <span class="keyword">void</span> )</span> </span>&#123;</span><br><span class="line">    Stack S;</span><br><span class="line">    </span><br><span class="line">    S = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>( struct Node ));</span><br><span class="line">    <span class="keyword">if</span>( S == <span class="literal">NULL</span> )</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    MakeEmpty( S )</span><br><span class="line">    <span class="keyword">return</span> S;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeEmpty</span><span class="params">( Stack S )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( S == <span class="literal">NULL</span> )</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR NO STACK\n"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">while</span>( !IsEmpty( S ) )</span><br><span class="line">            Pop( S );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push</span><span class="params">( ElementType X, Stack S )</span> </span>&#123;</span><br><span class="line">    PtrToNode TempCell;</span><br><span class="line">    </span><br><span class="line">    TempCell = <span class="built_in">malloc</span>( <span class="keyword">sizeof</span>( struct Node ) );</span><br><span class="line">    <span class="keyword">if</span>( TempCell == <span class="literal">NULL</span> )</span><br><span class="line">        FatalError(<span class="string">"Out of Space"</span>);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        TempCell-&gt;Element = X;</span><br><span class="line">        TempCell-&gt;Next = S-&gt;Next;</span><br><span class="line">        S-&gt;Next = TempCell;         <span class="comment">//  Head Assumed</span></span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pop</span><span class="params">( Stack S )</span> </span>&#123;</span><br><span class="line">    PtrToNode TempCell;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( IsEmpty( S ) ) &#123;</span><br><span class="line">        <span class="built_in">printf</span>( <span class="string">"Empty Stack!\n"</span> );</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        TempCell = S-&gt;Next;</span><br><span class="line">        S-&gt;Next = S-&gt;Next-&gt;Next;</span><br><span class="line">        <span class="built_in">free</span>(TempCell);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ElementType <span class="title">Top</span><span class="params">( Stack S )</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( !IsEmpty( S ) ) &#123;</span><br><span class="line">        <span class="keyword">return</span> S-&gt;Next-&gt;Element;</span><br><span class="line">    FatalError(<span class="string">"Empty Stack\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">```    </span><br><span class="line"></span><br><span class="line">#### <span class="number">2.1</span><span class="number">.2</span> Array Implementation of Stacks</span><br><span class="line"></span><br><span class="line">This is probably a more popular solution</span><br><span class="line"></span><br><span class="line">```c</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _Stack_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _Stack_H</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">StackRecord</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">StackRecord</span> *<span class="title">Stack</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsEmpty</span><span class="params">( Stack S )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsFull</span><span class="params">( Stack S )</span></span>;</span><br><span class="line"><span class="function">Stack <span class="title">CreatStack</span><span class="params">( <span class="keyword">int</span> MaxElements )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DisposeStack</span><span class="params">( Stack S )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeEmpty</span><span class="params">( Stack S )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Push</span><span class="params">( ElementType X, Stack S )</span></span>;</span><br><span class="line"><span class="function">ElementType <span class="title">Top</span><span class="params">( Stack S )</span></span>;</span><br><span class="line"><span class="function">ElementType <span class="title">TopAndPop</span><span class="params">( Stack S )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EmptyEOS (-1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MinStackSize (5)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">StackRecord</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> Capacity;</span><br><span class="line">    <span class="keyword">int</span> TopOfStack;</span><br><span class="line">    ElementType* Array;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><strong>Operations</strong><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***** Create Stack *****/</span></span><br><span class="line"></span><br><span class="line"><span class="function">Stack <span class="title">CreateStack</span><span class="params">( <span class="keyword">int</span> MaxElements )</span> </span>&#123;</span><br><span class="line">    Stack S;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>( MaxElements &lt; MinStackSize ) &#123;</span><br><span class="line">        Error(<span class="string">"Stack too small."</span>);</span><br><span class="line">        </span><br><span class="line">    S = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>( struct StackRecord ));</span><br><span class="line">    <span class="keyword">if</span>( S == <span class="literal">NULL</span> ) &#123;</span><br><span class="line">        FatalError(<span class="string">"Out of Space!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    S-&gt;Array = <span class="built_in">malloc</span>( <span class="keyword">sizeof</span>(ElementType) * MaxElements;</span><br><span class="line">    <span class="keyword">if</span>( S-&gt;Array == <span class="literal">NULL</span> ) &#123;</span><br><span class="line">        FatalError(<span class="string">"Out of space!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    S-&gt;Capacity = MaxElements;</span><br><span class="line">    MakeEmpty( S );</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> S;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">void</span> DisposeStack( Stack S ) &#123;</span><br><span class="line">        <span class="keyword">if</span>( S != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">            <span class="built_in">free</span>( S-&gt;Array );</span><br><span class="line">            <span class="built_in">free</span>( S );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> IsEmpty( Stack S ) &#123;</span><br><span class="line">        <span class="keyword">return</span> S-&gt;TopOfStack == EmptyTOS;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">void</span> MakeEmpty( Stack S ) &#123;</span><br><span class="line">        S-&gt;TopOfStack = EmptyTOS;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">void</span> Push( ElementType X, Stack S ) &#123;</span><br><span class="line">        <span class="keyword">if</span>( IsFull( S ) ) &#123;</span><br><span class="line">            Error(<span class="string">"Full Stack"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            S-&gt;Array[++(S-&gt;TopOfStack)] = X;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ElementType Top( Stack S ) &#123;</span><br><span class="line">        <span class="keyword">if</span>( !IsEmpty( S ) ) &#123;</span><br><span class="line">            <span class="keyword">return</span> S-&gt;Array[S-&gt;TopOfStack];</span><br><span class="line">        &#125;</span><br><span class="line">        Error(<span class="string">"Empty Stack"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">void</span> Pop( Stack S ) &#123;</span><br><span class="line">        <span class="keyword">if</span>( IsEmpty( S ) ) &#123;</span><br><span class="line">            Error(<span class="string">"Empty Stack"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            S-&gt;TopOfStack --;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><h3 id="2-2-2-Applications"><a href="#2-2-2-Applications" class="headerlink" title="2.2.2 Applications"></a>2.2.2 Applications</h3><h4 id="2-2-2-1-Balancing-Symbols"><a href="#2-2-2-1-Balancing-Symbols" class="headerlink" title="2.2.2.1 Balancing Symbols"></a>2.2.2.1 Balancing Symbols</h4><p> refer to <a href="https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-7" target="_blank" rel="noopener">here</a> to get a sample code</p><h4 id="2-2-2-2-Postfix-Expressions"><a href="#2-2-2-2-Postfix-Expressions" class="headerlink" title="2.2.2.2 Postfix Expressions"></a>2.2.2.2 Postfix Expressions</h4><p>refer to <a href="https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-1" target="_blank" rel="noopener">here</a> to get a sample Code</p><h4 id="2-2-2-3-Function-Calls"><a href="#2-2-2-3-Function-Calls" class="headerlink" title="2.2.2.3 Function Calls"></a>2.2.2.3 Function Calls</h4><p>The algorithm to check balanced symbols suggests a way to implement function calls.</p><h2 id="3-The-Queue-ADTs"><a href="#3-The-Queue-ADTs" class="headerlink" title="3. The Queue ADTs"></a>3. The Queue ADTs</h2><p>Like stacks, <em>queues</em> are lists.<br><strong>insertion</strong> are done at one end, <strong>deletion</strong> is performed at the other end.</p><h3 id="3-4-1-Queue-Models"><a href="#3-4-1-Queue-Models" class="headerlink" title="3.4.1 Queue Models"></a>3.4.1 Queue Models</h3><p>The basic operations on a queue are  <em>Enqueue</em> and <em>Dequeue</em></p><h3 id="3-4-2-Array-Implementation-of-Queues"><a href="#3-4-2-Array-Implementation-of-Queues" class="headerlink" title="3.4.2 Array Implementation of Queues"></a>3.4.2 Array Implementation of Queues</h3><p>As with stacks, any implementation is legal for queues. Like stacks, both the linked lists and array implementation give fast <strong>O(1)</strong> running times for every operation.  </p><p>Here we will discuss Array implementation of queues.</p><p><img src="/images/queue.png" alt="Queues"></p><ul><li>For each queue data structure, we keep an array <strong>Queue[]</strong> </li><li>Keep the positions <code>Front</code> and <code>Rear</code></li><li>We also keep track of the number of elements that are actually in the queue <code>Size</code></li><li>To <strong>Enqueue</strong> an element X, we increment <code>Size</code> and <code>Rear</code>, then set <code>Queue[Rear] = X</code></li><li>To <strong>Dequeue</strong> an element, we set the return value to <code>Queue[Front]</code>, decrement <code>Size</code> </li></ul><p><strong>Attention</strong> </p><ol><li>It’s important to check the queue for emptiness </li><li>Some programmers use different ways of representing the front and end of a queue.</li></ol><h3 id="3-4-3-Queue-definitions"><a href="#3-4-3-Queue-definitions" class="headerlink" title="3.4.3 Queue definitions"></a>3.4.3 Queue definitions</h3><h4 id="3-4-3-1-Define-a-Queue"><a href="#3-4-3-1-Define-a-Queue" class="headerlink" title="3.4.3.1 Define a Queue"></a>3.4.3.1 Define a Queue</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ElementType int</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _Queue_h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _Queue_h</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">QueueRecord</span>;</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">QueueRecord</span>* <span class="title">Queue</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsEmpty</span><span class="params">( Queue Q )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsFull</span><span class="params">( Queue Q )</span></span>;</span><br><span class="line"><span class="function">Queue <span class="title">CreateQueue</span><span class="params">( <span class="keyword">int</span> MaxElements )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DisposeQueue</span><span class="params">( Queue Q )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeEmpty</span><span class="params">( Queue Q )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Enqueue</span><span class="params">( ElementType X, Queue Q )</span></span>;</span><br><span class="line"><span class="function">ElementType <span class="title">Front</span><span class="params">( Queue Q )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dequeue</span><span class="params">( Queue Q )</span></span>;</span><br><span class="line"><span class="function">ElementType <span class="title">FrontAndDequeue</span><span class="params">( Queue Q )</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span><span class="comment">/* _Queue_h */</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">QueueRecord</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> Capacity;</span><br><span class="line"><span class="keyword">int</span> Front;</span><br><span class="line"><span class="keyword">int</span> Rear;</span><br><span class="line"><span class="keyword">int</span> Size;</span><br><span class="line">ElementType *Array;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="3-4-3-2-Operations"><a href="#3-4-3-2-Operations" class="headerlink" title="3.4.3.2 Operations"></a>3.4.3.2 Operations</h4><p><strong>IsEmpty, MakeEmpty, Enqueue</strong><br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsEmpty</span><span class="params">( Queue Q )</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> Q-&gt;Size == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MakeEmpty</span><span class="params">( Queue Q )</span> </span>&#123;</span><br><span class="line">Q-&gt;Size = <span class="number">0</span>;</span><br><span class="line">Q-&gt;Front = <span class="number">1</span>;</span><br><span class="line">Q-&gt;Rear = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">Succ</span><span class="params">( <span class="keyword">int</span> Value, Queue Q )</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (++Value == Queue-&gt;Capacity) &#123;</span><br><span class="line">Value = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> Value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Enqueue</span><span class="params">( ElementType X, Queue Q )</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (IsFull( Q )) &#123;</span><br><span class="line">Error(<span class="string">"Error Full Queue"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">Q-&gt;Size++;</span><br><span class="line">Q-&gt;Rear = Succ(Q-&gt;Rear, Q);</span><br><span class="line">Q-&gt;Array[Q-&gt;Rear] = X;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="3-4-4-Applications-of-Queues"><a href="#3-4-4-Applications-of-Queues" class="headerlink" title="3.4.4 Applications of Queues"></a>3.4.4 Applications of Queues</h3><ul><li>Calls to large companies are generally placed in a queue when all operations are busy</li><li>In large universities when resources are limited</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A Brief ADT Introduction to Lists Stacks and Queues&lt;/p&gt;
    
    </summary>
    
      <category term="Programming" scheme="https://ocd.ooo/categories/Programming/"/>
    
    
      <category term="Develop" scheme="https://ocd.ooo/tags/Develop/"/>
    
      <category term="C" scheme="https://ocd.ooo/tags/C/"/>
    
      <category term="Data Structure" scheme="https://ocd.ooo/tags/Data-Structure/"/>
    
  </entry>
  
</feed>
