{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/images/2.ico","path":"images/2.ico","modified":1,"renderable":0},{"_id":"source/images/Exp-tree.svg","path":"images/Exp-tree.svg","modified":1,"renderable":0},{"_id":"source/images/queue.png","path":"images/queue.png","modified":1,"renderable":0},{"_id":"source/images/stack.png","path":"images/stack.png","modified":1,"renderable":0},{"_id":"source/images/tree.svg","path":"images/tree.svg","modified":1,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"source/images/AVL-Tree-1.svg.png","path":"images/AVL-Tree-1.svg.png","modified":1,"renderable":0},{"_id":"source/images/data.jpg","path":"images/data.jpg","modified":1,"renderable":0},{"_id":"source/images/image.png","path":"images/image.png","modified":1,"renderable":0},{"_id":"source/images/image2.png","path":"images/image2.png","modified":1,"renderable":0},{"_id":"source/images/python.png","path":"images/python.png","modified":1,"renderable":0},{"_id":"source/images/image1.png","path":"images/image1.png","modified":1,"renderable":0},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/images/AVL-Tree-2.gif","path":"images/AVL-Tree-2.gif","modified":1,"renderable":0},{"_id":"themes/next/source/images/wechatpay.png","path":"images/wechatpay.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/clicklove.js","path":"js/src/clicklove.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/crash_cheat.js","path":"js/src/crash_cheat.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/dynamic_bg.js","path":"js/src/dynamic_bg.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/LICENSE","path":"lib/algolia-instant-search/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/README.md","path":"lib/algolia-instant-search/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","path":"lib/canvas-nest/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/README.md","path":"lib/canvas-nest/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest-nomobile.min.js","path":"lib/canvas-nest/canvas-nest-nomobile.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/LICENSE","path":"lib/canvas-ribbon/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/README.md","path":"lib/canvas-ribbon/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/README.md","path":"lib/pace/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/README.md","path":"lib/three/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/LICENSE","path":"lib/three/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/package.json","path":"lib/three/package.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/gulpfile.js","path":"lib/three/gulpfile.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/yarn.lock","path":"lib/three/yarn.lock","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","path":"lib/three/lib/CanvasRenderer.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/lib/Projector.js","path":"lib/three/lib/Projector.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","path":"lib/three/src/canvas_lines.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/three-waves.js","path":"lib/three/src/three-waves.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","path":"lib/three/src/canvas_sphere.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/imgshare.css","path":"static/api/css/imgshare.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/select_share.css","path":"static/api/css/select_share.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/like.css","path":"static/api/css/like.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_style0_16.css","path":"static/api/css/share_style0_16.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_style0_24.css","path":"static/api/css/share_style0_24.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_popup.css","path":"static/api/css/share_popup.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_style1_24.css","path":"static/api/css/share_style1_24.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_style1_32.css","path":"static/api/css/share_style1_32.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_style0_32.css","path":"static/api/css/share_style0_32.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_style1_16.css","path":"static/api/css/share_style1_16.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_style2_16.css","path":"static/api/css/share_style2_16.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_style2.css","path":"static/api/css/share_style2.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_style2_24.css","path":"static/api/css/share_style2_24.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/weixin_popup.css","path":"static/api/css/weixin_popup.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_style4.css","path":"static/api/css/share_style4.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/slide_share.css","path":"static/api/css/slide_share.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/css/share_style2_32.css","path":"static/api/css/share_style2_32.css","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/share.js","path":"static/api/js/share.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/trans/data.js","path":"static/api/js/trans/data.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/trans/logger.js","path":"static/api/js/trans/logger.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/icons_0_16.png","path":"static/api/img/share/icons_0_16.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/icons_0_24.png","path":"static/api/img/share/icons_0_24.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/icons_0_32.png","path":"static/api/img/share/icons_0_32.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/base/class.js","path":"static/api/js/base/class.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/icons_1_16.png","path":"static/api/img/share/icons_1_16.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/icons_2_16.png","path":"static/api/img/share/icons_2_16.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/icons_1_24.png","path":"static/api/img/share/icons_1_24.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/icons_1_32.png","path":"static/api/img/share/icons_1_32.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/icons_2_24.png","path":"static/api/img/share/icons_2_24.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/l0.gif","path":"static/api/img/share/l0.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/icons_2_32.png","path":"static/api/img/share/icons_2_32.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/l1.gif","path":"static/api/img/share/l1.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/l2.gif","path":"static/api/img/share/l2.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/l3.gif","path":"static/api/img/share/l3.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/l4.gif","path":"static/api/img/share/l4.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/l5.gif","path":"static/api/img/share/l5.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/l6.gif","path":"static/api/img/share/l6.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/l8.gif","path":"static/api/img/share/l8.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/l7.gif","path":"static/api/img/share/l7.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/pop_c.gif","path":"static/api/img/share/pop_c.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/r0.gif","path":"static/api/img/share/r0.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/r1.gif","path":"static/api/img/share/r1.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/r3.gif","path":"static/api/img/share/r3.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/r2.gif","path":"static/api/img/share/r2.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/r4.gif","path":"static/api/img/share/r4.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/r5.gif","path":"static/api/img/share/r5.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/r6.gif","path":"static/api/img/share/r6.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/r8.gif","path":"static/api/img/share/r8.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/r7.gif","path":"static/api/img/share/r7.gif","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/sc.png","path":"static/api/img/share/sc.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/selectshare_close.png","path":"static/api/img/share/selectshare_close.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/img/share/share-search-icon.png","path":"static/api/img/share/share-search-icon.png","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/component/animate.js","path":"static/api/js/component/animate.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/component/anticheat.js","path":"static/api/js/component/anticheat.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/component/pop_dialog.js","path":"static/api/js/component/pop_dialog.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/component/comm_tools.js","path":"static/api/js/component/comm_tools.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/component/partners.js","path":"static/api/js/component/partners.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/component/pop_popup.js","path":"static/api/js/component/pop_popup.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/component/pop_base.js","path":"static/api/js/component/pop_base.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/conf/const.js","path":"static/api/js/conf/const.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/conf/define.js","path":"static/api/js/conf/define.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/component/qrcode.js","path":"static/api/js/component/qrcode.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/share/api_base.js","path":"static/api/js/share/api_base.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/share/image_api.js","path":"static/api/js/share/image_api.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/share/combine_api.js","path":"static/api/js/share/combine_api.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/share/like_api.js","path":"static/api/js/share/like_api.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/share/likeshare.js","path":"static/api/js/share/likeshare.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/share/select_api.js","path":"static/api/js/share/select_api.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/trans/trans.js","path":"static/api/js/trans/trans.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/share/share_api.js","path":"static/api/js/share/share_api.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/share/slide_api.js","path":"static/api/js/share/slide_api.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/trans/trans_bdxc.js","path":"static/api/js/trans/trans_bdxc.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/trans/trans_bdysc.js","path":"static/api/js/trans/trans_bdysc.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/view/image_view.js","path":"static/api/js/view/image_view.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/view/like_view.js","path":"static/api/js/view/like_view.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/trans/trans_weixin.js","path":"static/api/js/trans/trans_weixin.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/view/select_view.js","path":"static/api/js/view/select_view.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/view/view_base.js","path":"static/api/js/view/view_base.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/view/slide_view.js","path":"static/api/js/view/slide_view.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/view/share_view.js","path":"static/api/js/view/share_view.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/component/pop_popup_slide.js","path":"static/api/js/component/pop_popup_slide.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/start/router.js","path":"static/api/js/start/router.js","modified":1,"renderable":1},{"_id":"themes/next/source/static/api/js/base/tangram.js","path":"static/api/js/base/tangram.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"source/images/back_ground.jpg","path":"images/back_ground.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"source/google2ff74b080d9e3f60.html","hash":"7d7f40b3a8fd71b24c588c8e1f014969a9e0723b","modified":1543203157623},{"_id":"source/CNAME","hash":"bdd599d5f06ef62ee9ca2e3ab248cf70d5494256","modified":1543203157617},{"_id":"themes/next/.all-contributorsrc","hash":"e32dc4075e304af04b98d0726d489081bea722c0","modified":1543211120206},{"_id":"themes/next/.DS_Store","hash":"7a0ddf1e940fd73f08ee62ae0d901cc8dd77b8b0","modified":1543224415446},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1543211120206},{"_id":"themes/next/.gitignore","hash":"a18c2e83bb20991b899b58e6aeadcb87dd8aa16e","modified":1543211120208},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1543211120206},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1543211120206},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1543211120206},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1543211120208},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1543211120208},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1543211120208},{"_id":"themes/next/README.md","hash":"ee7119baf976616a84d3c9c10fcab567995dc98e","modified":1543211120208},{"_id":"themes/next/bower.json","hash":"087eb7b81c0aa77a2b07c2ecf411ceb5ee00386d","modified":1543211120209},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1543211120209},{"_id":"themes/next/_config.yml","hash":"bfb694b3799ac601838282db61e5a85ca8e2091b","modified":1545031177425},{"_id":"themes/next/package.json","hash":"cf079447c126a9ad760f1457441f31803ef0470b","modified":1543211120234},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1543211120213},{"_id":"source/_posts/2017-11-11-if-statements.md","hash":"e23ba4deed45606c34cabe56f3b4b3bff5f5d822","modified":1543203157618},{"_id":"source/_posts/2017-11-11-new-to-python.md","hash":"e1fbe1294b5afa2dea52f703f19797228939e856","modified":1543203157618},{"_id":"source/_posts/2017-11-19-Python-Dictionary.md","hash":"4723ce9b64383dd98833753528326945bbfdd4dd","modified":1543203157619},{"_id":"source/_posts/2017-11-11-python-list.md","hash":"1b221446d79dce7d577a6d11ad9a9c48b8f18b80","modified":1543203157618},{"_id":"source/_posts/2017-11-15-Build-Android-on-MacOS.md","hash":"89b0e3b46b4f7bd8f2479cadd34a85a1387844c9","modified":1543203157619},{"_id":"source/_posts/2017-11-23-User-input-and-while-loop.md","hash":"4d89c3d2c9e27339049360ae822c1c0e2200d58f","modified":1543203157619},{"_id":"source/_posts/2017-11-26-Algorithm-Analysis.md","hash":"e2f79cdacb0db17803f0a41373619fec8d763426","modified":1543203157619},{"_id":"source/_posts/2017-11-26-Function.md","hash":"8cbd8a32853330a9a82a576d9b423e314b87af9a","modified":1543203157619},{"_id":"source/_posts/2018-03-29-Use-TM-On-RPi-With-Arch-Linux.md","hash":"2588fd8ed8f5826fbdfc7954528ee690bb5b0cc7","modified":1543203157620},{"_id":"source/_posts/2017-11-30-Lists-Stacks-and-Queues.md","hash":"0000166cc0ce609a3174f0d041a1d2d299301eab","modified":1543203157620},{"_id":"source/_posts/2018-2019.md","hash":"f43d7efb0b9a0852630754feac6e5148657ae409","modified":1544858803883},{"_id":"source/_posts/2017-12-08-Trees.md","hash":"a5f6f858497812a79ff7e402b821e38f40595325","modified":1543203157620},{"_id":"source/_posts/2018-06-08-Install-Arch-Linux-Macbook-13.md","hash":"80bf55624fe0d28ff50d59667a01682eebc56e97","modified":1543203157620},{"_id":"source/_posts/2018-9-22-OpenWrt-auto-update-and-adblock.md","hash":"bfde75245ec8e806dcaaa449ef0e5cddf9ccbbff","modified":1543203157621},{"_id":"source/_posts/2018-9-26-NexT-theme-Page-transparency-color.md","hash":"89c120a4fb9bd45495eeea9991a911af5801008d","modified":1543203157621},{"_id":"source/_posts/2018-9-27-OSX-windows-Fixed-time-out-of-sync-issue.md","hash":"4814bf69080a81f0296a22a86dfdaff97b299b75","modified":1543203157621},{"_id":"source/_posts/2018-9-20-Build-Android-on-MacOS-preparation.md","hash":"c064cfab52dd986f75662376c873be18c01a59e5","modified":1543203157621},{"_id":"source/_posts/2018-10-17-OpenWRT-update-sh.md","hash":"34a914827f46983bd7774dd7f1f58779c883032e","modified":1543203157620},{"_id":"source/_posts/2018-9-21-clover-UUID.md","hash":"7ce44f935efa5770521383cbd20e3ce0b5860a00","modified":1543203157621},{"_id":"source/_posts/Sony-Headphone-Connect-update-google-assistant.md","hash":"29efbd8dfaee5a3909d707ee12cb31f4794beecd","modified":1543203157622},{"_id":"source/_posts/raspi上CP2102使用.md","hash":"c7dfe0de50cfc56e2ad06b53ab083952b3ccd709","modified":1547437733183},{"_id":"source/_posts/change-background.md","hash":"4970094d69af4499c6dd54d1c7af2b04f2bf788c","modified":1543203157622},{"_id":"source/_posts/NexT主题中集成gitalk评论系统.md","hash":"24eaf2b0e8ffc7e3beefeeee3dfd11bdf791f07c","modified":1544693196510},{"_id":"source/about/index.md","hash":"d58f1ad77d3851360b55e829177f3829756919e8","modified":1543203157623},{"_id":"source/_posts/sony-aosp-build.md","hash":"6eebb9d19e9b2ce8eee2d1b7b6a3ed22b26c2123","modified":1543203157622},{"_id":"source/categories/index.md","hash":"42f0406c71cd02d84ccf9a10a684c8975741201c","modified":1543203157623},{"_id":"source/_posts/ConcurrentLinkedQueue使用.md","hash":"c41b20460a61b55c227d05077610f98bc6e0d3f0","modified":1545401298699},{"_id":"source/tags/index.md","hash":"3af6fb1debfce60f615447779db9ca39f77ac8d7","modified":1543203157662},{"_id":"source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1544858089497},{"_id":"source/images/2.ico","hash":"b32005740b8d47c2bc3d7740b01fe90a8a3b8fb5","modified":1544857953766},{"_id":"source/images/Exp-tree.svg","hash":"432a7cb6018630f5c33ab5e4c264f40087b417cc","modified":1543203157627},{"_id":"source/images/queue.png","hash":"7f6e7aaf762390e15f3a90e5f9ba07012cc87077","modified":1543203157662},{"_id":"source/images/stack.png","hash":"f75f6ff68c8edeaf28e16182a7731dddeaf09f3c","modified":1543203157662},{"_id":"source/images/tree.svg","hash":"8b72d4f0a9187d5213f8545d171e8dfebcad25ed","modified":1543203157662},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"a5335a99377069ae76fd993d488bc3eaf48f3a05","modified":1543211120207},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1543211120206},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1543211120207},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1543211120207},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1543211120208},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1543211120207},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1543211120209},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1543211120209},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1543211120209},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1543211120210},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1543211120209},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1543211120210},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1543211120210},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1543211120210},{"_id":"themes/next/docs/MATH.md","hash":"e6023505dcccaef0b856102543585a13fc6af0b1","modified":1543211120210},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1543211120214},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1543211120214},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1543211120214},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1543211120214},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1543211120214},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1543211120215},{"_id":"themes/next/languages/ja.yml","hash":"e331b15b1fda0f2285d25853f834682ab8dc3c39","modified":1543211120215},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1543211120215},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1543211120215},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1543211120215},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1543211120215},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1543211120216},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1543211120216},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1543211120216},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1543211120216},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1543211120217},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1543211120217},{"_id":"themes/next/layout/_layout.swig","hash":"9587c027a912c82de7b3e4b88ef184b48c89e85c","modified":1545031268437},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1543211120234},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1543211120233},{"_id":"themes/next/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1543211120234},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1543211120233},{"_id":"themes/next/layout/page.swig","hash":"862b361852fb6d7a95bfb6077922410a33cd3126","modified":1543211120234},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1543211120234},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1543211120234},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1543211120235},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1543211120236},{"_id":"themes/next/source/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1543203157716},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1543211120273},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1543211120273},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1543211120273},{"_id":"source/images/AVL-Tree-1.svg.png","hash":"40f42c3de3887d5874bb98b70ad984531721e5a9","modified":1543203157624},{"_id":"source/images/data.jpg","hash":"16474ea9caff4fdcb91b9a0fa3faee7253d00474","modified":1543203157656},{"_id":"source/images/image.png","hash":"dc46216225a79edf17b0b3ebc90732c3f32e2faa","modified":1543203157657},{"_id":"source/images/image2.png","hash":"dc46216225a79edf17b0b3ebc90732c3f32e2faa","modified":1543203157660},{"_id":"source/images/python.png","hash":"c8a756475599e6e3c904b24077b4b0a31983752c","modified":1543203157661},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543211120259},{"_id":"source/images/image1.png","hash":"80504947f435025f3b84bc09acf904fa539563ae","modified":1543203157659},{"_id":"themes/next/docs/ru/README.md","hash":"c54e256ed11a84ee38f755d6f35a3e6e29a91dbc","modified":1543211120211},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1543211120211},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1543211120211},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1543211120210},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1543211120211},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1543211120212},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1543211120212},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1543211120212},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1543211120212},{"_id":"themes/next/docs/zh-CN/README.md","hash":"aa6808f4f587c1a97205fa9427ba96a366bcb288","modified":1543211120213},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"8ac2f5d2a023211d8d8ea626cbf6b8dea67ac201","modified":1543211120213},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1543211120212},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1543211120213},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1543211120217},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1543211120217},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1543211120217},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"82f9e238bac68dfe592915631d1ff0cca7b9da95","modified":1543211120218},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1543211120219},{"_id":"themes/next/layout/_macro/post.swig","hash":"225db2f98a9f08b713d24994cf989880618438eb","modified":1543211120219},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"e495523780dbdf6228d933c25bb28bcf4c0952f5","modified":1543211120220},{"_id":"themes/next/layout/_macro/reward.swig","hash":"64d65d9ad0cc94734ac6ded279e2b5dc870a1cab","modified":1543211120219},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1543211120220},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1543211120220},{"_id":"themes/next/layout/_partials/comments.swig","hash":"128cf9d6dbb91e22c4b8b5e0a1f9e86c9625225e","modified":1544598809166},{"_id":"themes/next/layout/_partials/footer.swig","hash":"07f88421bda86d9d5ff32d130b1cb1196b99a326","modified":1543221696808},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1543211120222},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1543211120222},{"_id":"themes/next/layout/_partials/post-copyright.swig","hash":"2f73cc9ffb63534f0b6d8f0e9ee853c1af1b1244","modified":1543211120222},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1543211120225},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1543211120224},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1543211120225},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ce78114958eb348962cb21805f65ea261367b500","modified":1545030619925},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1543211120229},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1543211120230},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1543211120230},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1543211120231},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"c0f6f02d7d7eb20eb216003c6cfb4ea52060f791","modified":1543211120230},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1543211120231},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1543211120232},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1543211120232},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1543211120232},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"def2736c8c10170712ff36dea220243b0c1858af","modified":1543211120232},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1543211120235},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"15582e823d228c0b2288543c1eb460c40afad29b","modified":1543211120235},{"_id":"themes/next/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1543211120236},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1543211120236},{"_id":"themes/next/scripts/tags/exturl.js","hash":"7ded3e7a78380b32de3e12f156e0978ef5c2890a","modified":1543211120236},{"_id":"themes/next/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1543211120237},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"981e01aaf45a1f0f23ce0796d03134f9e437aaca","modified":1543211120237},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1543211120237},{"_id":"themes/next/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1543211120237},{"_id":"themes/next/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1543211120237},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1543211120238},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1543211120259},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1543211120258},{"_id":"themes/next/source/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1544594659919},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1543211120259},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1543211120259},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1543211120259},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1543211120260},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1543211120260},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1543211120260},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1543211120260},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1543211120261},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1543211120261},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1543211120260},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1543211120261},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1543211120261},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1543211120261},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1543211120261},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1543211120261},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1543211120262},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1543211120262},{"_id":"themes/next/source/lib/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1543214218003},{"_id":"source/images/AVL-Tree-2.gif","hash":"5f3223aa0236256cb7c0821040517bda07a80009","modified":1543203157626},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543211120225},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543211120225},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543211120251},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543211120252},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543211120253},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543211120258},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543211120258},{"_id":"themes/next/source/images/wechatpay.png","hash":"3aa8026db3963a9c08f7d2b292a498bc8fac805e","modified":1543203157744},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1543211120218},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"495fb08875b2e1e04f9c4f3e9e593cdf5c32cc31","modified":1543211120218},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1543211120221},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1543211120221},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1543211120221},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1543211120222},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"94f1db727438b4c03cdbae4dae4817f8923fcf50","modified":1544595073628},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1543211120222},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1543211120222},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1543211120223},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1543211120223},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1543211120223},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1543211120224},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1543211120224},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1543211120225},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1543211120224},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"4bb1eee04c9ed4e08b67a9c6211db80bf07fa7eb","modified":1544592624013},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1543211120225},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1543211120225},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1543211120226},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1543211120226},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1543211120226},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1543211120227},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"3873e58f9d0f1656a2c2a70262ed60fc693ddd33","modified":1543221852340},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1543211120227},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1543211120227},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1543211120228},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5dbeb640707a9c91357e373b9063a48c8e78f439","modified":1543211120228},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1543211120228},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c28f3f4aa31d7f996d26a97df6cd7ffa9bfd2cec","modified":1543211120228},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1543211120228},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1543211120229},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1543211120228},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1543211120229},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"03ef008bc95e8e83232e5464a6c63d6157d33a5e","modified":1543211120229},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1543211120229},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"f8ad936ac3d7456c446cfbbf57bb484e2cf492e3","modified":1544596613693},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"99858ecfe529a81705a3ce196b31764502ab4f4a","modified":1544596655719},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"2c74a96dd314e804d801f8773ac1b2e0a970fce3","modified":1543211120230},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1543211120230},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1543211120231},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1543211120231},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1543211120231},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1543211120233},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1543211120233},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1543211120233},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1543211120233},{"_id":"themes/next/scripts/filters/after_post_render/exturl.js","hash":"9c9f61b7bfb3349b03b1e61355f20232044b5fd8","modified":1543211120235},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"d397c279d4a7fe50deca0d8d0eb5e0f9b96c34c7","modified":1545031344015},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1543211120251},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1543211120252},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"086f5979b3de091c3378512e6c5c2f8fcb4f6298","modified":1543211120252},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"2f9aec30e6cbf5579d3aba420f86caf8ee476be3","modified":1544601102491},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1543211120257},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1543211120258},{"_id":"themes/next/source/css/_variables/base.styl","hash":"f9b83d0385529e52ce7ba95ed5ed6b3d4e2419bb","modified":1543211120258},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1543211120262},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1543211120262},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1543211120262},{"_id":"themes/next/source/js/src/clicklove.js","hash":"9a063bd1b36ce939e33d4d1352398d6490ea5eea","modified":1544593483957},{"_id":"themes/next/source/js/src/crash_cheat.js","hash":"3c932e53720ae1960ce3f231a98df50a1529d0ad","modified":1544859856524},{"_id":"themes/next/source/js/src/dynamic_bg.js","hash":"1256018865f3c8a9cee5dbd2c3db6c9d72cd47e0","modified":1545031316977},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1543211120263},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1543211120263},{"_id":"themes/next/source/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1543211120263},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1543211120263},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1543211120264},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1543211120264},{"_id":"themes/next/source/js/src/utils.js","hash":"28a79d317b7f4012917a54cac770551596bf6241","modified":1543211120264},{"_id":"themes/next/source/lib/algolia-instant-search/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1543412321272},{"_id":"themes/next/source/lib/algolia-instant-search/README.md","hash":"9fa5175cdb7d3d939fe7174b6d68608ca996c174","modified":1543412321272},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1543412321273},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1543213899685},{"_id":"themes/next/source/lib/canvas-nest/README.md","hash":"70a34de41d0736f3727c98b6f17c0a24c9cc3537","modified":1543213899686},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest-nomobile.min.js","hash":"956eada198babd00f028e8908767cb158926c3f3","modified":1543213899686},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1543213899686},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1543211120265},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1543211120265},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1543211120265},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1543211120265},{"_id":"themes/next/source/lib/canvas-ribbon/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1545030458890},{"_id":"themes/next/source/lib/canvas-ribbon/README.md","hash":"07e86d67c508a3f974c45ff61cd0760d79bcebc5","modified":1545030458890},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1543211120265},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1545030458891},{"_id":"themes/next/source/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1543214192889},{"_id":"themes/next/source/lib/pace/README.md","hash":"33b87ed998d59f117dc329f999a4ffc744b41e79","modified":1543214192889},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1543214192890},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1543214192891},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1543214192889},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1543214192891},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1543214192892},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1543214192892},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1543214192893},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1543214192892},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1543214192893},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1543214192894},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1543214192893},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1543214192893},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1543214192894},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1543214192894},{"_id":"themes/next/source/lib/three/README.md","hash":"5096005b6bfa0e554b245c6c1ffe10e7edc8130d","modified":1543213958264},{"_id":"themes/next/source/lib/three/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1543213958263},{"_id":"themes/next/source/lib/three/.gitignore","hash":"e691fe9e685cbd50bcd7e138f4ca3503e7b0eaa4","modified":1543213958263},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"97f0e67570574dc8597c5819970508d4e7f7af25","modified":1543213958264},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"333fed4c256c7081e07c7844c097b7970b45b248","modified":1543213958264},{"_id":"themes/next/source/lib/three/package.json","hash":"68c5104de7461d425a5dbe521cea0cf00af289c3","modified":1543213958266},{"_id":"themes/next/source/lib/three/gulpfile.js","hash":"edd1868be72fde796b0b1f3a7a0316b3c896962a","modified":1543213958264},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"704e860183acbaaf8de1be65fe5c958e8105f4bf","modified":1543213958268},{"_id":"themes/next/source/lib/three/yarn.lock","hash":"9c71c0a7c033fc709c1e683157b1f12037024694","modified":1543213958272},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1543211120272},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1543211120273},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1543211120272},{"_id":"themes/next/source/images/alipay.jpg","hash":"6ec40a6c19d318c766ed1921abe7032073867b9a","modified":1543203157740},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1543211120232},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1543211120232},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b4a2f1d031fe44452cf55ded8211cf018235073a","modified":1543211120238},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1543211120238},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1543211120238},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1543211120238},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1543211120239},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1543211120242},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1543211120247},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"efc40a32487e0ac7b94b1ca81bdbdcc4ec8f2924","modified":1543211120250},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"ec2a62400642bb69edd9259e74e8f1c8ed53c42b","modified":1543211120250},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1543211120251},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"02d138ed65060e98f20bc5b1dd59a791222b7156","modified":1543211120251},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1543211120250},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1543211120250},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1543211120250},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1543211120253},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1543211120254},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1543211120254},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1543211120254},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"fe2dc74726a515549956d233becda188da64f948","modified":1543211120254},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"d1b68149a1e2eb257b5b746c67dcf738812dfe4f","modified":1544601162133},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1543211120254},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1543211120254},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1543211120255},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1543211120255},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"936132428a0d35b3947ccedd4c379940abcf223a","modified":1543211120255},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1543211120256},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1543211120255},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1543211120256},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"74c7dccf0a3ee9fc2ca25ad8e998243191813a0e","modified":1543211120256},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"c5b001eda69c97fa3e1aa754cb5e1009d960c61c","modified":1545031022738},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1543211120257},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"4a89f4ab8254806e4f2815f367f3bc230e78a817","modified":1544601239015},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1543211120257},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1543211120257},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"72037e8c4202a73b0c6ff7d81b57cd349e836837","modified":1543211120263},{"_id":"themes/next/source/lib/algolia-instant-search/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1543412321266},{"_id":"themes/next/source/lib/algolia-instant-search/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1543412318337},{"_id":"themes/next/source/lib/algolia-instant-search/.git/config","hash":"ae057b7f33eac7ddf41bed1c7a3323eb69ec0b7c","modified":1543412321267},{"_id":"themes/next/source/lib/algolia-instant-search/.git/index","hash":"feb77bd644b3dcde8bdc5256cd983976ab4e9a8e","modified":1543412321275},{"_id":"themes/next/source/lib/algolia-instant-search/.git/packed-refs","hash":"8fe6e29d5ddf85c177d75e81aa6999675fc4144c","modified":1543412321264},{"_id":"themes/next/source/lib/canvas-nest/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1543213899680},{"_id":"themes/next/source/lib/canvas-nest/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1543213897152},{"_id":"themes/next/source/lib/canvas-nest/.git/config","hash":"6aef6bbfcb8ccf9d042bf26defe7d08167b6d81e","modified":1543213899681},{"_id":"themes/next/source/lib/canvas-nest/.git/index","hash":"02e54e58241ef62631195fd5bb5a4baa660fe37a","modified":1543213899687},{"_id":"themes/next/source/lib/canvas-nest/.git/packed-refs","hash":"92831565eabed1964714709b001cd07d1e0bdab5","modified":1543213899678},{"_id":"themes/next/source/lib/canvas-ribbon/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1545030458885},{"_id":"themes/next/source/lib/canvas-ribbon/.git/index","hash":"a78f31795cc544bff422a8bede4585a1f4874699","modified":1545030458891},{"_id":"themes/next/source/lib/canvas-ribbon/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1545030457024},{"_id":"themes/next/source/lib/canvas-ribbon/.git/config","hash":"f79e33176f8d3e893553102df6eb347a74fd078f","modified":1545030458887},{"_id":"themes/next/source/lib/canvas-ribbon/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1545030458890},{"_id":"themes/next/source/lib/canvas-ribbon/.git/packed-refs","hash":"e9b32db6334e83336cbca343dedc5b9cc64e8e66","modified":1545030458883},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1543211120265},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1543211120266},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1543211120266},{"_id":"themes/next/source/lib/pace/.git/config","hash":"46d590e05dc25560a69d5cc71b337adad9654443","modified":1543214192884},{"_id":"themes/next/source/lib/pace/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1543214192882},{"_id":"themes/next/source/lib/pace/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1543214190655},{"_id":"themes/next/source/lib/pace/.git/index","hash":"566d1eb657e80d606afa3d4fce2706477fc1e95e","modified":1543214192894},{"_id":"themes/next/source/lib/pace/.git/packed-refs","hash":"2423e57d7b82d584aa814481ceeff0055b991cda","modified":1543214192880},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1543211120270},{"_id":"themes/next/source/lib/three/.git/config","hash":"65f90ae2568e8c72066580065d3e1df0d03f415c","modified":1543213958260},{"_id":"themes/next/source/lib/three/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1543213953617},{"_id":"themes/next/source/lib/three/.git/index","hash":"98c926c96e546a73c3b885992c197e9f39fdbd85","modified":1543213958273},{"_id":"themes/next/source/lib/three/.git/packed-refs","hash":"1c99fae944ab5850e6a9d04290eaa3913e78c97c","modified":1543213958257},{"_id":"themes/next/source/lib/three/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1543213958258},{"_id":"themes/next/source/lib/three/lib/CanvasRenderer.js","hash":"cf8e1ce6e884023ad0d692cf30f399862407fb40","modified":1543213958265},{"_id":"themes/next/source/lib/three/lib/Projector.js","hash":"1ad16e96cea2a8a9155bb429c83ef9bdd341ce99","modified":1543213958266},{"_id":"themes/next/source/lib/three/src/canvas_lines.js","hash":"650310ff6783671f8ceccf01f840b20d9c87b491","modified":1543213958266},{"_id":"themes/next/source/lib/three/src/three-waves.js","hash":"e98e442f14920e9fb8691846dca3a2225d403048","modified":1543213958267},{"_id":"themes/next/source/lib/three/src/canvas_sphere.js","hash":"7614790c67d3e79e3390fe688f6b01afad7e3bb1","modified":1543213958267},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1543211120270},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1543211120270},{"_id":"themes/next/source/static/api/css/imgshare.css","hash":"c3624a2dde649ed28b2e5d1f050fd971fbaf71a0","modified":1544592457350},{"_id":"themes/next/source/static/api/css/select_share.css","hash":"d0259abdb410193cf761e42bffaa51e70327a0cd","modified":1544592457350},{"_id":"themes/next/source/static/api/css/like.css","hash":"2024d58206df01b858c38f07957f928b44e14cb3","modified":1544592457350},{"_id":"themes/next/source/static/api/css/share_style0_16.css","hash":"090e77e9e6e9b8ee0d73a233cbe46499de935bdd","modified":1544592457351},{"_id":"themes/next/source/static/api/css/share_style0_24.css","hash":"7d1f9f32b80f91001f4f951aa045180cde22d82e","modified":1544592457351},{"_id":"themes/next/source/static/api/css/share_popup.css","hash":"338ba2b30ef8ce0c84cd36b37d7f8482996291dc","modified":1544592457350},{"_id":"themes/next/source/static/api/css/share_style1_24.css","hash":"3ee5f745c863b4f68299fe5dc125f913ca619c07","modified":1544592457351},{"_id":"themes/next/source/static/api/css/share_style1_32.css","hash":"626d67a4c0bb72a152e90d25dbf281c0c35a2140","modified":1544592457351},{"_id":"themes/next/source/static/api/css/share_style0_32.css","hash":"7c2d12ea532c8a55c102b649bb23ef5bf53b3ed3","modified":1544592457351},{"_id":"themes/next/source/static/api/css/share_style1_16.css","hash":"aeb4e9fa96cfa0167481e1f4007079dc3f3c6c27","modified":1544592457351},{"_id":"themes/next/source/static/api/css/share_style2_16.css","hash":"572c8e856988e463eb865f38d33ba003cc20d083","modified":1544592457352},{"_id":"themes/next/source/static/api/css/share_style2.css","hash":"1ad451187cde8a74843fd398b924ca0ac911e9be","modified":1544592457351},{"_id":"themes/next/source/static/api/css/share_style2_24.css","hash":"917d963d3be111064cbb1d122963da91ee3724a0","modified":1544592457352},{"_id":"themes/next/source/static/api/css/weixin_popup.css","hash":"5e6c5084bfd16051de5776c2e136a5462b08a32c","modified":1544592457352},{"_id":"themes/next/source/static/api/css/share_style4.css","hash":"0a9e2ed712a5ef5c4699c038cd001a0d688a0fdf","modified":1544592457352},{"_id":"themes/next/source/static/api/css/slide_share.css","hash":"3898feaf45559b039f885bee8f9e831f48adb20c","modified":1544592457352},{"_id":"themes/next/source/static/api/css/share_style2_32.css","hash":"3657bbc4b5bbc66ebca4906ee0a1cbf9f98be883","modified":1544592457352},{"_id":"themes/next/source/static/api/js/share.js","hash":"73bdb33580128e6c79a726a25f98092c0faa369d","modified":1544592457364},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1543211120269},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1543211120268},{"_id":"themes/next/source/static/api/js/trans/data.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1544592457366},{"_id":"themes/next/source/static/api/js/trans/logger.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1544592457366},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1543211120272},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1543211120240},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1543211120239},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1543211120239},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1543211120239},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"05e68adae13f4d99a6ac6493daab39c92e39a6bd","modified":1543211120240},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1543211120240},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1543211120240},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1543211120240},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"a6dc3c7eb81ef5117c28fa2245fff1adc02d0292","modified":1543211120241},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1543211120241},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"a1eeceea4b88fba184408cb2507bbef1f5e7b0e0","modified":1543211120241},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1543211120241},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1543211120241},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1543211120242},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1543211120242},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f2911a048e5c20ca2a059bd1087d98ac1c51681c","modified":1543211120242},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1543211120242},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"3b5a37ba5e70f92c1ee707c8053524e38adbb710","modified":1543211120242},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1543211120242},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1543211120243},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1543211120243},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1543211120243},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1543211120243},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1543211120243},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1543211120243},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1543211120244},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1543211120244},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1543211120244},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1543211120244},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1543211120244},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1543211120244},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"3039df53b94b0847b0c451d2d227270b479cc184","modified":1543211120245},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1543211120245},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e18b90c97aaff027e795f5a0cb10476a71bf1c3a","modified":1543211120245},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"b34bb2ea4d16e47e6fdc06cd4feb32d93ccbd779","modified":1543211120245},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1543211120245},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1543211120246},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1543211120246},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1543211120246},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1543211120246},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1543211120246},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1543211120247},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1543211120247},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1543211120247},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1543211120247},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1543211120247},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1543211120248},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1543211120248},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1543211120248},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"5e340ee2407a4e39cd708794cfcc718a5f398d7b","modified":1543211120248},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1543211120248},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1543211120249},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1543211120249},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1543211120249},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1543211120249},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"e6d4bdee6183fba28264d34b976dad9a92d8dfba","modified":1544596736599},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1543211120249},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1543211120249},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"fd8fb7ee000fb92876ce101ce887ca5632ce0333","modified":1544596827212},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1543211120255},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1543211120254},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1543211120256},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1543412318338},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1543412318338},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1543412318338},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1543412318338},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1543412318339},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1543412318340},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1543412318340},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1543412318339},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1543412318338},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1543412318339},{"_id":"themes/next/source/lib/algolia-instant-search/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1543412318340},{"_id":"themes/next/source/lib/algolia-instant-search/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1543412318337},{"_id":"themes/next/source/lib/algolia-instant-search/.git/logs/HEAD","hash":"d718adb303b622b513c76ffd42548c789c48fb3d","modified":1543412321266},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1543213897153},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1543213897155},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1543213897157},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1543213897155},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1543213897154},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1543213897156},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1543213897158},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1543213897155},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1543213897156},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1543213897154},{"_id":"themes/next/source/lib/canvas-nest/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1543213897158},{"_id":"themes/next/source/lib/canvas-nest/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1543213897152},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/HEAD","hash":"ce3229e530a4b4521031e2d7bcfd1288f8f6ce81","modified":1543213899681},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1545030457025},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1545030457026},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1545030457026},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1545030457025},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1545030457026},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1545030457026},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1545030457025},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1545030457026},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1545030457027},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1545030457026},{"_id":"themes/next/source/lib/canvas-ribbon/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1545030457024},{"_id":"themes/next/source/lib/canvas-ribbon/.git/logs/HEAD","hash":"f68177c54048d90ef0fdd05f9783c7918ff48763","modified":1545030458886},{"_id":"themes/next/source/lib/canvas-ribbon/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1545030457027},{"_id":"themes/next/source/lib/pace/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1543214190657},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1543211120268},{"_id":"themes/next/source/lib/pace/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1543214190656},{"_id":"themes/next/source/lib/pace/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1543214190658},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1543214190660},{"_id":"themes/next/source/lib/pace/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1543214190659},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1543214190657},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1543214190658},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1543214190656},{"_id":"themes/next/source/lib/pace/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1543214190661},{"_id":"themes/next/source/lib/pace/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1543214190659},{"_id":"themes/next/source/lib/pace/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1543214190654},{"_id":"themes/next/source/lib/pace/.git/logs/HEAD","hash":"450b10f15188320828906017346a1e21b2725bdf","modified":1543214192883},{"_id":"themes/next/source/lib/pace/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1543214190661},{"_id":"themes/next/source/lib/three/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1543213953618},{"_id":"themes/next/source/lib/three/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1543213953617},{"_id":"themes/next/source/lib/three/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1543213953618},{"_id":"themes/next/source/lib/three/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1543213953618},{"_id":"themes/next/source/lib/three/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1543213953618},{"_id":"themes/next/source/lib/three/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1543213953618},{"_id":"themes/next/source/lib/three/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1543213953618},{"_id":"themes/next/source/lib/three/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1543213953617},{"_id":"themes/next/source/lib/three/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1543213953618},{"_id":"themes/next/source/lib/three/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1543213953619},{"_id":"themes/next/source/lib/three/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1543213953617},{"_id":"themes/next/source/lib/three/.git/logs/HEAD","hash":"2935e94ba29d14adca02b49ed745ba47858c4c99","modified":1543213958259},{"_id":"themes/next/source/lib/three/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1543213953619},{"_id":"themes/next/source/static/api/img/share/icons_0_16.png","hash":"0eec1e81a04664b2032bd389513349e9bd5d5b0f","modified":1544592457353},{"_id":"themes/next/source/static/api/img/share/icons_0_24.png","hash":"a89223f9714c8c4fa169430a327963ca6a1c9a6e","modified":1544592457353},{"_id":"themes/next/source/static/api/img/share/icons_0_32.png","hash":"c20521634fdacef39631031671528713e6ba6081","modified":1544592457354},{"_id":"themes/next/source/static/api/js/base/class.js","hash":"db02960fb51f69a0d50dc9ed626a998be3884706","modified":1544592457361},{"_id":"themes/next/source/static/api/img/share/icons_1_16.png","hash":"3793c3265429ab7b830bfaf18322259cd0b4c4ef","modified":1544592457354},{"_id":"themes/next/source/static/api/img/share/icons_2_16.png","hash":"07340442cb61aabb419dd226f4bfb206a7577f52","modified":1544592457355},{"_id":"themes/next/source/static/api/img/share/icons_1_24.png","hash":"9f1d472095dbe138ef7aff069b1d18cae6ffa942","modified":1544592457354},{"_id":"themes/next/source/static/api/img/share/icons_1_32.png","hash":"09825de5f238c97e4374d545961d6e0d5bbfb3e2","modified":1544592457355},{"_id":"themes/next/source/static/api/img/share/icons_2_24.png","hash":"e47fb87c533f2be89f22901f0864d9b5ef83412d","modified":1544592457355},{"_id":"themes/next/source/static/api/img/share/l0.gif","hash":"738b92632b0a9789a9eb568b8d101eb64f55f6e0","modified":1544592457356},{"_id":"themes/next/source/static/api/img/share/icons_2_32.png","hash":"deba62865245a6b5aafa446787d72165c703b943","modified":1544592457356},{"_id":"themes/next/source/static/api/img/share/l1.gif","hash":"70e1932ca7a622ed3322b683eceb7a590860a55e","modified":1544592457356},{"_id":"themes/next/source/static/api/img/share/l2.gif","hash":"e6a5d6104c226a686d48759e0268e09d762e242e","modified":1544592457357},{"_id":"themes/next/source/static/api/img/share/l3.gif","hash":"26c0dd37d98df63abb9d3d83e01bb47c34ee3f0f","modified":1544592457357},{"_id":"themes/next/source/static/api/img/share/l4.gif","hash":"8a9c3cf99766d3f07a9c480cfdffdc3197b9a6b9","modified":1544592457357},{"_id":"themes/next/source/static/api/img/share/l5.gif","hash":"148706f56b8ef4fd9d8483d0ac3a6730e72fc0ad","modified":1544592457357},{"_id":"themes/next/source/static/api/img/share/l6.gif","hash":"f4b8e3188f744f13aca46b27b451d55d9e209c48","modified":1544592457357},{"_id":"themes/next/source/static/api/img/share/l8.gif","hash":"ec7dbc7703961356e05528d2844b983f225445e4","modified":1544592457358},{"_id":"themes/next/source/static/api/img/share/l7.gif","hash":"e4f7e5e56c8f4eb026b5cb0affe3bd69c31af261","modified":1544592457358},{"_id":"themes/next/source/static/api/img/share/pop_c.gif","hash":"e8b9ece6ddaa47ccb2c15f2396d1cd3020740603","modified":1544592457358},{"_id":"themes/next/source/static/api/img/share/r0.gif","hash":"882f255fbafc0136a3917c1dd40db88879c1b1c1","modified":1544592457358},{"_id":"themes/next/source/static/api/img/share/r1.gif","hash":"96064d132ee2477c0e444c2e18162f9d1dc9e9c2","modified":1544592457358},{"_id":"themes/next/source/static/api/img/share/r3.gif","hash":"ecdd21f1457be54afc96e2d005524eef93d7bf85","modified":1544592457359},{"_id":"themes/next/source/static/api/img/share/r2.gif","hash":"67c84a67be3b039892e9cb8c7c29ed29813bf60f","modified":1544592457358},{"_id":"themes/next/source/static/api/img/share/r4.gif","hash":"517435e69a2215a0f003e75a4861154ca963c30e","modified":1544592457359},{"_id":"themes/next/source/static/api/img/share/r5.gif","hash":"e61b32d1830390303927bdab21823959f8dc7023","modified":1544592457359},{"_id":"themes/next/source/static/api/img/share/r6.gif","hash":"4bc01e08ef0015fddf5b8c7257c094ec584ca3ee","modified":1544592457359},{"_id":"themes/next/source/static/api/img/share/r8.gif","hash":"c068ece54a72a3f2428d4f1b5ca7c176f027dd4e","modified":1544592457360},{"_id":"themes/next/source/static/api/img/share/r7.gif","hash":"3c596c924910c93cf3e37cc1b2870dbf271151e2","modified":1544592457359},{"_id":"themes/next/source/static/api/img/share/sc.png","hash":"e5a2ca56973a3d6608e7e3a48ebd9fa5ebda9991","modified":1544592457360},{"_id":"themes/next/source/static/api/img/share/selectshare_close.png","hash":"6f3666278268890a153c85fb9f04ac848c442561","modified":1544592457360},{"_id":"themes/next/source/static/api/img/share/share-search-icon.png","hash":"0629677a7eb5aa3e8bab3faa310c6d8c467a3287","modified":1544592457360},{"_id":"themes/next/source/static/api/js/component/animate.js","hash":"17a3495543db66e4eb56a81a93edf3e41ca8cc31","modified":1544592457362},{"_id":"themes/next/source/static/api/js/component/anticheat.js","hash":"ee6b11a7ed39ae67c1c2aeeef96b4a0f40f8083c","modified":1544592457362},{"_id":"themes/next/source/static/api/js/component/pop_dialog.js","hash":"4417d2fa9ad8ff6c79a2352ef07e9d10a1313ee0","modified":1544592457363},{"_id":"themes/next/source/static/api/js/component/comm_tools.js","hash":"28d096a61f54e64bdbc32d172ae20e7f6e9656a7","modified":1544592457362},{"_id":"themes/next/source/static/api/js/component/partners.js","hash":"a4c275ffb4d3557280211e6bf0573485b397ffd8","modified":1544592457362},{"_id":"themes/next/source/static/api/js/component/pop_popup.js","hash":"aface5a8c3f71e9e024bf0df5b361ed8f5452f50","modified":1544592457363},{"_id":"themes/next/source/static/api/js/component/pop_base.js","hash":"eae6e120c149a21caa2883c533ccc40bc07fda51","modified":1544592457362},{"_id":"themes/next/source/static/api/js/conf/const.js","hash":"7da7df37d0f3d3e1977a8d107c98a3c1ecdb39c2","modified":1544592457363},{"_id":"themes/next/source/static/api/js/conf/define.js","hash":"ee0afad836be1553980501855752ccd79fe1fe0e","modified":1544592457364},{"_id":"themes/next/source/static/api/js/component/qrcode.js","hash":"2e3cc4cc5545556dd97ab899ff32d3ab7ccee808","modified":1544592457363},{"_id":"themes/next/source/static/api/js/share/api_base.js","hash":"cbacd664451f80955c2ff4caccd4b9110062c714","modified":1544592457364},{"_id":"themes/next/source/static/api/js/share/image_api.js","hash":"43a93415f2a5dd34760042c2bcd9f4692feecb5d","modified":1544592457365},{"_id":"themes/next/source/static/api/js/share/combine_api.js","hash":"7ad3c5396bf20704e87f98ebe118034ed3cc7b22","modified":1544592457364},{"_id":"themes/next/source/static/api/js/share/like_api.js","hash":"4034b10f8f34367c6db47ae092e5b4107c2fb8b4","modified":1544592457365},{"_id":"themes/next/source/static/api/js/share/likeshare.js","hash":"2d14ab97cc3dc294c51c0d6814f4ea45f4b4e312","modified":1544592457365},{"_id":"themes/next/source/static/api/js/share/select_api.js","hash":"bf259a7912ee6124d741dbb5e45cab40bfa45e90","modified":1544592457365},{"_id":"themes/next/source/static/api/js/trans/trans.js","hash":"cb82afecdbede8d5a00b6c5ea9595187b6408376","modified":1544592457366},{"_id":"themes/next/source/static/api/js/share/share_api.js","hash":"f7b86d0cc063f692a73a174d04e77cbe3c5facc7","modified":1544592457365},{"_id":"themes/next/source/static/api/js/share/slide_api.js","hash":"c317e3f7fec13d89178e475f26a689bb94e5aa76","modified":1544592457365},{"_id":"themes/next/source/static/api/js/trans/trans_bdxc.js","hash":"a512ebfca0319ab38d06b7b0fb74bcdc942dc46e","modified":1544592457366},{"_id":"themes/next/source/static/api/js/trans/trans_bdysc.js","hash":"28bb985a03b6b1da5a89a143331932a12126c9c3","modified":1544592457366},{"_id":"themes/next/source/static/api/js/view/image_view.js","hash":"bb66297a5bd2c7dd931b9145f5d4a616876f3373","modified":1544592457367},{"_id":"themes/next/source/static/api/js/view/like_view.js","hash":"c1b6a3f3f89ac734c6da284c1ba1dde2ada4e250","modified":1544592457367},{"_id":"themes/next/source/static/api/js/trans/trans_weixin.js","hash":"e68e9bc91ee6fbcd64ac788463870f01602a8562","modified":1544592457367},{"_id":"themes/next/source/static/api/js/view/select_view.js","hash":"2611efec1d31d85609feea0c57e14d3f817a6220","modified":1544592457367},{"_id":"themes/next/source/static/api/js/view/view_base.js","hash":"b3fd7dafde05d63af3dfe9e0a59f9367f81402c5","modified":1544592457368},{"_id":"themes/next/source/static/api/js/view/slide_view.js","hash":"973ded5cd15eb119e79ffd9326af3a44167b26bd","modified":1544592457368},{"_id":"themes/next/source/static/api/js/view/share_view.js","hash":"f445ce9cbbcf887da5e248b1cfadc03ab7df76d0","modified":1544592457367},{"_id":"themes/next/source/static/api/js/component/pop_popup_slide.js","hash":"45a72013fba95249ca965fd4d98f3bbde7a7098a","modified":1544592457363},{"_id":"themes/next/source/static/api/js/start/router.js","hash":"27bc546a9c796b15e59442aaf09ae645a2ed4c74","modified":1544592457366},{"_id":"themes/next/source/static/api/js/base/tangram.js","hash":"e1952e27f6dc3d6339128cec157acef8cc0a775f","modified":1544592457361},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1543412319962},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/0d/49463cf444a6411519b6d7b5bb65fa7e96c4dc","hash":"8baa9ed7c87fbf1a9fdeb378c656471cb98c48e5","modified":1543412319964},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/08/777d50ffb9e517f20d2cbf2ea19130862fb501","hash":"110fcf7830673d2a7715f8347834f7393597ecd0","modified":1543412321254},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/59/0f6f985f6018c397b2499bb49e599b7109ec06","hash":"650b4b24a81daa3b02646b7ffd5ccdac11ab6be8","modified":1543412319965},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/54/7b348ba5c8725ea590087860a352c8ff41cb98","hash":"79281e0d03b3acdbce61914bbfef33ae0c29be6d","modified":1543412319961},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/92/1eb7be3c529d19b6c92ce67e4099e8f7d6adf3","hash":"023bef5405aee54ae6b00e1e02eb6984b691ccbf","modified":1543412321255},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/6d/b4c7bd4b80f34ae7165de7d91291759569d572","hash":"f04a0f8b9dde5d5c36f470634ca8f958a3b6aa15","modified":1543412321255},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/a4/0c9f2635389a60948f0f2235f037277f8acff6","hash":"ec4074d54b477aea533dab38384dd9a52fa58854","modified":1543412319963},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/c9/af6112eed1dab47eba55651562f768bfbc861d","hash":"a3ce783cca46bdcba0a1eda2d034c77221e07e06","modified":1543412319960},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/da/0b2b5f2ab8f750444499f17e4cbf6074aef7f0","hash":"b343b66897d47a95d9a4363eaab8ff61a1c8a683","modified":1543412319961},{"_id":"themes/next/source/lib/algolia-instant-search/.git/refs/heads/master","hash":"591d58b48a711af78b2cf38fbf4e5d9e23c22ab8","modified":1543412321266},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/f5/e09255981809338b668b56510e360595fc12fa","hash":"c385e27cf914367d1fde121a2c920b93832cf2ed","modified":1543412319962},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/44/6ddf9b6c0e5ade17ca5cb99f9b3a5300919c57","hash":"fb72799ff98445f72fda041337da4cf105d9dcba","modified":1543213899670},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/2a/f622a4d7df40a2708946e91d6d7a0df1dc468c","hash":"3da7207fb18d361b83c56f4e35f67e9e945abd82","modified":1543213899666},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/45/9262fe92f0115707bf8d8764f1886bc5e7c9e0","hash":"36040483f8af76775b7e4b6d87cec53729625399","modified":1543213899667},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/50/dd2a6539498a70226c81a587db486b47e839ff","hash":"3844b0c815d0b4b32c6312c751a826bf9dc2c945","modified":1543213899668},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/51/7c5eb7dcc2cb9769efea2e7375ff6e04123150","hash":"ec53157077d47430f4729bf164999d18d370aeab","modified":1543213899669},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/69/39233ece53c9bdb9a1faf3271ed5768b034aad","hash":"5a770d418c1bb7b0f031f4d5416530002032fcf3","modified":1543213899665},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/5e/8ae972c99b04af7dd56dabfc485e8fdae5094d","hash":"791b3349c5696ccacae00bffbdbb8d88a03e61a9","modified":1543213899668},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/75/de2b8fa62d52690de32c351c63ab6446104ed5","hash":"52d10122d633ce4895a0690c5955e1b356f5a391","modified":1543213899667},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1543213899664},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/7b/c7e3186212b6f2e06d3370502565e2c6326890","hash":"379f3c6486f589fc9c1ab07d0382adacf4f655a2","modified":1543213899659},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/86/1c9f4241fe0eb6af02ad770d5ce04c1f68972b","hash":"7005c3e36015a4af30d4b91bd5a849a7861a073e","modified":1543213899666},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/91/f99a0c53b26dd54f56b9e452c68f56b06f8f7e","hash":"3dca8a5629e66599b6e0f146aa32f1b7ce023d89","modified":1543213899665},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/98/67d1132e0e50bbb7df754a63358d70741df6d5","hash":"3cb710a1faee73c08036f5e2df7df3a7ce29e9dd","modified":1543213899660},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/aa/da83ad9aa55faa2b34ede31b1d41e16966f80b","hash":"b304541ab95b7969a63ba2ec4f60f5391bd8bb44","modified":1543213899660},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/b1/bb278ca2e50dff1b343f9d5ca025272859432f","hash":"74f0afa72a30268d84613fb0d1d893bba866f01d","modified":1543213899663},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/bb/5755c22b6c1b7461319624f0f000bc947882ee","hash":"2b87a2a354a0fa77cbddf461b03b0b8e43c16a4f","modified":1543213899670},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/ca/3466a8cbf05c2982c58199d6ee71ec6d0271ca","hash":"a9b80b5d827b5e84229b1afd7920d9218dce610f","modified":1543213899669},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/d4/95d28a8fab74d23908f6ccef9e4db2625fbacb","hash":"59e6067b0a806deee7bda6460b36c0f63e2e1db5","modified":1543213899662},{"_id":"themes/next/source/lib/canvas-nest/.git/refs/heads/master","hash":"0d9eca6de7a9f48d9a82907aba069795bcf62eee","modified":1543213899680},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/5a/69ce9c2e4a1a34f6063ae9a121af1555669c69","hash":"dad25cc0f450e2827b5676975f4a70636e3fd2c8","modified":1543213899664},{"_id":"themes/next/source/lib/canvas-nest/.git/objects/90/f6477118d05f5f96ce0a63c6f18b7b2baea200","hash":"385f58e92981f27fa54eb52bf60424e87c70a9d8","modified":1543213899661},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/15/9cfb8a3050111dfb3e6635e3f37fe68de2ab30","hash":"f4e1752896135edd6c9a36164b45893a59839548","modified":1545030458869},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/25/3593d429ba9f66eb536d2577e4aa8b74ed7dfa","hash":"b68bb1519d36e82753367a811009e5850db4ddce","modified":1545030458864},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1545030458869},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/20/47d8728f7950fcc2276c339ee199302805838d","hash":"813e7f6c3b8954c40b250e6ba592d6bac7874397","modified":1545030458874},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/56/4913335d11e112ac80e8d550c8347016007f6d","hash":"50e9db730ceac6b2d0c8e8d5a3fec450290fdd8e","modified":1545030458873},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1545030458871},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/57/6d268825c6e7b3892828b61b9b408600faa1f2","hash":"2ca9617d2459b9e010e71b3b221fec42d76cae32","modified":1545030458870},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1545030458872},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/6c/34e310dd41c6bfa8db842190388ab83e6d4fa2","hash":"b327c0ce763240a6a8bd2f3fb55ace6b9e3df671","modified":1545030458867},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/7e/871dba93cad35ffcec76a936259ae9a3641bc7","hash":"957e9e7db09ee72fc49ca852d3cc67242567fa45","modified":1545030458875},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/ab/2197a6f5baffdd1d2895c169f4777921cc4027","hash":"81a75ca40bcfd278d6a9d67dedc8d61d959e2baa","modified":1545030458871},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/c5/8416b72bd371aaf3bc8952f819c1afd3e4c0b4","hash":"aa8e6e340697fc6d9697c1ab8213ee40aca4ea82","modified":1545030458868},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/b9/07949515b208cc605b513ff9d5b8153cbe2fe1","hash":"8fb6e8f2e6b4df8787239335ef9777a6c888d3c0","modified":1545030458875},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/c6/d0381e6cd08086561110f76b5f921bf81a6f87","hash":"be98eb9329c91132e90d942a44d05a41c78b4470","modified":1545030458866},{"_id":"themes/next/source/lib/canvas-ribbon/.git/refs/heads/master","hash":"03b53be10249625c87e7cf7311b225cb145e3039","modified":1545030458886},{"_id":"themes/next/source/lib/canvas-ribbon/.git/objects/02/5cf882fc75a324b1d71b0921eb52ea427387fd","hash":"4a0f15d00f50c629f01c2274e26ef05b3779b6c6","modified":1545030458866},{"_id":"themes/next/source/lib/pace/.git/objects/00/13175fe71888324d9142744034e8296501174a","hash":"0ad0e50f7fe91fe14491924aa4b1e2e8f060a5cd","modified":1543214192648},{"_id":"themes/next/source/lib/pace/.git/objects/23/4f9b3e93f06a85cb2ec01acc872ccdc2bec7cb","hash":"63f8640eceff35a80175a102fcbd8789e690cfaa","modified":1543214192649},{"_id":"themes/next/source/lib/pace/.git/objects/1c/159365320ef5dde63906912f3df067376b40d0","hash":"1dd6b7373c3f9c67e34aa319c9c08fd0f667156a","modified":1543214192864},{"_id":"themes/next/source/lib/pace/.git/objects/35/a749d823ad0aae6111a76dc501a1170478f376","hash":"e757129fb6bca3170b62b05f3e850e4b55f3ae88","modified":1543214192863},{"_id":"themes/next/source/lib/pace/.git/objects/49/0db22b657dd64430d003fe2831905a54858b22","hash":"43694656c4c331cfa3667afca630bd486ac0d0fe","modified":1543214192857},{"_id":"themes/next/source/lib/pace/.git/objects/41/28e69301ad36a283c0fc523f3aef89644d2467","hash":"d8b985cf431fbdc5b4fa3be89e27db7a3437c920","modified":1543214192866},{"_id":"themes/next/source/lib/pace/.git/objects/3e/dcd352d2a1a60dbb6a43e7e9f00bab8b55791a","hash":"725bf5094855cd943dd1cd351906fb1ebec1d861","modified":1543214192652},{"_id":"themes/next/source/lib/pace/.git/objects/53/3d55db0342c2b011ac05703c3b42e88a25c1ed","hash":"c48454760d2e04602a5499188b33d38839c58aee","modified":1543214192862},{"_id":"themes/next/source/lib/pace/.git/objects/60/0378418401f2b0e7c58407a7bbc5a5196cfa51","hash":"20489d796247dda758599f40cbfcf14d194ef64a","modified":1543214192647},{"_id":"themes/next/source/lib/pace/.git/objects/4d/fbb499a4f7b2f26a535c335cd66c966ff8b261","hash":"14e4cdcc137045c7efed32f796273d40c9fcef87","modified":1543214192861},{"_id":"themes/next/source/lib/pace/.git/objects/82/8dcba3c8a21de08d1eb38f2eee453b51543188","hash":"629aad2ee2e564790e78cd46e99ad396544960ab","modified":1543214192852},{"_id":"themes/next/source/lib/pace/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1543214192647},{"_id":"themes/next/source/lib/pace/.git/objects/84/a17ac7b4fe9cea559de91f00af88f810bff7f1","hash":"b41b6d3cbccd75b711f0523bba1c26bf19b0a862","modified":1543214192646},{"_id":"themes/next/source/lib/pace/.git/objects/8b/b4535a79cc15127f8906b24c4e0bb4a38a5947","hash":"9c2d65a63f18929b09f3592dda064f24309ff98b","modified":1543214192855},{"_id":"themes/next/source/lib/pace/.git/objects/9b/3058068409f2282607ebb91717d7a6a1406230","hash":"651c5857021e11dc397df86dbe0f01e6c7dc7f16","modified":1543214192856},{"_id":"themes/next/source/lib/pace/.git/objects/aa/813c5a6398600e01b740696cd889eb3becad84","hash":"c62a1513ca820dc59fe1cd6d9ec16c92e0e2fbf0","modified":1543214192650},{"_id":"themes/next/source/lib/pace/.git/objects/97/1e8a1f2ad6d45f693980c106af0aead9d1c215","hash":"e45f0963920a53a57f6b53d178e5b05a8e315189","modified":1543214192651},{"_id":"themes/next/source/lib/pace/.git/objects/a6/dbd9c99e726f621e2bdcd3c6fe2795a5d4272d","hash":"25350dd31f504af7206610ced355d162aabda8dd","modified":1543214192856},{"_id":"themes/next/source/lib/pace/.git/objects/c0/05c71f1a000d8187df58083d215c962d7f5505","hash":"dffd212ca2ec705233fabe82a6f483d6be4b151d","modified":1543214192854},{"_id":"themes/next/source/lib/pace/.git/objects/de/79ab6539ac3702aaac64b879d95e6575f4eefa","hash":"0046fefd52ed4679e0fee757cc91ced94e3ddc12","modified":1543214192865},{"_id":"themes/next/source/lib/pace/.git/refs/heads/master","hash":"3190f62cf3c4f9eccb1e54c8f7289ed7e6955767","modified":1543214192883},{"_id":"themes/next/source/lib/pace/.git/objects/f3/0e0a99bb016267bde55537dd47b3657ae59544","hash":"8bf0bc17a6111b6a82981073133f33cc8e815c41","modified":1543214192651},{"_id":"themes/next/source/lib/three/.git/objects/09/3d290f60c3b467d503633531d7ce7cdd42dd75","hash":"ab09bc8bfc9079e408dc6facc1bfd9aa5d6bdef9","modified":1543213958246},{"_id":"themes/next/source/lib/three/.git/objects/03/c40a4b50e21c63a0e27b1fbcd014168ae3f6da","hash":"987ca2a1169e875a5ac73e8a1a906b9ae88d4d22","modified":1543213955749},{"_id":"themes/next/source/lib/three/.git/objects/0b/de10292fcd5dd4b66d1bf60f62ea7d7a30b310","hash":"37710386189fe435ea20541a69c1a9b833b5f50b","modified":1543213956003},{"_id":"themes/next/source/lib/three/.git/objects/03/eb19e6b3194a820c462bc63177b6fc2bda245f","hash":"0be88820832fa6ea30d56905e98b27798805dc92","modified":1543213956001},{"_id":"themes/next/source/lib/three/.git/objects/1b/3d1cd16f3e6ce99ea92c7e9c0b78ee30a8c346","hash":"16569e1c4912fd762f32b13de839d05b9c319e54","modified":1543213955555},{"_id":"themes/next/source/lib/three/.git/objects/1f/0b95a965630f47a7264fe9e9456ed7da36c2aa","hash":"6e98b6d7740bf53074339ce383089320fe1962b9","modified":1543213955558},{"_id":"themes/next/source/lib/three/.git/objects/36/3db3ce197d25b8c64db663aa9000a181511461","hash":"f87bc2ce87e37d0ee60eceef8be89dae4c52e01d","modified":1543213955754},{"_id":"themes/next/source/lib/three/.git/objects/21/77c1416c8e91ed918b6d3cf7f333d99d659a24","hash":"7330016805a652c2153bfcfbdd4c3c50e5b5a642","modified":1543213958248},{"_id":"themes/next/source/lib/three/.git/objects/3a/4c8581b3aa0d4f9192de158bd4223a90d646b5","hash":"a64efe9f8e2db0ff3cfb7b5e71fedf229ce290fd","modified":1543213955558},{"_id":"themes/next/source/lib/three/.git/objects/3a/cef7449b991ee78bb5b7f2f121996b9ec9bba4","hash":"d9165d5939be17750b9edad5d0fc32029e4a23d6","modified":1543213956004},{"_id":"themes/next/source/lib/three/.git/objects/29/4f11136ee13277ee96ec3bb56d810f43655298","hash":"a294c3770aa5e7ed386075202f5b88048e1d170d","modified":1543213958244},{"_id":"themes/next/source/lib/three/.git/objects/3f/f2616b188ab71e1abf2029d7d55834c5643fc5","hash":"65bbc360ee3cc66fba71b9fb0baa3cff744327b9","modified":1543213955751},{"_id":"themes/next/source/lib/three/.git/objects/3c/6fef4314903036253335d4550346f6b927c721","hash":"1ee4e7d110363dc5e2676b675c7f7030731cf3a5","modified":1543213958240},{"_id":"themes/next/source/lib/three/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1543213955559},{"_id":"themes/next/source/lib/three/.git/objects/52/71f18c203d24b27ec7bd977c2d5c61300cea1a","hash":"cdae53ba376df246585a2f44a86d0c7da98bca1f","modified":1543213958238},{"_id":"themes/next/source/lib/three/.git/objects/6e/a4473e91dc2dbc452ff446e7cb04cb2ff16da0","hash":"710066cce498e372a932ff272d3d0eb4345fe3cf","modified":1543213955552},{"_id":"themes/next/source/lib/three/.git/objects/6b/128053933889f264c239abe0d381523daa8fa5","hash":"23df1e6daed83528bc2f36980678ecc31e17f09e","modified":1543213955755},{"_id":"themes/next/source/lib/three/.git/objects/79/ae5f64ea4be7e1a108b2f1fc8afbca7bfa1fba","hash":"4e28517d80599b1a6051b1d3f657654aca6333b9","modified":1543213955560},{"_id":"themes/next/source/lib/three/.git/objects/67/6b9f6189356d0201fd72dd6f98db19628a2ff5","hash":"250795ea0af79524945e66b28f233eb8bd9ee7dd","modified":1543213958236},{"_id":"themes/next/source/lib/three/.git/objects/70/0960a662785b70b5c72909810794e1c18e9891","hash":"ea3c3330dd0a213a3cebdc42ee57d43fb8f9813c","modified":1543213958233},{"_id":"themes/next/source/lib/three/.git/objects/7d/d7c1e8f79dc9a9a99e290147528d7a47d46830","hash":"c2104c89bcf686b243061b456ddc86d916b84360","modified":1543213956004},{"_id":"themes/next/source/lib/three/.git/objects/7f/6a7ddb8a04644dc980d83c9878b4621acf82f5","hash":"c517caf5d47c9f1eba2ced6800dab03e2e29a130","modified":1543213955556},{"_id":"themes/next/source/lib/three/.git/objects/87/782e1008d1f88a9cb63d59407b1cb9e47b0861","hash":"0af5c5e17b27d8114fddd53d7cae8bb3284ae9af","modified":1543213955554},{"_id":"themes/next/source/lib/three/.git/objects/89/b7ae569312ae577534d7b58647232fb48bfb08","hash":"a265c0a7e24267bd82d11a48f091d2241edc0080","modified":1543213958245},{"_id":"themes/next/source/lib/three/.git/objects/8e/3ea1a067348d2a9c066fbf201663b462a3ed6c","hash":"f3168176590ac08570ef75b73ecae2b4a455d753","modified":1543213955754},{"_id":"themes/next/source/lib/three/.git/objects/82/69b6fd29a514f9bd746497b298176228bd4061","hash":"cf527c08b5d88d72939a61446d128eba2fb94be2","modified":1543213958234},{"_id":"themes/next/source/lib/three/.git/objects/a4/6866ca175f7c27daaf6b39c94d930bc27d4ce5","hash":"fc416f7f3f62c338bda28bb56bfa6f8fb49421ff","modified":1543213958232},{"_id":"themes/next/source/lib/three/.git/objects/ae/8fa980e909988af2ebd9423658213d2e7e6bba","hash":"9978e4f223de97e23a047986bf21cbf48663a150","modified":1543213955553},{"_id":"themes/next/source/lib/three/.git/objects/b0/2d36d33210bc68d3e6451c663eb567ebc5721c","hash":"8d3bac2fa021a8f4609a134167edb84fd46254b2","modified":1543213955753},{"_id":"themes/next/source/lib/three/.git/objects/8a/2159d7a0c70d394071e8dcc79502d5cd1fc5e4","hash":"58ff19b7a9a65c9e562b9e1c7ee0ed3ac005b15d","modified":1543213958242},{"_id":"themes/next/source/lib/three/.git/objects/ce/175226253f7f31da632b93ab6560debab1bf6d","hash":"55c41b0948cb31fad3a52ab7ac91ba93e6c22751","modified":1543213955554},{"_id":"themes/next/source/lib/three/.git/objects/d0/32ce3fe05be57b72cc925f86149497229cda13","hash":"59e5036e95b496852ad3b918eac2e4b28a5951f2","modified":1543213958247},{"_id":"themes/next/source/lib/three/.git/objects/d8/8d5765694f92039daac0f944405d4cf61a0d13","hash":"70d2b236fcd955aa4fa95efc2e18c98919003ec6","modified":1543213955557},{"_id":"themes/next/source/lib/three/.git/objects/df/932438893faefc6b9f5ba9191913dfeedc2a1c","hash":"ac939ae39ab04abc99c0caaef00849585ff4886d","modified":1543213958245},{"_id":"themes/next/source/lib/three/.git/objects/e0/52c7542703df4969a95779bd4dc58b568bcb5e","hash":"b1ccf1650011f74939f07233834bdff21baf4952","modified":1543213955556},{"_id":"themes/next/source/lib/three/.git/objects/d9/90e2654ec49768cd50d630db99ee00bee2b13c","hash":"6c5cc041391cb5a6b3e0f2f15f30bd62735ac7fa","modified":1543213956002},{"_id":"themes/next/source/lib/three/.git/objects/e5/6e96bd99ebe3f0dc8f02c979703c3666f6dd9e","hash":"b971fcaae8424ea1b507379afdcdff74359a1525","modified":1543213958247},{"_id":"themes/next/source/lib/three/.git/objects/ec/00e107b97a0b7a9850219894bf4e533c68bf87","hash":"5b7f94788c3c19c8a0f73f1b712d5d79e0236668","modified":1543213956002},{"_id":"themes/next/source/lib/three/.git/objects/d2/a00ca1067b93b81dae8ea7d0c9838e935595e8","hash":"4b1ecd5271cdf94c10c2e413c7378adb22e940bb","modified":1543213958243},{"_id":"themes/next/source/lib/three/.git/objects/e0/ced7e71c43a729f9653b1c4434b95724fc02ed","hash":"98c61b57d8e5e03cf30d402cfcb840c6e610aaa6","modified":1543213958239},{"_id":"themes/next/source/lib/three/.git/objects/ea/7a1bbd08eb930b5f777ec025493ae0c8cb12d4","hash":"3c428fd65f982afbabbf683163bcc88a4eb4cda0","modified":1543213955553},{"_id":"themes/next/source/lib/three/.git/refs/heads/master","hash":"e1896f18b5735a495e320e3f94266dadbc121db6","modified":1543213958259},{"_id":"themes/next/source/lib/three/.git/objects/d9/0026fb76d55bba50ee4a221c887a0f1a8e8102","hash":"ac0ac5756be4b24f2249be101665ff29ed93d1f9","modified":1543213958241},{"_id":"themes/next/source/lib/three/.git/objects/fe/47fa8f2d9edef52a8ea859537c9286363ee168","hash":"dfaa57c592a229b220a7241bbd0567ec38f4e578","modified":1543213955753},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1543412321275},{"_id":"themes/next/source/lib/algolia-instant-search/.git/logs/refs/heads/master","hash":"d718adb303b622b513c76ffd42548c789c48fb3d","modified":1543412321267},{"_id":"themes/next/source/lib/algolia-instant-search/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1543412321265},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/refs/heads/master","hash":"ce3229e530a4b4521031e2d7bcfd1288f8f6ce81","modified":1543213899681},{"_id":"themes/next/source/lib/canvas-ribbon/.git/logs/refs/heads/master","hash":"f68177c54048d90ef0fdd05f9783c7918ff48763","modified":1545030458886},{"_id":"themes/next/source/lib/canvas-nest/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1543213899680},{"_id":"themes/next/source/lib/canvas-ribbon/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1545030458885},{"_id":"themes/next/source/lib/pace/.git/logs/refs/heads/master","hash":"450b10f15188320828906017346a1e21b2725bdf","modified":1543214192883},{"_id":"themes/next/source/lib/algolia-instant-search/.git/objects/2b/d5d590d07a161741477ace2339eb37c07cc40c","hash":"10a1f52729a36d3b9d594e93473fef26fed768e1","modified":1543412321254},{"_id":"themes/next/source/lib/pace/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1543214192882},{"_id":"themes/next/source/lib/three/.git/logs/refs/heads/master","hash":"2935e94ba29d14adca02b49ed745ba47858c4c99","modified":1543213958259},{"_id":"themes/next/source/lib/three/.git/objects/76/310b5a7e93e66e7d98aaab2960d6354b2288c5","hash":"84de52193b47c83d01eb8800b063ccd83ad42cf9","modified":1543213958231},{"_id":"themes/next/source/lib/three/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1543213958258},{"_id":"themes/next/source/lib/algolia-instant-search/.git/logs/refs/remotes/origin/HEAD","hash":"d718adb303b622b513c76ffd42548c789c48fb3d","modified":1543412321265},{"_id":"themes/next/source/lib/canvas-nest/.git/logs/refs/remotes/origin/HEAD","hash":"ce3229e530a4b4521031e2d7bcfd1288f8f6ce81","modified":1543213899680},{"_id":"themes/next/source/lib/canvas-ribbon/.git/logs/refs/remotes/origin/HEAD","hash":"f68177c54048d90ef0fdd05f9783c7918ff48763","modified":1545030458885},{"_id":"themes/next/source/lib/pace/.git/logs/refs/remotes/origin/HEAD","hash":"450b10f15188320828906017346a1e21b2725bdf","modified":1543214192882},{"_id":"themes/next/source/lib/three/.git/logs/refs/remotes/origin/HEAD","hash":"2935e94ba29d14adca02b49ed745ba47858c4c99","modified":1543213958258},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1543213958271},{"_id":"source/images/back_ground.jpg","hash":"023115d9f66eacab74c73ecb2fa8119e25ea2d33","modified":1543203157655},{"_id":"public/google2ff74b080d9e3f60.html","hash":"979711a9be5578ade70250d727705d51f82307b0","modified":1547437748537},{"_id":"public/sitemap.xml","hash":"2232ad80cad25db22dd4457a31599f6be6e4f7a9","modified":1547437748799},{"_id":"public/atom.xml","hash":"a5ade0d618f07a61061796bc0b3ab096eb3cfe13","modified":1547437748799},{"_id":"public/about/index.html","hash":"8ab5ab87dae403bdf0809477d916f58bc4c53493","modified":1547437748836},{"_id":"public/categories/index.html","hash":"e6522b39fa41732eb4a83a17abf0936b3d6cbd8c","modified":1547437748836},{"_id":"public/tags/index.html","hash":"749f4a653783a5a7c9bcfbbeb2ee10b0d09908ff","modified":1547437748836},{"_id":"public/2019/01/14/raspi上CP2102使用/index.html","hash":"8bfb4698bdcd287e42f2d2615e9deeb2503adf63","modified":1547437748836},{"_id":"public/2018/12/21/ConcurrentLinkedQueue使用/index.html","hash":"05a90c255bdf6728853794785b03e941b81a0aa1","modified":1547437748836},{"_id":"public/2018/12/15/2018-2019/index.html","hash":"26c356504d9eb46fbee5e0d0877ae64f39fbd71d","modified":1547437748836},{"_id":"public/2018/12/12/NexT主题中集成gitalk评论系统/index.html","hash":"1269a48289417b36590c78bcd58c1f502521b20c","modified":1547437748836},{"_id":"public/2018/11/26/2018-03-29-Use-TM-On-RPi-With-Arch-Linux/index.html","hash":"0c5b4227c88d2c63f5033b52edeeaa3b398d4557","modified":1547437748836},{"_id":"public/2018/11/26/2017-12-08-Trees/index.html","hash":"f6c38c978d8de782a8fa058f258d98b200082a51","modified":1547437748837},{"_id":"public/2018/11/26/2018-06-08-Install-Arch-Linux-Macbook-13/index.html","hash":"900bc56d5148a2a501bc2b96aece27bc2825b8db","modified":1547437748837},{"_id":"public/2018/11/26/2017-11-23-User-input-and-while-loop/index.html","hash":"c3786c45c281fabeb9933fbc87330c5029095ff2","modified":1547437748837},{"_id":"public/2018/11/26/2017-11-26-Algorithm-Analysis/index.html","hash":"ea5b2c09715033ab6012bd3851bdea576c4b4030","modified":1547437748837},{"_id":"public/2018/11/26/2017-11-26-Function/index.html","hash":"eda8023c44d7bb7b59a7339c2b2d21d6bb734050","modified":1547437748837},{"_id":"public/2018/11/26/2017-11-11-new-to-python/index.html","hash":"ac0492e9f60789fa3f9ef8835d33548e6dbe1fc8","modified":1547437748837},{"_id":"public/2018/11/26/2017-11-11-if-statements/index.html","hash":"0f6de8563c13f1a38217c6375f3b1df74fd1e0dd","modified":1547437748837},{"_id":"public/2018/11/26/2017-11-11-python-list/index.html","hash":"f70a99574c3ca29e28c2161f253cd706de7188be","modified":1547437748837},{"_id":"public/2018/11/26/2017-11-15-Build-Android-on-MacOS/index.html","hash":"7cd56fadc5a22312412efd9ed1082c5014d76d64","modified":1547437748837},{"_id":"public/2018/11/09/Sony-Headphone-Connect-update-google-assistant/index.html","hash":"4caec02840783ad2f2be4dea2859af9327801a99","modified":1547437748837},{"_id":"public/2018/11/02/sony-aosp-build/index.html","hash":"fc567a1fba70f6b602f4eb4c535a08ab425979c5","modified":1547437748837},{"_id":"public/2018/10/17/2018-10-17-OpenWRT-update-sh/index.html","hash":"86dc43dd2d6512f12b3a15e296e1df63d777ef11","modified":1547437748837},{"_id":"public/2018/09/29/change-background/index.html","hash":"3e57940d27fc1168d5213b92c3596fdb3aee9bd5","modified":1547437748837},{"_id":"public/2018/09/28/2018-9-27-OSX-windows-Fixed-time-out-of-sync-issue/index.html","hash":"919d26cd5ef8dd4bc93959d6fd2550c4ab3b8f63","modified":1547437748837},{"_id":"public/2018/09/26/2018-9-26-NexT-theme-Page-transparency-color/index.html","hash":"003cf5afe89df09749cc0fc179ac682f1bee2a3b","modified":1547437748837},{"_id":"public/2018/09/22/2018-9-22-OpenWrt-auto-update-and-adblock/index.html","hash":"7182f0e029407874713613886adb407a4495baa9","modified":1547437748837},{"_id":"public/2018/09/21/2018-9-21-clover-UUID/index.html","hash":"0a74518d587ccc3b35933247373457cda6123ffa","modified":1547437748837},{"_id":"public/2018/09/20/2018-9-20-Build-Android-on-MacOS-preparation/index.html","hash":"917d552295baeb2f174f55263dede4594015ddaa","modified":1547437748837},{"_id":"public/2018/09/19/2017-11-30-Lists-Stacks-and-Queues/index.html","hash":"1fc2e20994de5185a0bfd5d1cc5c8f808a6207d2","modified":1547437748838},{"_id":"public/2017/11/19/2017-11-19-Python-Dictionary/index.html","hash":"0b53e2c797caad8bbf3b616398d7bb9e885256e1","modified":1547437748838},{"_id":"public/archives/index.html","hash":"8510b78351d0741f52a474a0d6304809b1749585","modified":1547437748838},{"_id":"public/archives/page/2/index.html","hash":"e85f4dd172cd5740882b2b1e509ee1e326671c7a","modified":1547437748838},{"_id":"public/archives/page/3/index.html","hash":"a183a16659799808784c5598c848a27d3ef73ecd","modified":1547437748838},{"_id":"public/archives/2017/index.html","hash":"46d88beb597b396d37e94925c447782526b12423","modified":1547437748838},{"_id":"public/archives/2017/11/index.html","hash":"b06316ffea56eff43d4a81df271a4d6d34043de8","modified":1547437748838},{"_id":"public/archives/2018/index.html","hash":"a56922ad0a3ffbcd8e0675791fa7235ce860a554","modified":1547437748838},{"_id":"public/archives/2018/page/2/index.html","hash":"42b14bd156d1977952af2933d474601b0c855b98","modified":1547437748838},{"_id":"public/archives/2018/page/3/index.html","hash":"f2e3df3dad47c6c0f79c1d272e8369a4a5a75725","modified":1547437748838},{"_id":"public/archives/2018/09/index.html","hash":"8d065cc8a453331197982e4876b93ee4374c7aa3","modified":1547437748838},{"_id":"public/archives/2018/10/index.html","hash":"41fdb29e4ebfac0eb24456a2b0d3b7a87a671f52","modified":1547437748838},{"_id":"public/archives/2018/11/index.html","hash":"731b1c472a2e2ab899e09ae61b80a340e02e40ae","modified":1547437748838},{"_id":"public/archives/2018/11/page/2/index.html","hash":"3d82cf7ae3457d2777423f7c906e22d09c62c302","modified":1547437748839},{"_id":"public/archives/2018/12/index.html","hash":"0db06bc515eb911b1ca7ff76c43233cb5aff6e58","modified":1547437748839},{"_id":"public/archives/2019/index.html","hash":"24c3b772ab58174460f13e12cf8c507a2e3cceb5","modified":1547437748839},{"_id":"public/archives/2019/01/index.html","hash":"01fe188f9b69347dd2177e8445a12f4e826d2547","modified":1547437748839},{"_id":"public/categories/Programming/index.html","hash":"b5ca5533c3c2357c7c03cdcf49f06f4c984cc2d4","modified":1547437748839},{"_id":"public/categories/Computer/index.html","hash":"d25ef0c12dc30bf9b2e3ea7b2447805e228ddbf4","modified":1547437748839},{"_id":"public/categories/miscellanea/index.html","hash":"0113eba01d5ebf5f2fe4fbce816cf65932aa1493","modified":1547437748839},{"_id":"public/categories/Computer/Raspberry-Pi/index.html","hash":"c904ea25ba7747031873a6a3d99068d4e6533ea5","modified":1547437748839},{"_id":"public/categories/路由器/index.html","hash":"0a8a7418f3552bdb4169f9f4fbffa2117b93ef70","modified":1547437748839},{"_id":"public/categories/Hexo/index.html","hash":"5aef57506f248dfffe953603b364405f881ffda6","modified":1547437748839},{"_id":"public/categories/黑苹果/index.html","hash":"8b0f415ca4f3fddbe6425541f4df8279815572bb","modified":1547437748839},{"_id":"public/categories/Android-Build/index.html","hash":"546cb95fcb06b34c176b217e8d1e01cdf006e74c","modified":1547437748839},{"_id":"public/categories/Android-App/index.html","hash":"0fa630ff35a07bada4976b92fee3fec1e372f230","modified":1547437748839},{"_id":"public/categories/Raspi/index.html","hash":"510c0c5cd78dad24a88f5f4cb0fa7ef0438e6d3e","modified":1547437748839},{"_id":"public/categories/java/index.html","hash":"e927d3a6d93df35e85d6b1f065e7371def8b18ce","modified":1547437748839},{"_id":"public/index.html","hash":"9f49ef53cfc2991d783c7b66c50636b3c81b3aa5","modified":1547437748840},{"_id":"public/page/2/index.html","hash":"5d1c8ed77f67eb18a42911bad1eadeaee57367fa","modified":1547437748840},{"_id":"public/page/3/index.html","hash":"a7825c6a232f8c808d3b68df33e5536d06ad374f","modified":1547437748840},{"_id":"public/tags/Python/index.html","hash":"08d28e9345fa0cb5b8d6c8001336cff186563175","modified":1547437748840},{"_id":"public/tags/Develop/index.html","hash":"515a239cb3809248e080b5311d9f0e955e5e9006","modified":1547437748840},{"_id":"public/tags/Android-build/index.html","hash":"c8c3e9fcf40e4461db7d8fab582b4ebfa75578b0","modified":1547437748840},{"_id":"public/tags/C/index.html","hash":"c07a52e318b4cfbac5cfb33af558f502e3b5c3a9","modified":1547437748840},{"_id":"public/tags/Data-Structure/index.html","hash":"b66fd5d1911a99a02b4dee9fce134d67748d54b4","modified":1547437748840},{"_id":"public/tags/MacOS/index.html","hash":"91904068deb5bf7976ed99efee278baa7d04f4ba","modified":1547437748840},{"_id":"public/tags/Time-Machine/index.html","hash":"d1bc4f16c386bf53e4ab312d1988b6afa90ada2a","modified":1547437748840},{"_id":"public/tags/Senior-Year/index.html","hash":"a8926257f660866cdbbe4da11343f78d150134cd","modified":1547437748840},{"_id":"public/tags/New-Year/index.html","hash":"c0191107c6f8dfe54884a1095b727f905f510272","modified":1547437748840},{"_id":"public/tags/ArchLinux/index.html","hash":"3adb287a741d33ee6a206ab34f96bbe7fbc9da51","modified":1547437748840},{"_id":"public/tags/广告过滤/index.html","hash":"a45c94d40d73442e3577f7e5bca295ad7f2d5845","modified":1547437748840},{"_id":"public/tags/NexT/index.html","hash":"0d7731e3bb73e396da35693ef8823890eb2d8427","modified":1547437748841},{"_id":"public/tags/windows/index.html","hash":"6264c2f2f38826d6187c7e0089aadb48a093f23e","modified":1547437748841},{"_id":"public/tags/Android-Build/index.html","hash":"8c9ead05ef15a21f48552c767ec4916064ce034f","modified":1547437748841},{"_id":"public/tags/OpenWRT/index.html","hash":"aab044f1bee68a6a6a9a179fdcce443bce4b7bbd","modified":1547437748841},{"_id":"public/tags/sony/index.html","hash":"04b9681ffecf5e810946ea704f1962ed3b137b93","modified":1547437748841},{"_id":"public/tags/sony-headphone-connect/index.html","hash":"839d2da750d0ccc768236286f5243ca953fd83a9","modified":1547437748841},{"_id":"public/tags/android-app-反编译修改/index.html","hash":"e3c077c84ff7d99a44f6f218b0271d537d907d6c","modified":1547437748841},{"_id":"public/tags/Clover/index.html","hash":"1d67d0f36519809095abe9287d698afe361304b9","modified":1547437748841},{"_id":"public/tags/iMessage/index.html","hash":"2c1df96cb0488c9284bf716b8f5a618f11aa953d","modified":1547437748841},{"_id":"public/tags/FaceTime/index.html","hash":"1102e37c1e1f80261b6dcbd292e73fee65615bd5","modified":1547437748841},{"_id":"public/tags/theme-NexT/index.html","hash":"33d754a5dbf4c9f4edeb235e16c48778ec596f9f","modified":1547437748841},{"_id":"public/tags/unsplash/index.html","hash":"9f644a516b7a0ad1ff6394ce9f78751b029849bb","modified":1547437748841},{"_id":"public/tags/Serial-Communications/index.html","hash":"a3a39d5a231222cc19717da2a904919e09bb5d30","modified":1547437748841},{"_id":"public/tags/raspi/index.html","hash":"8064d82eb05895c0a48b1eebe805b6d84bf85e61","modified":1547437748841},{"_id":"public/tags/Next/index.html","hash":"faf9177f1a33b5bb3fdedc64bb79fd9589fba89a","modified":1547437748841},{"_id":"public/tags/Hexo/index.html","hash":"c637dd05c748b8f8875b31d236e7ff63767b8fcf","modified":1547437748841},{"_id":"public/tags/android-build-download/index.html","hash":"2a3a4c33ea136c9a35380f7fc4ea5de686b379b9","modified":1547437748842},{"_id":"public/tags/java/index.html","hash":"417c66248af7580e308154be738ee48cd76223ab","modified":1547437748842},{"_id":"public/tags/android/index.html","hash":"e3a13c03236655703e4b69d913eddaac1ef6f40a","modified":1547437748842},{"_id":"public/CNAME","hash":"bdd599d5f06ef62ee9ca2e3ab248cf70d5494256","modified":1547437748861},{"_id":"public/images/Exp-tree.svg","hash":"432a7cb6018630f5c33ab5e4c264f40087b417cc","modified":1547437748861},{"_id":"public/images/2.ico","hash":"b32005740b8d47c2bc3d7740b01fe90a8a3b8fb5","modified":1547437748861},{"_id":"public/images/queue.png","hash":"7f6e7aaf762390e15f3a90e5f9ba07012cc87077","modified":1547437748861},{"_id":"public/images/stack.png","hash":"f75f6ff68c8edeaf28e16182a7731dddeaf09f3c","modified":1547437748861},{"_id":"public/images/tree.svg","hash":"8b72d4f0a9187d5213f8545d171e8dfebcad25ed","modified":1547437748861},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1547437748861},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1547437748861},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1547437748861},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1547437748861},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1547437748861},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1547437748861},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1547437748861},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1547437748861},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1547437748861},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1547437748861},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1547437748861},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1547437748862},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547437748862},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1547437748862},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1547437748862},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1547437748862},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1547437748862},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1547437748862},{"_id":"public/lib/algolia-instant-search/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1547437748862},{"_id":"public/lib/canvas-nest/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1547437748862},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1547437748862},{"_id":"public/lib/canvas-ribbon/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1547437748862},{"_id":"public/lib/pace/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1547437748862},{"_id":"public/lib/three/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1547437748862},{"_id":"public/lib/three/yarn.lock","hash":"9c71c0a7c033fc709c1e683157b1f12037024694","modified":1547437748862},{"_id":"public/static/api/img/share/icons_0_16.png","hash":"0eec1e81a04664b2032bd389513349e9bd5d5b0f","modified":1547437748862},{"_id":"public/static/api/img/share/icons_0_24.png","hash":"a89223f9714c8c4fa169430a327963ca6a1c9a6e","modified":1547437748862},{"_id":"public/static/api/img/share/icons_0_32.png","hash":"c20521634fdacef39631031671528713e6ba6081","modified":1547437748862},{"_id":"public/static/api/img/share/icons_1_16.png","hash":"3793c3265429ab7b830bfaf18322259cd0b4c4ef","modified":1547437748862},{"_id":"public/static/api/img/share/icons_2_16.png","hash":"07340442cb61aabb419dd226f4bfb206a7577f52","modified":1547437748862},{"_id":"public/static/api/img/share/icons_1_24.png","hash":"9f1d472095dbe138ef7aff069b1d18cae6ffa942","modified":1547437748862},{"_id":"public/static/api/img/share/icons_1_32.png","hash":"09825de5f238c97e4374d545961d6e0d5bbfb3e2","modified":1547437748862},{"_id":"public/static/api/img/share/icons_2_24.png","hash":"e47fb87c533f2be89f22901f0864d9b5ef83412d","modified":1547437748863},{"_id":"public/static/api/img/share/l0.gif","hash":"738b92632b0a9789a9eb568b8d101eb64f55f6e0","modified":1547437748863},{"_id":"public/static/api/img/share/l1.gif","hash":"70e1932ca7a622ed3322b683eceb7a590860a55e","modified":1547437748863},{"_id":"public/static/api/img/share/icons_2_32.png","hash":"deba62865245a6b5aafa446787d72165c703b943","modified":1547437748863},{"_id":"public/static/api/img/share/l2.gif","hash":"e6a5d6104c226a686d48759e0268e09d762e242e","modified":1547437748863},{"_id":"public/static/api/img/share/l3.gif","hash":"26c0dd37d98df63abb9d3d83e01bb47c34ee3f0f","modified":1547437748863},{"_id":"public/static/api/img/share/l4.gif","hash":"8a9c3cf99766d3f07a9c480cfdffdc3197b9a6b9","modified":1547437748863},{"_id":"public/static/api/img/share/l6.gif","hash":"f4b8e3188f744f13aca46b27b451d55d9e209c48","modified":1547437748863},{"_id":"public/static/api/img/share/l8.gif","hash":"ec7dbc7703961356e05528d2844b983f225445e4","modified":1547437748863},{"_id":"public/static/api/img/share/l7.gif","hash":"e4f7e5e56c8f4eb026b5cb0affe3bd69c31af261","modified":1547437748863},{"_id":"public/static/api/img/share/pop_c.gif","hash":"e8b9ece6ddaa47ccb2c15f2396d1cd3020740603","modified":1547437748863},{"_id":"public/static/api/img/share/r0.gif","hash":"882f255fbafc0136a3917c1dd40db88879c1b1c1","modified":1547437748863},{"_id":"public/static/api/img/share/r1.gif","hash":"96064d132ee2477c0e444c2e18162f9d1dc9e9c2","modified":1547437748863},{"_id":"public/static/api/img/share/r3.gif","hash":"ecdd21f1457be54afc96e2d005524eef93d7bf85","modified":1547437748863},{"_id":"public/static/api/img/share/r2.gif","hash":"67c84a67be3b039892e9cb8c7c29ed29813bf60f","modified":1547437748863},{"_id":"public/static/api/img/share/r4.gif","hash":"517435e69a2215a0f003e75a4861154ca963c30e","modified":1547437748863},{"_id":"public/static/api/img/share/r5.gif","hash":"e61b32d1830390303927bdab21823959f8dc7023","modified":1547437748863},{"_id":"public/static/api/img/share/r8.gif","hash":"c068ece54a72a3f2428d4f1b5ca7c176f027dd4e","modified":1547437748863},{"_id":"public/static/api/img/share/r7.gif","hash":"3c596c924910c93cf3e37cc1b2870dbf271151e2","modified":1547437748863},{"_id":"public/static/api/img/share/sc.png","hash":"e5a2ca56973a3d6608e7e3a48ebd9fa5ebda9991","modified":1547437748863},{"_id":"public/static/api/img/share/selectshare_close.png","hash":"6f3666278268890a153c85fb9f04ac848c442561","modified":1547437748863},{"_id":"public/static/api/img/share/share-search-icon.png","hash":"0629677a7eb5aa3e8bab3faa310c6d8c467a3287","modified":1547437748864},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"fb0ff0949c9179447690e049aaced1ee0615941b","modified":1547437748864},{"_id":"public/live2dw/assets/exp/f01.exp.json","hash":"84073a497ddb6e56c6cfc244a0fb217ba473abf9","modified":1547437748864},{"_id":"public/live2dw/assets/exp/f02.exp.json","hash":"241b6afafa2e25c6d7a54692a8b5aa060a137ab1","modified":1547437748864},{"_id":"public/live2dw/assets/exp/f03.exp.json","hash":"fbf7729e504f14f83f976827fcf62301a6579a34","modified":1547437748864},{"_id":"public/live2dw/assets/exp/f04.exp.json","hash":"35e746ede62e7090e7dfb08561d77772f58b4153","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/flickHead_00.mtn","hash":"f64c79c9171660db5c440bef229ac2e35a1597d5","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/flickHead_02.mtn","hash":"d3c9c0acb4dc25a2274f3b9faa71e5ce60ad92e4","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/idle_00.mtn","hash":"f9fa4acb170959ed665690d18790fc618cea6bd2","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/flickHead_01.mtn","hash":"a1011d6bf397bcd3c3c968d9616f88fe1ffbc83c","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/idle_01.mtn","hash":"fe824e9209bda79277f4785a637c38bf3b8e1cad","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/idle_02.mtn","hash":"58b87745d9c2b2b5667549a52a781b6bfea44927","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/pinchIn_00.mtn","hash":"70978b4c983f6a9fd6d3d9c24571586f7d6eac30","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/pinchIn_01.mtn","hash":"a5fefb45115695db72b9499e627a51b2b9394f2c","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/pinchIn_02.mtn","hash":"aa0d66ca9b06c374577fd7e64e89756de1e1f2ae","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/pinchOut_01.mtn","hash":"e05df948d08b17f34c993a9c1f901190509d5db0","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/pinchOut_00.mtn","hash":"e07fe8fd8c2810e3c1d28b730bd49c8c25849bad","modified":1547437748864},{"_id":"public/live2dw/assets/mtn/pinchOut_02.mtn","hash":"b323fd350d334b33bbdfb31194ae664089986c27","modified":1547437748865},{"_id":"public/live2dw/assets/mtn/shake_02.mtn","hash":"2702970805e07777974c383613e631730982bcff","modified":1547437748865},{"_id":"public/live2dw/assets/mtn/shake_01.mtn","hash":"e812985a56796e122018f9d57d1606a4866ff7d1","modified":1547437748865},{"_id":"public/live2dw/assets/mtn/shake_00.mtn","hash":"5185d02c7ab9f0bec3d4a890b54b2378e553373d","modified":1547437748865},{"_id":"public/live2dw/assets/mtn/tapBody_00.mtn","hash":"835aa3d4a8fbd26c0bb66b164a19464fa3f17a99","modified":1547437748865},{"_id":"public/live2dw/assets/shizuku.physics.json","hash":"6484d646e79a44c83784c6ae434cf7349746c5c8","modified":1547437748865},{"_id":"public/live2dw/assets/mtn/tapBody_02.mtn","hash":"a75acb51c1191ce5050d3ee1af6f2dcc787c7c5e","modified":1547437748865},{"_id":"public/live2dw/assets/shizuku.model.json","hash":"19a05bd41b806a935cea42c2000626fc82da2536","modified":1547437748865},{"_id":"public/live2dw/assets/mtn/tapBody_01.mtn","hash":"78fca17436ab5e065e27f419f135aa6c0a0b52ef","modified":1547437748865},{"_id":"public/live2dw/assets/shizuku.pose.json","hash":"ac5505efbf80ba0a2e5783d67fe232bc5c6f1f80","modified":1547437748865},{"_id":"public/live2dw/assets/snd/flickHead_00.mp3","hash":"356388d939006b03cf9e6158c603b58d4800bec1","modified":1547437748865},{"_id":"public/live2dw/assets/snd/flickHead_01.mp3","hash":"436d0bbccf6e7a2744447554947eee4563608970","modified":1547437748865},{"_id":"public/live2dw/assets/snd/flickHead_02.mp3","hash":"5f63477ce63f2073e24d68fea906fe136fe6349e","modified":1547437748865},{"_id":"public/live2dw/assets/snd/pinchIn_01.mp3","hash":"d5c8cc6f61b56222a83a5174f75006f83c3b88da","modified":1547437748865},{"_id":"public/live2dw/assets/snd/shake_02.mp3","hash":"8882b94bce00f09232588b7301badb105fa8acab","modified":1547437748865},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"6e013af9c502b2e63ac5e42944e3244f8f515eb7","modified":1547437748865},{"_id":"public/live2dw/assets/snd/tapBody_02.mp3","hash":"15e7815ed0a0e5164e18e0c53b97aedc742a134d","modified":1547437748865},{"_id":"public/images/AVL-Tree-1.svg.png","hash":"40f42c3de3887d5874bb98b70ad984531721e5a9","modified":1547437749350},{"_id":"public/images/data.jpg","hash":"16474ea9caff4fdcb91b9a0fa3faee7253d00474","modified":1547437749355},{"_id":"public/images/python.png","hash":"c8a756475599e6e3c904b24077b4b0a31983752c","modified":1547437749358},{"_id":"public/images/wechatpay.png","hash":"3aa8026db3963a9c08f7d2b292a498bc8fac805e","modified":1547437749358},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1547437749358},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1547437749358},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1547437749358},{"_id":"public/static/api/img/share/l5.gif","hash":"148706f56b8ef4fd9d8483d0ac3a6730e72fc0ad","modified":1547437749358},{"_id":"public/static/api/img/share/r6.gif","hash":"4bc01e08ef0015fddf5b8c7257c094ec584ca3ee","modified":1547437749358},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_00.png","hash":"21bdb28b31783e23b26b3aa061e90be4088665aa","modified":1547437749358},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"5244731131a647d230c1d80731171191adc7e2a8","modified":1547437749358},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_03.png","hash":"07f568a2bb8045b6bdff7783fb4daf62c821f9ab","modified":1547437749358},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_05.png","hash":"0cd00007fb8bff62a2eb08e1d7c43abab8722224","modified":1547437749359},{"_id":"public/live2dw/assets/snd/pinchIn_00.mp3","hash":"f9baa3b7cadec20b714135fc49cfab3ff6adeeb4","modified":1547437749359},{"_id":"public/live2dw/assets/snd/pinchIn_02.mp3","hash":"5b63e02607571ac601c500995e836e6c861b1c62","modified":1547437749359},{"_id":"public/live2dw/assets/snd/shake_00.mp3","hash":"f65dd58e7b44ec5c865d13c190316070b625b5fe","modified":1547437749359},{"_id":"public/live2dw/assets/snd/pinchOut_01.mp3","hash":"8a081030fd53c07bffe3edd48f87a371ca77296b","modified":1547437749359},{"_id":"public/live2dw/assets/snd/pinchOut_02.mp3","hash":"554edb2f3838cbdc27d1a9c6b8a9cb6eb465cbdd","modified":1547437749359},{"_id":"public/live2dw/assets/snd/shake_01.mp3","hash":"c1e0e8a07ff268ee06c2b7825d1b645e193f21b9","modified":1547437749359},{"_id":"public/live2dw/assets/snd/tapBody_01.mp3","hash":"5314b50f153df71559e51e2586581c006df00722","modified":1547437749359},{"_id":"public/live2dw/assets/snd/tapBody_00.mp3","hash":"003e68a59a9c8392e230f34c91860efbd946277a","modified":1547437749359},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1547437749368},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1547437749368},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1547437749369},{"_id":"public/js/src/clicklove.js","hash":"9a063bd1b36ce939e33d4d1352398d6490ea5eea","modified":1547437749369},{"_id":"public/js/src/crash_cheat.js","hash":"3c932e53720ae1960ce3f231a98df50a1529d0ad","modified":1547437749369},{"_id":"public/js/src/dynamic_bg.js","hash":"1256018865f3c8a9cee5dbd2c3db6c9d72cd47e0","modified":1547437749369},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1547437749369},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1547437749369},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1547437749369},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1547437749369},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1547437749369},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1547437749369},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1547437749369},{"_id":"public/lib/canvas-nest/canvas-nest-nomobile.min.js","hash":"956eada198babd00f028e8908767cb158926c3f3","modified":1547437749369},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1547437749369},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1547437749369},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1547437749369},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1547437749369},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1547437749369},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1547437749370},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1547437749370},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1547437749370},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1547437749370},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1547437749370},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1547437749370},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1547437749370},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1547437749370},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1547437749370},{"_id":"public/lib/three/package.json","hash":"d64e9f4ce441b50e48aa0993e190481223665989","modified":1547437749370},{"_id":"public/lib/three/gulpfile.js","hash":"edd1868be72fde796b0b1f3a7a0316b3c896962a","modified":1547437749370},{"_id":"public/js/src/schemes/pisces.js","hash":"72037e8c4202a73b0c6ff7d81b57cd349e836837","modified":1547437749370},{"_id":"public/lib/three/src/canvas_lines.js","hash":"650310ff6783671f8ceccf01f840b20d9c87b491","modified":1547437749370},{"_id":"public/lib/three/src/canvas_sphere.js","hash":"7614790c67d3e79e3390fe688f6b01afad7e3bb1","modified":1547437749370},{"_id":"public/lib/three/src/three-waves.js","hash":"e98e442f14920e9fb8691846dca3a2225d403048","modified":1547437749370},{"_id":"public/static/api/css/select_share.css","hash":"d0259abdb410193cf761e42bffaa51e70327a0cd","modified":1547437749370},{"_id":"public/static/api/css/like.css","hash":"2024d58206df01b858c38f07957f928b44e14cb3","modified":1547437749370},{"_id":"public/static/api/css/share_style0_16.css","hash":"090e77e9e6e9b8ee0d73a233cbe46499de935bdd","modified":1547437749370},{"_id":"public/static/api/css/share_style0_24.css","hash":"7d1f9f32b80f91001f4f951aa045180cde22d82e","modified":1547437749370},{"_id":"public/static/api/css/share_popup.css","hash":"338ba2b30ef8ce0c84cd36b37d7f8482996291dc","modified":1547437749370},{"_id":"public/static/api/css/share_style1_24.css","hash":"3ee5f745c863b4f68299fe5dc125f913ca619c07","modified":1547437749370},{"_id":"public/static/api/css/share_style1_32.css","hash":"626d67a4c0bb72a152e90d25dbf281c0c35a2140","modified":1547437749371},{"_id":"public/static/api/css/share_style0_32.css","hash":"7c2d12ea532c8a55c102b649bb23ef5bf53b3ed3","modified":1547437749371},{"_id":"public/static/api/css/share_style1_16.css","hash":"aeb4e9fa96cfa0167481e1f4007079dc3f3c6c27","modified":1547437749371},{"_id":"public/static/api/css/share_style2_16.css","hash":"572c8e856988e463eb865f38d33ba003cc20d083","modified":1547437749371},{"_id":"public/static/api/css/share_style2.css","hash":"1ad451187cde8a74843fd398b924ca0ac911e9be","modified":1547437749371},{"_id":"public/static/api/css/share_style2_24.css","hash":"917d963d3be111064cbb1d122963da91ee3724a0","modified":1547437749371},{"_id":"public/static/api/css/weixin_popup.css","hash":"5e6c5084bfd16051de5776c2e136a5462b08a32c","modified":1547437749371},{"_id":"public/static/api/css/share_style4.css","hash":"0a9e2ed712a5ef5c4699c038cd001a0d688a0fdf","modified":1547437749371},{"_id":"public/static/api/css/share_style2_32.css","hash":"3657bbc4b5bbc66ebca4906ee0a1cbf9f98be883","modified":1547437749371},{"_id":"public/static/api/js/trans/data.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547437749371},{"_id":"public/static/api/css/slide_share.css","hash":"3898feaf45559b039f885bee8f9e831f48adb20c","modified":1547437749371},{"_id":"public/static/api/js/trans/logger.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1547437749371},{"_id":"public/static/api/js/base/class.js","hash":"db02960fb51f69a0d50dc9ed626a998be3884706","modified":1547437749371},{"_id":"public/static/api/js/component/animate.js","hash":"17a3495543db66e4eb56a81a93edf3e41ca8cc31","modified":1547437749371},{"_id":"public/static/api/js/component/anticheat.js","hash":"ee6b11a7ed39ae67c1c2aeeef96b4a0f40f8083c","modified":1547437749371},{"_id":"public/static/api/js/component/pop_dialog.js","hash":"4417d2fa9ad8ff6c79a2352ef07e9d10a1313ee0","modified":1547437749371},{"_id":"public/static/api/js/component/comm_tools.js","hash":"28d096a61f54e64bdbc32d172ae20e7f6e9656a7","modified":1547437749371},{"_id":"public/static/api/js/component/pop_popup.js","hash":"aface5a8c3f71e9e024bf0df5b361ed8f5452f50","modified":1547437749371},{"_id":"public/static/api/js/conf/const.js","hash":"7da7df37d0f3d3e1977a8d107c98a3c1ecdb39c2","modified":1547437749371},{"_id":"public/static/api/js/component/pop_base.js","hash":"eae6e120c149a21caa2883c533ccc40bc07fda51","modified":1547437749371},{"_id":"public/static/api/js/component/partners.js","hash":"a4c275ffb4d3557280211e6bf0573485b397ffd8","modified":1547437749371},{"_id":"public/static/api/js/conf/define.js","hash":"ee0afad836be1553980501855752ccd79fe1fe0e","modified":1547437749371},{"_id":"public/static/api/js/share/api_base.js","hash":"cbacd664451f80955c2ff4caccd4b9110062c714","modified":1547437749371},{"_id":"public/static/api/js/share/image_api.js","hash":"43a93415f2a5dd34760042c2bcd9f4692feecb5d","modified":1547437749371},{"_id":"public/static/api/js/share/combine_api.js","hash":"7ad3c5396bf20704e87f98ebe118034ed3cc7b22","modified":1547437749371},{"_id":"public/static/api/js/share/like_api.js","hash":"4034b10f8f34367c6db47ae092e5b4107c2fb8b4","modified":1547437749371},{"_id":"public/static/api/js/share/likeshare.js","hash":"2d14ab97cc3dc294c51c0d6814f4ea45f4b4e312","modified":1547437749371},{"_id":"public/static/api/js/share/select_api.js","hash":"bf259a7912ee6124d741dbb5e45cab40bfa45e90","modified":1547437749371},{"_id":"public/static/api/js/trans/trans.js","hash":"cb82afecdbede8d5a00b6c5ea9595187b6408376","modified":1547437749371},{"_id":"public/static/api/js/share/share_api.js","hash":"f7b86d0cc063f692a73a174d04e77cbe3c5facc7","modified":1547437749371},{"_id":"public/static/api/js/share/slide_api.js","hash":"c317e3f7fec13d89178e475f26a689bb94e5aa76","modified":1547437749371},{"_id":"public/static/api/js/trans/trans_bdxc.js","hash":"a512ebfca0319ab38d06b7b0fb74bcdc942dc46e","modified":1547437749371},{"_id":"public/static/api/js/trans/trans_bdysc.js","hash":"28bb985a03b6b1da5a89a143331932a12126c9c3","modified":1547437749371},{"_id":"public/static/api/js/trans/trans_weixin.js","hash":"e68e9bc91ee6fbcd64ac788463870f01602a8562","modified":1547437749372},{"_id":"public/static/api/js/view/image_view.js","hash":"bb66297a5bd2c7dd931b9145f5d4a616876f3373","modified":1547437749372},{"_id":"public/static/api/js/view/like_view.js","hash":"c1b6a3f3f89ac734c6da284c1ba1dde2ada4e250","modified":1547437749372},{"_id":"public/static/api/js/view/select_view.js","hash":"2611efec1d31d85609feea0c57e14d3f817a6220","modified":1547437749372},{"_id":"public/static/api/js/view/slide_view.js","hash":"973ded5cd15eb119e79ffd9326af3a44167b26bd","modified":1547437749372},{"_id":"public/static/api/js/view/share_view.js","hash":"f445ce9cbbcf887da5e248b1cfadc03ab7df76d0","modified":1547437749372},{"_id":"public/static/api/js/component/pop_popup_slide.js","hash":"45a72013fba95249ca965fd4d98f3bbde7a7098a","modified":1547437749372},{"_id":"public/static/api/js/start/router.js","hash":"27bc546a9c796b15e59442aaf09ae645a2ed4c74","modified":1547437749372},{"_id":"public/static/api/js/view/view_base.js","hash":"b3fd7dafde05d63af3dfe9e0a59f9367f81402c5","modified":1547437749372},{"_id":"public/404.html","hash":"d529bf1951dbf14f6ee5eb9399a34d80e414bd63","modified":1547437749372},{"_id":"public/lib/algolia-instant-search/README.html","hash":"ccd715fd355d7ac872813c770a3686a4493fb413","modified":1547437749372},{"_id":"public/lib/canvas-nest/README.html","hash":"dac952f5cf0e6eedfb8d33bab710356798bb0ca5","modified":1547437749372},{"_id":"public/lib/canvas-ribbon/README.html","hash":"712f095b72b24b2bafa3548404bb4062c7859304","modified":1547437749372},{"_id":"public/lib/pace/README.html","hash":"58f2105ada5cc52dff5aabcecb92569ee84493a0","modified":1547437749372},{"_id":"public/lib/three/README.html","hash":"b9ead5e5ec2847bc3ae33c34e5d1a2c39dd747e9","modified":1547437749372},{"_id":"public/css/main.css","hash":"6e68ae772443457a582627a55fba4b0f442ba3d4","modified":1547437749372},{"_id":"public/images/image.png","hash":"dc46216225a79edf17b0b3ebc90732c3f32e2faa","modified":1547437749372},{"_id":"public/images/image2.png","hash":"dc46216225a79edf17b0b3ebc90732c3f32e2faa","modified":1547437749372},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_01.png","hash":"3d0e745f3e560071ee08beeecde186e5ea35d99e","modified":1547437749372},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"001e6cc7c8f14dd9c544942410cea2dda5fe5387","modified":1547437749372},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_04.png","hash":"f764d594841905db8b2998dd61c329866125ad97","modified":1547437749372},{"_id":"public/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1547437749384},{"_id":"public/js/src/utils.js","hash":"28a79d317b7f4012917a54cac770551596bf6241","modified":1547437749384},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1547437749385},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1547437749385},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1547437749385},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1547437749385},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1547437749385},{"_id":"public/static/api/css/imgshare.css","hash":"c3624a2dde649ed28b2e5d1f050fd971fbaf71a0","modified":1547437749385},{"_id":"public/static/api/js/component/qrcode.js","hash":"2e3cc4cc5545556dd97ab899ff32d3ab7ccee808","modified":1547437749385},{"_id":"public/assets/algolia/algoliasearch.js","hash":"f0e3215b0553fcc11715d655e35cbc8dea9bae85","modified":1547437749385},{"_id":"public/live2dw/assets/moc/shizuku.1024/texture_02.png","hash":"055eb2da9c13e9116be93a1e60c0ea2b660af864","modified":1547437749385},{"_id":"public/live2dw/assets/snd/pinchOut_00.mp3","hash":"0654f38f6e9fd623eaf8be11b5d58c9d12991949","modified":1547437749385},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"333fed4c256c7081e07c7844c097b7970b45b248","modified":1547437749393},{"_id":"public/lib/three/three-waves.min.js","hash":"704e860183acbaaf8de1be65fe5c958e8105f4bf","modified":1547437749393},{"_id":"public/lib/three/canvas_lines.min.js","hash":"97f0e67570574dc8597c5819970508d4e7f7af25","modified":1547437749393},{"_id":"public/lib/three/lib/Projector.js","hash":"1ad16e96cea2a8a9155bb429c83ef9bdd341ce99","modified":1547437749393},{"_id":"public/static/api/js/share.js","hash":"73bdb33580128e6c79a726a25f98092c0faa369d","modified":1547437749393},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1547437749393},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"7d3a9c937317b9c15f2c3a872f0e26607a729458","modified":1547437749393},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1547437749401},{"_id":"public/lib/three/lib/CanvasRenderer.js","hash":"cf8e1ce6e884023ad0d692cf30f399862407fb40","modified":1547437749401},{"_id":"public/images/image1.png","hash":"80504947f435025f3b84bc09acf904fa539563ae","modified":1547437749401},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"5e7669733ecd0b1bc3881d2cf7fcc01e2990a07d","modified":1547437749402},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1547437749409},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1547437749409},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1547437749409},{"_id":"public/images/alipay.jpg","hash":"6ec40a6c19d318c766ed1921abe7032073867b9a","modified":1547437749424},{"_id":"public/images/AVL-Tree-2.gif","hash":"5f3223aa0236256cb7c0821040517bda07a80009","modified":1547437749433},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1547437749452},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"09521263ecc625a246b3406c385300e99e966a2e","modified":1547437749455},{"_id":"public/static/api/js/base/tangram.js","hash":"e1952e27f6dc3d6339128cec157acef8cc0a775f","modified":1547437749463},{"_id":"public/live2dw/assets/moc/shizuku.moc","hash":"c2670a0f75830edc89d7fe6d074de4ee67e8dc5d","modified":1547437749464},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1547437749468},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1547437749481},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1547437749485},{"_id":"public/images/back_ground.jpg","hash":"023115d9f66eacab74c73ecb2fa8119e25ea2d33","modified":1547437749486}],"Category":[{"name":"Programming","_id":"cjqvsh8w70005rmtuw3t5944m"},{"name":"Computer","_id":"cjqvsh8wl000rrmtuqif97c2z"},{"name":"miscellanea","_id":"cjqvsh8wo0011rmtu3eh0cglb"},{"name":"Raspberry Pi","parent":"cjqvsh8wl000rrmtuqif97c2z","_id":"cjqvsh8wq001armtum8medifd"},{"name":"路由器","_id":"cjqvsh8wt001irmtu4nm31l4d"},{"name":"Hexo","_id":"cjqvsh8wv001prmtuv871fut3"},{"name":"黑苹果","_id":"cjqvsh8wy001wrmtu271mmdf5"},{"name":"Android Build","_id":"cjqvsh8wz0022rmtun0h6sgo8"},{"name":"Android App","_id":"cjqvsh8x00029rmtutap71fde"},{"name":"Raspi","_id":"cjqvsh8x2002krmtuby2wg4hj"},{"name":"java","_id":"cjqvsh9250049rmtuyex3sfrh"}],"Data":[],"Page":[{"layout":"false","_content":"google-site-verification: google2ff74b080d9e3f60.html","source":"google2ff74b080d9e3f60.html","raw":"---\nlayout: false\n---\ngoogle-site-verification: google2ff74b080d9e3f60.html","date":"2018-12-01T04:52:00.486Z","updated":"2018-11-26T03:32:37.623Z","path":"google2ff74b080d9e3f60.html","title":"","comments":1,"_id":"cjqvsh8uv0000rmtuhl8aoogx","content":"google-site-verification: google2ff74b080d9e3f60.html","site":{"data":{}},"excerpt":"","more":"google-site-verification: google2ff74b080d9e3f60.html"},{"title":"关于我","date":"2018-09-19T09:30:41.000Z","comments":0,"_content":"","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2018-09-19 17:30:41\ncomments: false\n---\n","updated":"2018-11-26T03:32:37.623Z","path":"about/index.html","layout":"page","_id":"cjqvsh8w40002rmtuto03osqh","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"所有分类","date":"2018-09-19T09:27:13.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 所有分类\ndate: 2018-09-19 17:27:13\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-11-26T03:32:37.623Z","path":"categories/index.html","layout":"page","_id":"cjqvsh8w60004rmtu16l81cjf","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签页","date":"2018-09-19T09:30:00.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签页\ndate: 2018-09-19 17:30:00\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-11-26T03:32:37.662Z","path":"tags/index.html","layout":"page","_id":"cjqvsh9210046rmtu11cvy2bz","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Python 入门","date":"2018-11-26T03:32:37.618Z","author":"OCD","_content":"Python - A powerful language\n\n<!-- more -->\n### 1.1. A simple program\nHello, world\n```python\n#!/usr/bin/env python3\nprint(\"Hello\", \"World\")\n```\n\n### 1.2. 数据类型\n`int` and `str`\n\n### 1.2.1. str Usage\n```python\nprint(name.title())                         # 首字母大写\nprint(name.upper())                         # 全部大写\nprint(name.lower())                         # 全部小写\nprint(favourite_language.rstrip())          # 去处末尾空格\nprint(favourite_language.lstrip())          # 去处开头空格\nprint(favourite_language.strip())           # 去除所有空格\n```\n\n### 1.2.2. int Usage\n\\+ - * / 运算\n\n\n","source":"_posts/2017-11-11-new-to-python.md","raw":"---\ntitle: Python 入门\ndate: 2017-11-11 1\nauthor: \"OCD\"\ncategory:\n    - Programming\ntags: \n    - Python\n    - Develop\n---\nPython - A powerful language\n\n<!-- more -->\n### 1.1. A simple program\nHello, world\n```python\n#!/usr/bin/env python3\nprint(\"Hello\", \"World\")\n```\n\n### 1.2. 数据类型\n`int` and `str`\n\n### 1.2.1. str Usage\n```python\nprint(name.title())                         # 首字母大写\nprint(name.upper())                         # 全部大写\nprint(name.lower())                         # 全部小写\nprint(favourite_language.rstrip())          # 去处末尾空格\nprint(favourite_language.lstrip())          # 去处开头空格\nprint(favourite_language.strip())           # 去除所有空格\n```\n\n### 1.2.2. int Usage\n\\+ - * / 运算\n\n\n","slug":"2017-11-11-new-to-python","published":1,"updated":"2018-11-26T03:32:37.618Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8w10001rmtuixtf8clr","content":"<p>Python - A powerful language</p>\n<a id=\"more\"></a>\n<h3 id=\"1-1-A-simple-program\"><a href=\"#1-1-A-simple-program\" class=\"headerlink\" title=\"1.1. A simple program\"></a>1.1. A simple program</h3><p>Hello, world<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python3</span></span><br><span class=\"line\">print(<span class=\"string\">\"Hello\"</span>, <span class=\"string\">\"World\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"1-2-数据类型\"><a href=\"#1-2-数据类型\" class=\"headerlink\" title=\"1.2. 数据类型\"></a>1.2. 数据类型</h3><p><code>int</code> and <code>str</code></p>\n<h3 id=\"1-2-1-str-Usage\"><a href=\"#1-2-1-str-Usage\" class=\"headerlink\" title=\"1.2.1. str Usage\"></a>1.2.1. str Usage</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(name.title())                         <span class=\"comment\"># 首字母大写</span></span><br><span class=\"line\">print(name.upper())                         <span class=\"comment\"># 全部大写</span></span><br><span class=\"line\">print(name.lower())                         <span class=\"comment\"># 全部小写</span></span><br><span class=\"line\">print(favourite_language.rstrip())          <span class=\"comment\"># 去处末尾空格</span></span><br><span class=\"line\">print(favourite_language.lstrip())          <span class=\"comment\"># 去处开头空格</span></span><br><span class=\"line\">print(favourite_language.strip())           <span class=\"comment\"># 去除所有空格</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-2-int-Usage\"><a href=\"#1-2-2-int-Usage\" class=\"headerlink\" title=\"1.2.2. int Usage\"></a>1.2.2. int Usage</h3><p>+ - * / 运算</p>\n","site":{"data":{}},"excerpt":"<p>Python - A powerful language</p>","more":"<h3 id=\"1-1-A-simple-program\"><a href=\"#1-1-A-simple-program\" class=\"headerlink\" title=\"1.1. A simple program\"></a>1.1. A simple program</h3><p>Hello, world<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python3</span></span><br><span class=\"line\">print(<span class=\"string\">\"Hello\"</span>, <span class=\"string\">\"World\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"1-2-数据类型\"><a href=\"#1-2-数据类型\" class=\"headerlink\" title=\"1.2. 数据类型\"></a>1.2. 数据类型</h3><p><code>int</code> and <code>str</code></p>\n<h3 id=\"1-2-1-str-Usage\"><a href=\"#1-2-1-str-Usage\" class=\"headerlink\" title=\"1.2.1. str Usage\"></a>1.2.1. str Usage</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(name.title())                         <span class=\"comment\"># 首字母大写</span></span><br><span class=\"line\">print(name.upper())                         <span class=\"comment\"># 全部大写</span></span><br><span class=\"line\">print(name.lower())                         <span class=\"comment\"># 全部小写</span></span><br><span class=\"line\">print(favourite_language.rstrip())          <span class=\"comment\"># 去处末尾空格</span></span><br><span class=\"line\">print(favourite_language.lstrip())          <span class=\"comment\"># 去处开头空格</span></span><br><span class=\"line\">print(favourite_language.strip())           <span class=\"comment\"># 去除所有空格</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-2-int-Usage\"><a href=\"#1-2-2-int-Usage\" class=\"headerlink\" title=\"1.2.2. int Usage\"></a>1.2.2. int Usage</h3><p>+ - * / 运算</p>"},{"title":"If Statement","date":"2018-11-26T03:32:37.618Z","author":"OCD","_content":" An class for `if` STATEMENT\n \n<!-- more -->\n\n## 3.1 An simple example\n_cars.py_\n```python\ncars = ['audi', 'bmw', 'subaru', 'toyota']\n\nfor car in cars:\n    if car == 'bmw':\n        print(car.upper())\n    else:\n        print(car.title())\n```\n###### Output: \n`Audi`\n\n`BMW`\n\n`Subaru`\n\n`Toyota`\n\n## 3.2 条件测试\n### 3.2.1 检查是否相等\n`car == 'bmw'` will output like `True` or `False`\nThe following code will always be true\n```python\ncar = 'audi'\ncar == 'audi'\n```\n###### Output: `True`\n\n#### 3.2.1.1 检查是否相等时不考虑大小写\n__Use `lower()` or `upper`__\n\nE.g:\n```python\ncar = 'Audi'\nprint(car.lower() == 'audi')\nprint(car)\n```\n###### Output: \n`True`\n`Audi`\n--> 操作不影响存储在变量 `car` 中的值\n\n### 3.2.2 检查是否不相等\n__Use `!=`__\n\nE.g: toppings.py\n```python\nrequested_topping = 'mushrooms'\n\nif requested_topping != 'anchovies':\n    print(\"Hold the anchovies!\")\n```\n###### Output: `Hold the anchovies!`\n\n### 3.2.3 比较数字\n__also use `==` and `!=`__\n\nE.g: magic_number.py\n```python\nanswer = 17\n\nif answer != 42:\n    print(\"This is not the correct answer. please try again!\")\n```\n###### Output: `This is not the correct answer. please try again!`\n\n### 3.2.4 检查多个条件\n__Use `and` and `or`__\n\n#### 3.2.4.1 使用 `and` 检查多个条件\nE.g:\n```python\nage_0 = 22\nage_1 = 18\nprint(age_0 >= 21 and age_1 >= 21)  # False\nage_1 = 22\nprint(age_0 >= 21 and age_1 >= 21)  # True\n```\n#### 3.2.4.2 使用 `or` 检查多个条件\n__同上__\n\n### 3.2.5 检查特定值是否在表中\n__使用关键词 `in`__\n\nE.g:\n```python\nrequested_toppings = ['mushrooms', 'onions', 'pineapple']\nprint('mushrooms' in requested_toppings)    # True\nprint('pepperoni' in requested_toppings)    # false\n```\n\n### 3.2.6 检查特定元素不在列表中\n__使用关键字 `not in`__\n\nE.g: banned_users.py\n```python\nbanned_users = ['andrew', 'carolina', david']\nuser = 'marie'\n\nif user not in banned_users:\n    print(user.title() + \", you can post a response if you wish.\")\n```\n###### Output:\n`Marie, you can post a response if you wish`\n\n### 3.2.7 bool expression\n__条件测试的别名, 要么为 `True` 要么为 `False`__\n\nE.g:\n```python\ngame_active = True\ncan_edit = False\n```\n\n## 3.3 If语句\n### 3.3.1 简单的 if 语句\n__一个测试一个操作__\n\nE.g:\n```python\nif condition_test:\n    do something\n```\n```python\nage = 19\nif age >= 18:\n    print(\"You are old enough to vote!\")\n    print(\"Have you registered to vote yet?\")\n```\nthis will print two lines\n###### Output:\n`You are old enough to vote!`\n`Have you registered to vote yet?`\n\nif age is less than 18, the program will give no output.\n\n### 3.3.2 if-else 语句\n__`else` 在if不成立时执行__\n\nE.g:\n```python\nage = 17\nif age >= 18:\n    print(\"You are old enough to vote\")\n    print(\"Have you registered to vote yet?\")\nelse:\n    print(\"Sorry, you are too young to vote.\")\n    print(\"Please register to cote as soon as you turn 18!\")\n```\n###### Output:\n`Sorry, you are too young to vote.`\n`Please register to cote as soon as you turn 18!`\n\n### 3.3.3 if-elif-else 结构\n__检查超过两个条件的情形__\n\n```python\nage = 12\n\nif age < 4:\n    print(\"Your admission cost is $0\")\nelif age < 18\n    print(\"Your admission cost is $5\")\nelse \n    print(\"Your admission cost is $10\")\n```\n###### Output: `Your admission cost is $5`\n\n### 3.3.4 使用多个 `elif` 代码块\n\n### 3.3.5 省略 `else` 代码块\n\n### 3.3.6 测试多个条件\n\n## 3.4 使用 `if` 语句处理列表\n\n### 3.4.1 检查特殊元素\nE.g: toppings.py\n```python\nrequested_toppings = ['mushrooms', 'green_peppers', extra cheese']\n\nfor requested_topping in requested_toppings:\n    print(\"Adding \" + requested_topping + '.')\n    \nprint(\"\\nFinished making your pizza\")\n```\n###### Output\n`Adding mushrooms.`\n`Adding green_peppers.`\n`Adding extra cheese.`\n\n`Finished making your pizza`\n\nA polished version\n```python\nrequested_toppings = ['mushrooms', 'green_peppers', extra cheese']\n\nfor requested_topping in requested_toppings:\n    if requested_topping == 'green_peppers':\n        print(“Sorry we are out of green peppers right now.\")\n    else: \n        print(\"Adding \" + requested_topping + '.')\n    \nprint(\"\\nFinished making your pizza\")\n```\n###### Output:\n`Adding mushrooms`\n`Sorry we are out of green peppers right now.`\n`Adding extra cheese`\n\n`Finished making your pizza`\n\n### 3.4.2 确定列表不是空的\n__使用 `for`__\n\nE.g: \n```python\nrequested_toppings = []\n\nif requested_toppings:\n    for requested_topping in requested_toppings:\n        print(\"Adding \" + requested_topping + '.')\n    print(\"Finished making your pizza\")\nelse \n    print(\"Are you sure you want a plain pizza?\")\n```\n\n###### Output:\n`Are you sure you want a plain pizza?`\n\n### 3.4.3 使用多个列表\nSkipped\n\n\n\n\n\n\n","source":"_posts/2017-11-11-if-statements.md","raw":"---\ntitle: If Statement\ndate: 2017-11-11 2\nauthor: \"OCD\"\ncategory:\n    - Programming\ntags: \n    - Python\n    - Develop\n---\n An class for `if` STATEMENT\n \n<!-- more -->\n\n## 3.1 An simple example\n_cars.py_\n```python\ncars = ['audi', 'bmw', 'subaru', 'toyota']\n\nfor car in cars:\n    if car == 'bmw':\n        print(car.upper())\n    else:\n        print(car.title())\n```\n###### Output: \n`Audi`\n\n`BMW`\n\n`Subaru`\n\n`Toyota`\n\n## 3.2 条件测试\n### 3.2.1 检查是否相等\n`car == 'bmw'` will output like `True` or `False`\nThe following code will always be true\n```python\ncar = 'audi'\ncar == 'audi'\n```\n###### Output: `True`\n\n#### 3.2.1.1 检查是否相等时不考虑大小写\n__Use `lower()` or `upper`__\n\nE.g:\n```python\ncar = 'Audi'\nprint(car.lower() == 'audi')\nprint(car)\n```\n###### Output: \n`True`\n`Audi`\n--> 操作不影响存储在变量 `car` 中的值\n\n### 3.2.2 检查是否不相等\n__Use `!=`__\n\nE.g: toppings.py\n```python\nrequested_topping = 'mushrooms'\n\nif requested_topping != 'anchovies':\n    print(\"Hold the anchovies!\")\n```\n###### Output: `Hold the anchovies!`\n\n### 3.2.3 比较数字\n__also use `==` and `!=`__\n\nE.g: magic_number.py\n```python\nanswer = 17\n\nif answer != 42:\n    print(\"This is not the correct answer. please try again!\")\n```\n###### Output: `This is not the correct answer. please try again!`\n\n### 3.2.4 检查多个条件\n__Use `and` and `or`__\n\n#### 3.2.4.1 使用 `and` 检查多个条件\nE.g:\n```python\nage_0 = 22\nage_1 = 18\nprint(age_0 >= 21 and age_1 >= 21)  # False\nage_1 = 22\nprint(age_0 >= 21 and age_1 >= 21)  # True\n```\n#### 3.2.4.2 使用 `or` 检查多个条件\n__同上__\n\n### 3.2.5 检查特定值是否在表中\n__使用关键词 `in`__\n\nE.g:\n```python\nrequested_toppings = ['mushrooms', 'onions', 'pineapple']\nprint('mushrooms' in requested_toppings)    # True\nprint('pepperoni' in requested_toppings)    # false\n```\n\n### 3.2.6 检查特定元素不在列表中\n__使用关键字 `not in`__\n\nE.g: banned_users.py\n```python\nbanned_users = ['andrew', 'carolina', david']\nuser = 'marie'\n\nif user not in banned_users:\n    print(user.title() + \", you can post a response if you wish.\")\n```\n###### Output:\n`Marie, you can post a response if you wish`\n\n### 3.2.7 bool expression\n__条件测试的别名, 要么为 `True` 要么为 `False`__\n\nE.g:\n```python\ngame_active = True\ncan_edit = False\n```\n\n## 3.3 If语句\n### 3.3.1 简单的 if 语句\n__一个测试一个操作__\n\nE.g:\n```python\nif condition_test:\n    do something\n```\n```python\nage = 19\nif age >= 18:\n    print(\"You are old enough to vote!\")\n    print(\"Have you registered to vote yet?\")\n```\nthis will print two lines\n###### Output:\n`You are old enough to vote!`\n`Have you registered to vote yet?`\n\nif age is less than 18, the program will give no output.\n\n### 3.3.2 if-else 语句\n__`else` 在if不成立时执行__\n\nE.g:\n```python\nage = 17\nif age >= 18:\n    print(\"You are old enough to vote\")\n    print(\"Have you registered to vote yet?\")\nelse:\n    print(\"Sorry, you are too young to vote.\")\n    print(\"Please register to cote as soon as you turn 18!\")\n```\n###### Output:\n`Sorry, you are too young to vote.`\n`Please register to cote as soon as you turn 18!`\n\n### 3.3.3 if-elif-else 结构\n__检查超过两个条件的情形__\n\n```python\nage = 12\n\nif age < 4:\n    print(\"Your admission cost is $0\")\nelif age < 18\n    print(\"Your admission cost is $5\")\nelse \n    print(\"Your admission cost is $10\")\n```\n###### Output: `Your admission cost is $5`\n\n### 3.3.4 使用多个 `elif` 代码块\n\n### 3.3.5 省略 `else` 代码块\n\n### 3.3.6 测试多个条件\n\n## 3.4 使用 `if` 语句处理列表\n\n### 3.4.1 检查特殊元素\nE.g: toppings.py\n```python\nrequested_toppings = ['mushrooms', 'green_peppers', extra cheese']\n\nfor requested_topping in requested_toppings:\n    print(\"Adding \" + requested_topping + '.')\n    \nprint(\"\\nFinished making your pizza\")\n```\n###### Output\n`Adding mushrooms.`\n`Adding green_peppers.`\n`Adding extra cheese.`\n\n`Finished making your pizza`\n\nA polished version\n```python\nrequested_toppings = ['mushrooms', 'green_peppers', extra cheese']\n\nfor requested_topping in requested_toppings:\n    if requested_topping == 'green_peppers':\n        print(“Sorry we are out of green peppers right now.\")\n    else: \n        print(\"Adding \" + requested_topping + '.')\n    \nprint(\"\\nFinished making your pizza\")\n```\n###### Output:\n`Adding mushrooms`\n`Sorry we are out of green peppers right now.`\n`Adding extra cheese`\n\n`Finished making your pizza`\n\n### 3.4.2 确定列表不是空的\n__使用 `for`__\n\nE.g: \n```python\nrequested_toppings = []\n\nif requested_toppings:\n    for requested_topping in requested_toppings:\n        print(\"Adding \" + requested_topping + '.')\n    print(\"Finished making your pizza\")\nelse \n    print(\"Are you sure you want a plain pizza?\")\n```\n\n###### Output:\n`Are you sure you want a plain pizza?`\n\n### 3.4.3 使用多个列表\nSkipped\n\n\n\n\n\n\n","slug":"2017-11-11-if-statements","published":1,"updated":"2018-11-26T03:32:37.618Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8w50003rmtu6aq13hoq","content":"<p> An class for <code>if</code> STATEMENT</p>\n<a id=\"more\"></a>\n<h2 id=\"3-1-An-simple-example\"><a href=\"#3-1-An-simple-example\" class=\"headerlink\" title=\"3.1 An simple example\"></a>3.1 An simple example</h2><p><em>cars.py</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cars = [<span class=\"string\">'audi'</span>, <span class=\"string\">'bmw'</span>, <span class=\"string\">'subaru'</span>, <span class=\"string\">'toyota'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> car <span class=\"keyword\">in</span> cars:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> car == <span class=\"string\">'bmw'</span>:</span><br><span class=\"line\">        print(car.upper())</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(car.title())</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>Audi</code></p>\n<p><code>BMW</code></p>\n<p><code>Subaru</code></p>\n<p><code>Toyota</code></p>\n<h2 id=\"3-2-条件测试\"><a href=\"#3-2-条件测试\" class=\"headerlink\" title=\"3.2 条件测试\"></a>3.2 条件测试</h2><h3 id=\"3-2-1-检查是否相等\"><a href=\"#3-2-1-检查是否相等\" class=\"headerlink\" title=\"3.2.1 检查是否相等\"></a>3.2.1 检查是否相等</h3><p><code>car == &#39;bmw&#39;</code> will output like <code>True</code> or <code>False</code><br>The following code will always be true<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">car = <span class=\"string\">'audi'</span></span><br><span class=\"line\">car == <span class=\"string\">'audi'</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-True\"><a href=\"#Output-True\" class=\"headerlink\" title=\"Output: True\"></a>Output: <code>True</code></h6><h4 id=\"3-2-1-1-检查是否相等时不考虑大小写\"><a href=\"#3-2-1-1-检查是否相等时不考虑大小写\" class=\"headerlink\" title=\"3.2.1.1 检查是否相等时不考虑大小写\"></a>3.2.1.1 检查是否相等时不考虑大小写</h4><p><strong>Use <code>lower()</code> or <code>upper</code></strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">car = <span class=\"string\">'Audi'</span></span><br><span class=\"line\">print(car.lower() == <span class=\"string\">'audi'</span>)</span><br><span class=\"line\">print(car)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>True</code><br><code>Audi</code><br>–&gt; 操作不影响存储在变量 <code>car</code> 中的值</p>\n<h3 id=\"3-2-2-检查是否不相等\"><a href=\"#3-2-2-检查是否不相等\" class=\"headerlink\" title=\"3.2.2 检查是否不相等\"></a>3.2.2 检查是否不相等</h3><p><strong>Use <code>!=</code></strong></p>\n<p>E.g: toppings.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requested_topping = <span class=\"string\">'mushrooms'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> requested_topping != <span class=\"string\">'anchovies'</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"Hold the anchovies!\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-Hold-the-anchovies\"><a href=\"#Output-Hold-the-anchovies\" class=\"headerlink\" title=\"Output: Hold the anchovies!\"></a>Output: <code>Hold the anchovies!</code></h6><h3 id=\"3-2-3-比较数字\"><a href=\"#3-2-3-比较数字\" class=\"headerlink\" title=\"3.2.3 比较数字\"></a>3.2.3 比较数字</h3><p><strong>also use <code>==</code> and <code>!=</code></strong></p>\n<p>E.g: magic_number.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">answer = <span class=\"number\">17</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> answer != <span class=\"number\">42</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"This is not the correct answer. please try again!\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-This-is-not-the-correct-answer-please-try-again\"><a href=\"#Output-This-is-not-the-correct-answer-please-try-again\" class=\"headerlink\" title=\"Output: This is not the correct answer. please try again!\"></a>Output: <code>This is not the correct answer. please try again!</code></h6><h3 id=\"3-2-4-检查多个条件\"><a href=\"#3-2-4-检查多个条件\" class=\"headerlink\" title=\"3.2.4 检查多个条件\"></a>3.2.4 检查多个条件</h3><p><strong>Use <code>and</code> and <code>or</code></strong></p>\n<h4 id=\"3-2-4-1-使用-and-检查多个条件\"><a href=\"#3-2-4-1-使用-and-检查多个条件\" class=\"headerlink\" title=\"3.2.4.1 使用 and 检查多个条件\"></a>3.2.4.1 使用 <code>and</code> 检查多个条件</h4><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age_0 = <span class=\"number\">22</span></span><br><span class=\"line\">age_1 = <span class=\"number\">18</span></span><br><span class=\"line\">print(age_0 &gt;= <span class=\"number\">21</span> <span class=\"keyword\">and</span> age_1 &gt;= <span class=\"number\">21</span>)  <span class=\"comment\"># False</span></span><br><span class=\"line\">age_1 = <span class=\"number\">22</span></span><br><span class=\"line\">print(age_0 &gt;= <span class=\"number\">21</span> <span class=\"keyword\">and</span> age_1 &gt;= <span class=\"number\">21</span>)  <span class=\"comment\"># True</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3-2-4-2-使用-or-检查多个条件\"><a href=\"#3-2-4-2-使用-or-检查多个条件\" class=\"headerlink\" title=\"3.2.4.2 使用 or 检查多个条件\"></a>3.2.4.2 使用 <code>or</code> 检查多个条件</h4><p><strong>同上</strong></p>\n<h3 id=\"3-2-5-检查特定值是否在表中\"><a href=\"#3-2-5-检查特定值是否在表中\" class=\"headerlink\" title=\"3.2.5 检查特定值是否在表中\"></a>3.2.5 检查特定值是否在表中</h3><p><strong>使用关键词 <code>in</code></strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requested_toppings = [<span class=\"string\">'mushrooms'</span>, <span class=\"string\">'onions'</span>, <span class=\"string\">'pineapple'</span>]</span><br><span class=\"line\">print(<span class=\"string\">'mushrooms'</span> <span class=\"keyword\">in</span> requested_toppings)    <span class=\"comment\"># True</span></span><br><span class=\"line\">print(<span class=\"string\">'pepperoni'</span> <span class=\"keyword\">in</span> requested_toppings)    <span class=\"comment\"># false</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-2-6-检查特定元素不在列表中\"><a href=\"#3-2-6-检查特定元素不在列表中\" class=\"headerlink\" title=\"3.2.6 检查特定元素不在列表中\"></a>3.2.6 检查特定元素不在列表中</h3><p><strong>使用关键字 <code>not in</code></strong></p>\n<p>E.g: banned_users.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">banned_users = [<span class=\"string\">'andrew'</span>, <span class=\"string\">'carolina'</span>, david<span class=\"string\">']</span></span><br><span class=\"line\"><span class=\"string\">user = '</span>marie<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">if user not in banned_users:</span></span><br><span class=\"line\"><span class=\"string\">    print(user.title() + \", you can post a response if you wish.\")</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>Marie, you can post a response if you wish</code></p>\n<h3 id=\"3-2-7-bool-expression\"><a href=\"#3-2-7-bool-expression\" class=\"headerlink\" title=\"3.2.7 bool expression\"></a>3.2.7 bool expression</h3><p><strong>条件测试的别名, 要么为 <code>True</code> 要么为 <code>False</code></strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">game_active = <span class=\"keyword\">True</span></span><br><span class=\"line\">can_edit = <span class=\"keyword\">False</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-3-If语句\"><a href=\"#3-3-If语句\" class=\"headerlink\" title=\"3.3 If语句\"></a>3.3 If语句</h2><h3 id=\"3-3-1-简单的-if-语句\"><a href=\"#3-3-1-简单的-if-语句\" class=\"headerlink\" title=\"3.3.1 简单的 if 语句\"></a>3.3.1 简单的 if 语句</h3><p><strong>一个测试一个操作</strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> condition_test:</span><br><span class=\"line\">    do something</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age = <span class=\"number\">19</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> age &gt;= <span class=\"number\">18</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"You are old enough to vote!\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"Have you registered to vote yet?\"</span>)</span><br></pre></td></tr></table></figure>\n<p>this will print two lines</p>\n<h6 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>You are old enough to vote!</code><br><code>Have you registered to vote yet?</code></p>\n<p>if age is less than 18, the program will give no output.</p>\n<h3 id=\"3-3-2-if-else-语句\"><a href=\"#3-3-2-if-else-语句\" class=\"headerlink\" title=\"3.3.2 if-else 语句\"></a>3.3.2 if-else 语句</h3><p><strong><code>else</code> 在if不成立时执行</strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age = <span class=\"number\">17</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> age &gt;= <span class=\"number\">18</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"You are old enough to vote\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"Have you registered to vote yet?\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"Sorry, you are too young to vote.\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"Please register to cote as soon as you turn 18!\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>Sorry, you are too young to vote.</code><br><code>Please register to cote as soon as you turn 18!</code></p>\n<h3 id=\"3-3-3-if-elif-else-结构\"><a href=\"#3-3-3-if-elif-else-结构\" class=\"headerlink\" title=\"3.3.3 if-elif-else 结构\"></a>3.3.3 if-elif-else 结构</h3><p><strong>检查超过两个条件的情形</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age = <span class=\"number\">12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> age &lt; <span class=\"number\">4</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"Your admission cost is $0\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> age &lt; <span class=\"number\">18</span></span><br><span class=\"line\">    print(<span class=\"string\">\"Your admission cost is $5\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    print(<span class=\"string\">\"Your admission cost is $10\"</span>)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-Your-admission-cost-is-5\"><a href=\"#Output-Your-admission-cost-is-5\" class=\"headerlink\" title=\"Output: Your admission cost is $5\"></a>Output: <code>Your admission cost is $5</code></h6><h3 id=\"3-3-4-使用多个-elif-代码块\"><a href=\"#3-3-4-使用多个-elif-代码块\" class=\"headerlink\" title=\"3.3.4 使用多个 elif 代码块\"></a>3.3.4 使用多个 <code>elif</code> 代码块</h3><h3 id=\"3-3-5-省略-else-代码块\"><a href=\"#3-3-5-省略-else-代码块\" class=\"headerlink\" title=\"3.3.5 省略 else 代码块\"></a>3.3.5 省略 <code>else</code> 代码块</h3><h3 id=\"3-3-6-测试多个条件\"><a href=\"#3-3-6-测试多个条件\" class=\"headerlink\" title=\"3.3.6 测试多个条件\"></a>3.3.6 测试多个条件</h3><h2 id=\"3-4-使用-if-语句处理列表\"><a href=\"#3-4-使用-if-语句处理列表\" class=\"headerlink\" title=\"3.4 使用 if 语句处理列表\"></a>3.4 使用 <code>if</code> 语句处理列表</h2><h3 id=\"3-4-1-检查特殊元素\"><a href=\"#3-4-1-检查特殊元素\" class=\"headerlink\" title=\"3.4.1 检查特殊元素\"></a>3.4.1 检查特殊元素</h3><p>E.g: toppings.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requested_toppings = [<span class=\"string\">'mushrooms'</span>, <span class=\"string\">'green_peppers'</span>, extra cheese<span class=\"string\">']</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">for requested_topping in requested_toppings:</span></span><br><span class=\"line\"><span class=\"string\">    print(\"Adding \" + requested_topping + '</span>.<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">print(\"\\nFinished making your pizza\")</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output\"></a>Output</h6><p><code>Adding mushrooms.</code><br><code>Adding green_peppers.</code><br><code>Adding extra cheese.</code></p>\n<p><code>Finished making your pizza</code></p>\n<p>A polished version<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requested_toppings = [<span class=\"string\">'mushrooms'</span>, <span class=\"string\">'green_peppers'</span>, extra cheese<span class=\"string\">']</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">for requested_topping in requested_toppings:</span></span><br><span class=\"line\"><span class=\"string\">    if requested_topping == '</span>green_peppers<span class=\"string\">':</span></span><br><span class=\"line\"><span class=\"string\">        print(“Sorry we are out of green peppers right now.\")</span></span><br><span class=\"line\"><span class=\"string\">    else: </span></span><br><span class=\"line\"><span class=\"string\">        print(\"Adding \" + requested_topping + '</span>.<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">print(\"\\nFinished making your pizza\")</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-6\"><a href=\"#Output-6\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>Adding mushrooms</code><br><code>Sorry we are out of green peppers right now.</code><br><code>Adding extra cheese</code></p>\n<p><code>Finished making your pizza</code></p>\n<h3 id=\"3-4-2-确定列表不是空的\"><a href=\"#3-4-2-确定列表不是空的\" class=\"headerlink\" title=\"3.4.2 确定列表不是空的\"></a>3.4.2 确定列表不是空的</h3><p><strong>使用 <code>for</code></strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requested_toppings = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> requested_toppings:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> requested_topping <span class=\"keyword\">in</span> requested_toppings:</span><br><span class=\"line\">        print(<span class=\"string\">\"Adding \"</span> + requested_topping + <span class=\"string\">'.'</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"Finished making your pizza\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    print(<span class=\"string\">\"Are you sure you want a plain pizza?\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-7\"><a href=\"#Output-7\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>Are you sure you want a plain pizza?</code></p>\n<h3 id=\"3-4-3-使用多个列表\"><a href=\"#3-4-3-使用多个列表\" class=\"headerlink\" title=\"3.4.3 使用多个列表\"></a>3.4.3 使用多个列表</h3><p>Skipped</p>\n","site":{"data":{}},"excerpt":"<p> An class for <code>if</code> STATEMENT</p>","more":"<h2 id=\"3-1-An-simple-example\"><a href=\"#3-1-An-simple-example\" class=\"headerlink\" title=\"3.1 An simple example\"></a>3.1 An simple example</h2><p><em>cars.py</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cars = [<span class=\"string\">'audi'</span>, <span class=\"string\">'bmw'</span>, <span class=\"string\">'subaru'</span>, <span class=\"string\">'toyota'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> car <span class=\"keyword\">in</span> cars:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> car == <span class=\"string\">'bmw'</span>:</span><br><span class=\"line\">        print(car.upper())</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(car.title())</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>Audi</code></p>\n<p><code>BMW</code></p>\n<p><code>Subaru</code></p>\n<p><code>Toyota</code></p>\n<h2 id=\"3-2-条件测试\"><a href=\"#3-2-条件测试\" class=\"headerlink\" title=\"3.2 条件测试\"></a>3.2 条件测试</h2><h3 id=\"3-2-1-检查是否相等\"><a href=\"#3-2-1-检查是否相等\" class=\"headerlink\" title=\"3.2.1 检查是否相等\"></a>3.2.1 检查是否相等</h3><p><code>car == &#39;bmw&#39;</code> will output like <code>True</code> or <code>False</code><br>The following code will always be true<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">car = <span class=\"string\">'audi'</span></span><br><span class=\"line\">car == <span class=\"string\">'audi'</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-True\"><a href=\"#Output-True\" class=\"headerlink\" title=\"Output: True\"></a>Output: <code>True</code></h6><h4 id=\"3-2-1-1-检查是否相等时不考虑大小写\"><a href=\"#3-2-1-1-检查是否相等时不考虑大小写\" class=\"headerlink\" title=\"3.2.1.1 检查是否相等时不考虑大小写\"></a>3.2.1.1 检查是否相等时不考虑大小写</h4><p><strong>Use <code>lower()</code> or <code>upper</code></strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">car = <span class=\"string\">'Audi'</span></span><br><span class=\"line\">print(car.lower() == <span class=\"string\">'audi'</span>)</span><br><span class=\"line\">print(car)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>True</code><br><code>Audi</code><br>–&gt; 操作不影响存储在变量 <code>car</code> 中的值</p>\n<h3 id=\"3-2-2-检查是否不相等\"><a href=\"#3-2-2-检查是否不相等\" class=\"headerlink\" title=\"3.2.2 检查是否不相等\"></a>3.2.2 检查是否不相等</h3><p><strong>Use <code>!=</code></strong></p>\n<p>E.g: toppings.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requested_topping = <span class=\"string\">'mushrooms'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> requested_topping != <span class=\"string\">'anchovies'</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"Hold the anchovies!\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-Hold-the-anchovies\"><a href=\"#Output-Hold-the-anchovies\" class=\"headerlink\" title=\"Output: Hold the anchovies!\"></a>Output: <code>Hold the anchovies!</code></h6><h3 id=\"3-2-3-比较数字\"><a href=\"#3-2-3-比较数字\" class=\"headerlink\" title=\"3.2.3 比较数字\"></a>3.2.3 比较数字</h3><p><strong>also use <code>==</code> and <code>!=</code></strong></p>\n<p>E.g: magic_number.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">answer = <span class=\"number\">17</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> answer != <span class=\"number\">42</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"This is not the correct answer. please try again!\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-This-is-not-the-correct-answer-please-try-again\"><a href=\"#Output-This-is-not-the-correct-answer-please-try-again\" class=\"headerlink\" title=\"Output: This is not the correct answer. please try again!\"></a>Output: <code>This is not the correct answer. please try again!</code></h6><h3 id=\"3-2-4-检查多个条件\"><a href=\"#3-2-4-检查多个条件\" class=\"headerlink\" title=\"3.2.4 检查多个条件\"></a>3.2.4 检查多个条件</h3><p><strong>Use <code>and</code> and <code>or</code></strong></p>\n<h4 id=\"3-2-4-1-使用-and-检查多个条件\"><a href=\"#3-2-4-1-使用-and-检查多个条件\" class=\"headerlink\" title=\"3.2.4.1 使用 and 检查多个条件\"></a>3.2.4.1 使用 <code>and</code> 检查多个条件</h4><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age_0 = <span class=\"number\">22</span></span><br><span class=\"line\">age_1 = <span class=\"number\">18</span></span><br><span class=\"line\">print(age_0 &gt;= <span class=\"number\">21</span> <span class=\"keyword\">and</span> age_1 &gt;= <span class=\"number\">21</span>)  <span class=\"comment\"># False</span></span><br><span class=\"line\">age_1 = <span class=\"number\">22</span></span><br><span class=\"line\">print(age_0 &gt;= <span class=\"number\">21</span> <span class=\"keyword\">and</span> age_1 &gt;= <span class=\"number\">21</span>)  <span class=\"comment\"># True</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"3-2-4-2-使用-or-检查多个条件\"><a href=\"#3-2-4-2-使用-or-检查多个条件\" class=\"headerlink\" title=\"3.2.4.2 使用 or 检查多个条件\"></a>3.2.4.2 使用 <code>or</code> 检查多个条件</h4><p><strong>同上</strong></p>\n<h3 id=\"3-2-5-检查特定值是否在表中\"><a href=\"#3-2-5-检查特定值是否在表中\" class=\"headerlink\" title=\"3.2.5 检查特定值是否在表中\"></a>3.2.5 检查特定值是否在表中</h3><p><strong>使用关键词 <code>in</code></strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requested_toppings = [<span class=\"string\">'mushrooms'</span>, <span class=\"string\">'onions'</span>, <span class=\"string\">'pineapple'</span>]</span><br><span class=\"line\">print(<span class=\"string\">'mushrooms'</span> <span class=\"keyword\">in</span> requested_toppings)    <span class=\"comment\"># True</span></span><br><span class=\"line\">print(<span class=\"string\">'pepperoni'</span> <span class=\"keyword\">in</span> requested_toppings)    <span class=\"comment\"># false</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-2-6-检查特定元素不在列表中\"><a href=\"#3-2-6-检查特定元素不在列表中\" class=\"headerlink\" title=\"3.2.6 检查特定元素不在列表中\"></a>3.2.6 检查特定元素不在列表中</h3><p><strong>使用关键字 <code>not in</code></strong></p>\n<p>E.g: banned_users.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">banned_users = [<span class=\"string\">'andrew'</span>, <span class=\"string\">'carolina'</span>, david<span class=\"string\">']</span></span><br><span class=\"line\"><span class=\"string\">user = '</span>marie<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">if user not in banned_users:</span></span><br><span class=\"line\"><span class=\"string\">    print(user.title() + \", you can post a response if you wish.\")</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>Marie, you can post a response if you wish</code></p>\n<h3 id=\"3-2-7-bool-expression\"><a href=\"#3-2-7-bool-expression\" class=\"headerlink\" title=\"3.2.7 bool expression\"></a>3.2.7 bool expression</h3><p><strong>条件测试的别名, 要么为 <code>True</code> 要么为 <code>False</code></strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">game_active = <span class=\"keyword\">True</span></span><br><span class=\"line\">can_edit = <span class=\"keyword\">False</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"3-3-If语句\"><a href=\"#3-3-If语句\" class=\"headerlink\" title=\"3.3 If语句\"></a>3.3 If语句</h2><h3 id=\"3-3-1-简单的-if-语句\"><a href=\"#3-3-1-简单的-if-语句\" class=\"headerlink\" title=\"3.3.1 简单的 if 语句\"></a>3.3.1 简单的 if 语句</h3><p><strong>一个测试一个操作</strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> condition_test:</span><br><span class=\"line\">    do something</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age = <span class=\"number\">19</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> age &gt;= <span class=\"number\">18</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"You are old enough to vote!\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"Have you registered to vote yet?\"</span>)</span><br></pre></td></tr></table></figure>\n<p>this will print two lines</p>\n<h6 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>You are old enough to vote!</code><br><code>Have you registered to vote yet?</code></p>\n<p>if age is less than 18, the program will give no output.</p>\n<h3 id=\"3-3-2-if-else-语句\"><a href=\"#3-3-2-if-else-语句\" class=\"headerlink\" title=\"3.3.2 if-else 语句\"></a>3.3.2 if-else 语句</h3><p><strong><code>else</code> 在if不成立时执行</strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age = <span class=\"number\">17</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> age &gt;= <span class=\"number\">18</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"You are old enough to vote\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"Have you registered to vote yet?\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"Sorry, you are too young to vote.\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"Please register to cote as soon as you turn 18!\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>Sorry, you are too young to vote.</code><br><code>Please register to cote as soon as you turn 18!</code></p>\n<h3 id=\"3-3-3-if-elif-else-结构\"><a href=\"#3-3-3-if-elif-else-结构\" class=\"headerlink\" title=\"3.3.3 if-elif-else 结构\"></a>3.3.3 if-elif-else 结构</h3><p><strong>检查超过两个条件的情形</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age = <span class=\"number\">12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> age &lt; <span class=\"number\">4</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"Your admission cost is $0\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> age &lt; <span class=\"number\">18</span></span><br><span class=\"line\">    print(<span class=\"string\">\"Your admission cost is $5\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    print(<span class=\"string\">\"Your admission cost is $10\"</span>)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-Your-admission-cost-is-5\"><a href=\"#Output-Your-admission-cost-is-5\" class=\"headerlink\" title=\"Output: Your admission cost is $5\"></a>Output: <code>Your admission cost is $5</code></h6><h3 id=\"3-3-4-使用多个-elif-代码块\"><a href=\"#3-3-4-使用多个-elif-代码块\" class=\"headerlink\" title=\"3.3.4 使用多个 elif 代码块\"></a>3.3.4 使用多个 <code>elif</code> 代码块</h3><h3 id=\"3-3-5-省略-else-代码块\"><a href=\"#3-3-5-省略-else-代码块\" class=\"headerlink\" title=\"3.3.5 省略 else 代码块\"></a>3.3.5 省略 <code>else</code> 代码块</h3><h3 id=\"3-3-6-测试多个条件\"><a href=\"#3-3-6-测试多个条件\" class=\"headerlink\" title=\"3.3.6 测试多个条件\"></a>3.3.6 测试多个条件</h3><h2 id=\"3-4-使用-if-语句处理列表\"><a href=\"#3-4-使用-if-语句处理列表\" class=\"headerlink\" title=\"3.4 使用 if 语句处理列表\"></a>3.4 使用 <code>if</code> 语句处理列表</h2><h3 id=\"3-4-1-检查特殊元素\"><a href=\"#3-4-1-检查特殊元素\" class=\"headerlink\" title=\"3.4.1 检查特殊元素\"></a>3.4.1 检查特殊元素</h3><p>E.g: toppings.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requested_toppings = [<span class=\"string\">'mushrooms'</span>, <span class=\"string\">'green_peppers'</span>, extra cheese<span class=\"string\">']</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">for requested_topping in requested_toppings:</span></span><br><span class=\"line\"><span class=\"string\">    print(\"Adding \" + requested_topping + '</span>.<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">print(\"\\nFinished making your pizza\")</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output\"></a>Output</h6><p><code>Adding mushrooms.</code><br><code>Adding green_peppers.</code><br><code>Adding extra cheese.</code></p>\n<p><code>Finished making your pizza</code></p>\n<p>A polished version<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requested_toppings = [<span class=\"string\">'mushrooms'</span>, <span class=\"string\">'green_peppers'</span>, extra cheese<span class=\"string\">']</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">for requested_topping in requested_toppings:</span></span><br><span class=\"line\"><span class=\"string\">    if requested_topping == '</span>green_peppers<span class=\"string\">':</span></span><br><span class=\"line\"><span class=\"string\">        print(“Sorry we are out of green peppers right now.\")</span></span><br><span class=\"line\"><span class=\"string\">    else: </span></span><br><span class=\"line\"><span class=\"string\">        print(\"Adding \" + requested_topping + '</span>.<span class=\"string\">')</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">print(\"\\nFinished making your pizza\")</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-6\"><a href=\"#Output-6\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>Adding mushrooms</code><br><code>Sorry we are out of green peppers right now.</code><br><code>Adding extra cheese</code></p>\n<p><code>Finished making your pizza</code></p>\n<h3 id=\"3-4-2-确定列表不是空的\"><a href=\"#3-4-2-确定列表不是空的\" class=\"headerlink\" title=\"3.4.2 确定列表不是空的\"></a>3.4.2 确定列表不是空的</h3><p><strong>使用 <code>for</code></strong></p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">requested_toppings = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> requested_toppings:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> requested_topping <span class=\"keyword\">in</span> requested_toppings:</span><br><span class=\"line\">        print(<span class=\"string\">\"Adding \"</span> + requested_topping + <span class=\"string\">'.'</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"Finished making your pizza\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">    print(<span class=\"string\">\"Are you sure you want a plain pizza?\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-7\"><a href=\"#Output-7\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>Are you sure you want a plain pizza?</code></p>\n<h3 id=\"3-4-3-使用多个列表\"><a href=\"#3-4-3-使用多个列表\" class=\"headerlink\" title=\"3.4.3 使用多个列表\"></a>3.4.3 使用多个列表</h3><p>Skipped</p>"},{"title":"Python 字典","date":"2017-11-18T16:00:00.000Z","author":"OCD","_content":"在 Python 中, 字典是一系列 `键值对`, 每个`键`都与一个`值`相关联, 可以使用键来访问相关的值.\n<!-- more -->\n\n## 4.0 对 Example 解释\nE.g:\n```python\nalien_0 = {'color': 'green', 'points': 5}\n\nalien_0 = {'color': 'green', 'points': 5}\nprint(alien_0['color']\nprint(alien_0['points']\n```\n###### Output:\n```\ngreen\n5\n```\n\n## 4.1 使用字典\n事实上,可以将任何 Python 对象用作字典的值.\n\n在 Python 中, 字典用放在花括号 `{}` 的一系列 键--值 对表示\n\n### 4.1.1 访问字典中的值\nE.g:\n```python\nalien_0 = {'color': 'green'}\nprint(alien_0['color']\n```\n###### Output: \n```\ngreen\n```\n### 4.1.2 添加键值对\n可依次指定字典名、用方括号括起的键和相关联的值\nE.g:\n```python\nalien_0 = {'color': 'green', 'points': 5}\nprint(alien_0)\n\nalien_0['x_position'] = 0\nalien_0['y_position'] = 25\nprint(alien_0)\n```\n###### Output\n```\n{'color': 'green', 'points': 5}\n{'color': 'green', 'points': 5, 'x_position': 0, 'y_position': 25}\n```\n### 4.1.3 先创建一个空字典\nE.g:\n```python\nalien_0  = {}\n```\n\n### 4.1.4 修改字典中的值\nE.g:\n```python\nalien_0 = {'color': 'green'}\nprint(alien_0['color'])\n\nalien_0['color'] = 'yellow'\nprint(alien_0['color'])\n```\n###### Output:\n```\ngreen\nyellow\n```\n\n### 4.1.5 删除以键值对\n使用 `del` 语句\n    \nE.g:\n```python\nalien_0 = {'color': 'green', 'points': 5}\nprint(alien_0)\n\ndel alien_0['points']\nprint(alien_0)\n```\n###### Output: \n```\n{'color': 'green', 'points': 5}\n{'color': 'green'}\n```\n\n### 4.2.6: 由类似对象构成的字典\nE.g:\n```python:\nfavourite_languages = {\n    'jen' = 'python',\n    'sarah' = 'c'\n    'edward' = 'ruby'\n    'phil' = 'python',\n}\n```\n\n## 4.3 遍历字典\n\n### 4.3.1: 遍历所有键值对\nE.g:\n```python\nuser_0 = {\n    'username':'efermi',\n    'first':'enrico',\n    'last':'fermi',\n}\n\nfor key,value in user_0.items():\n    print(\"\\nKey: \" + key)\n    print(\"Value: \" + value)\n```\n###### Output\n```\n\nKey: username\nValue: efermi\n\nKey: first\nValue: enrico\n\nKey: last\nValue: fermi\n```\n\n`for k, v in user_0.items()`\nfor 语句的第二部分包含字典名和方法 `items()`, 它返回一个 键--值 对列表.\n\n###### 注: 即使遍历字典时, 返回顺序也于存储顺序不同.\n\n### 4.3.2 遍历字典中的所有键\n使用 `keys()`\nE.g:\n```python\nfavourite_languages = {\n    'jen': 'python',\n    'sarah': 'c',\n    'edward': 'ruby',\n    'phil': 'python',\n}\n\nfor name in favourite_languages.keys():\n    print(name.title())\n```\n###### Output:\n```\nJen\nSarah\nEdward\nPhil\n```\n遍历字典时, 会默认遍历所有的键,\nso:\n` for name in favourite_languages.keys()` == `for names in foavourite_languages`\n\n#### 4.3.2.1 按顺序遍历字典中的所有键\n用 sorted() 创建按特定顺序排列的键的列表的副本\nE.g:\n```python\nfor name in sorted(favourite_languages.keys()):\n```\n\n### 4.3.3 遍历字典中的所有值\n使用 value() \nE.g: \n```python\nfor language in favourite_languages.values():\n``` \n注: 该方法遍历所有值, 可能导致重复\n为剔除重复项, 可使用集合 (set), 集合类似于列表, 但每个元素都是独一无二的.\n```python\nfor language in set(favourite_languages.values()):\n```\n\n## 4.4 嵌套\n### 4.4.1 字典列表\nE.g: ( aliens.py )\n```python\nalien_0 = {'color': 'green', 'points': 5}\nalien_1 = {'color': 'yellow', 'points': 10}\nalien_2 = {'color': 'red', 'points': 15}\n\naliens = [alien_0, alien_1, alien_2]\n\nfor alien in aliens:\n    print(alien)\n```\n###### Output:\n```\n{'color': 'green', 'points': 5}\n{'color': 'yellow', 'points': 10}\n{'color': 'red', 'points': 15}\n```\n\nE.g_2:\n```python\naliens = []\n\nfor alien_number in range(30):\n    new_alien = {'color': 'green', 'points': 5, 'speed': 'slow'}\n    aliens.append(new_alien)\n    \nfor alien in aliens[0:3]:\n    if alien['color'] == 'green':\n        alien['color'] = 'yellow'\n        alien['points'] = 10\n        alien['speed'] = 'medium'\nfor alien in aliens[:5]:\n    print(alien)\nprint('...')\n\nprint('Total number of aliens: ' + str(len(aliens)))\n```\n\n###### Output: \n```\n{'color': 'yellow', 'points': 10, 'speed': 'medium'}\n{'color': 'yellow', 'points': 10, 'speed': 'medium'}\n{'color': 'yellow', 'points': 10, 'speed': 'medium'}\n{'color': 'green', 'points': 5, 'speed': 'slow'}\n{'color': 'green', 'points': 5, 'speed': 'slow'}\n...\n```\n\n### 4.4.2 在字典中存储列表\nE.g: ( pizza.py )\n```python\npizza = {\n    'crust': 'thick',\n    'toppings': ['mushrooms', 'extra cheese']\n    }\n    \nprint('You ordered a ' + pizza['crust'] + '-crust pizza ' +\n            'with the following toppings: ')\n            \nfor topping in pizza['toppings']:\n    print('\\t' + topping) \n```\n\n###### Output:\n```\nYou ordered a thick-crust pizza with the following toppings: \n\tmushrooms\n\textra cheese\n```\n\nE.g_2:\n```python\nfavourite_languages = {\n    'jen': ['python', 'ruby'],\n    'sarah': ['c'],\n    'edward': ['ruby', 'go'],\n    'phil': ['python', 'haskell'],\n}\n\nfor name, languages in favourite_languages.items():\n    print('\\n' + name.title() + \"'s favourite languages are:\")\n    \n    for language in languages:\n        print(\"\\t\" + language.title())\n```\n\n###### Output:\n```\nJen's favourite languages are:\n\tPython\n\tRuby\n\nSarah's favourite languages are:\n\tC\n\nEdward's favourite languages are:\n\tRuby\n\tGo\n\nPhil's favourite languages are:\n\tPython\n\tHaskell\n```\n\n### 4.4.3 在字典中存储字典\nE.g: ( many_users.py )\n```python\nusers = {\n    'aesinstein': {\n        'first': 'albert',\n        'last': 'einstein',\n        'location': 'princeton',\n        },\n        \n    'mcurie': {\n        'first': 'marie',\n        'last': 'curie',\n        'location': 'paris',\n        },\n        \n    }\n    \nfor username, user_info in users.items():\n    print('\\nUsername: ' + username)\n    full_name = user_info['first'] + ' ' +  user_info['last']\n    location = user_info['location']\n     \n    print('\\tFull name: ' + full_name.title())\n    print('\\tLocation: ' + location.title())\n  ```\n\n###### Output:\n```\nUsername: aesinstein\n\tFull name: Albert Einstein\n\tLocation: Princeton\n\nUsername: mcurie\n\tFull name: Marie Curie\n\tLocation: Paris\n```\n\n","source":"_posts/2017-11-19-Python-Dictionary.md","raw":"---\ntitle: Python 字典\ndate: 2017-11-19\nauthor: \"OCD\"\ncategory:\n    - Programming\ntags: \n    - Python\n    - Develop\n---\n在 Python 中, 字典是一系列 `键值对`, 每个`键`都与一个`值`相关联, 可以使用键来访问相关的值.\n<!-- more -->\n\n## 4.0 对 Example 解释\nE.g:\n```python\nalien_0 = {'color': 'green', 'points': 5}\n\nalien_0 = {'color': 'green', 'points': 5}\nprint(alien_0['color']\nprint(alien_0['points']\n```\n###### Output:\n```\ngreen\n5\n```\n\n## 4.1 使用字典\n事实上,可以将任何 Python 对象用作字典的值.\n\n在 Python 中, 字典用放在花括号 `{}` 的一系列 键--值 对表示\n\n### 4.1.1 访问字典中的值\nE.g:\n```python\nalien_0 = {'color': 'green'}\nprint(alien_0['color']\n```\n###### Output: \n```\ngreen\n```\n### 4.1.2 添加键值对\n可依次指定字典名、用方括号括起的键和相关联的值\nE.g:\n```python\nalien_0 = {'color': 'green', 'points': 5}\nprint(alien_0)\n\nalien_0['x_position'] = 0\nalien_0['y_position'] = 25\nprint(alien_0)\n```\n###### Output\n```\n{'color': 'green', 'points': 5}\n{'color': 'green', 'points': 5, 'x_position': 0, 'y_position': 25}\n```\n### 4.1.3 先创建一个空字典\nE.g:\n```python\nalien_0  = {}\n```\n\n### 4.1.4 修改字典中的值\nE.g:\n```python\nalien_0 = {'color': 'green'}\nprint(alien_0['color'])\n\nalien_0['color'] = 'yellow'\nprint(alien_0['color'])\n```\n###### Output:\n```\ngreen\nyellow\n```\n\n### 4.1.5 删除以键值对\n使用 `del` 语句\n    \nE.g:\n```python\nalien_0 = {'color': 'green', 'points': 5}\nprint(alien_0)\n\ndel alien_0['points']\nprint(alien_0)\n```\n###### Output: \n```\n{'color': 'green', 'points': 5}\n{'color': 'green'}\n```\n\n### 4.2.6: 由类似对象构成的字典\nE.g:\n```python:\nfavourite_languages = {\n    'jen' = 'python',\n    'sarah' = 'c'\n    'edward' = 'ruby'\n    'phil' = 'python',\n}\n```\n\n## 4.3 遍历字典\n\n### 4.3.1: 遍历所有键值对\nE.g:\n```python\nuser_0 = {\n    'username':'efermi',\n    'first':'enrico',\n    'last':'fermi',\n}\n\nfor key,value in user_0.items():\n    print(\"\\nKey: \" + key)\n    print(\"Value: \" + value)\n```\n###### Output\n```\n\nKey: username\nValue: efermi\n\nKey: first\nValue: enrico\n\nKey: last\nValue: fermi\n```\n\n`for k, v in user_0.items()`\nfor 语句的第二部分包含字典名和方法 `items()`, 它返回一个 键--值 对列表.\n\n###### 注: 即使遍历字典时, 返回顺序也于存储顺序不同.\n\n### 4.3.2 遍历字典中的所有键\n使用 `keys()`\nE.g:\n```python\nfavourite_languages = {\n    'jen': 'python',\n    'sarah': 'c',\n    'edward': 'ruby',\n    'phil': 'python',\n}\n\nfor name in favourite_languages.keys():\n    print(name.title())\n```\n###### Output:\n```\nJen\nSarah\nEdward\nPhil\n```\n遍历字典时, 会默认遍历所有的键,\nso:\n` for name in favourite_languages.keys()` == `for names in foavourite_languages`\n\n#### 4.3.2.1 按顺序遍历字典中的所有键\n用 sorted() 创建按特定顺序排列的键的列表的副本\nE.g:\n```python\nfor name in sorted(favourite_languages.keys()):\n```\n\n### 4.3.3 遍历字典中的所有值\n使用 value() \nE.g: \n```python\nfor language in favourite_languages.values():\n``` \n注: 该方法遍历所有值, 可能导致重复\n为剔除重复项, 可使用集合 (set), 集合类似于列表, 但每个元素都是独一无二的.\n```python\nfor language in set(favourite_languages.values()):\n```\n\n## 4.4 嵌套\n### 4.4.1 字典列表\nE.g: ( aliens.py )\n```python\nalien_0 = {'color': 'green', 'points': 5}\nalien_1 = {'color': 'yellow', 'points': 10}\nalien_2 = {'color': 'red', 'points': 15}\n\naliens = [alien_0, alien_1, alien_2]\n\nfor alien in aliens:\n    print(alien)\n```\n###### Output:\n```\n{'color': 'green', 'points': 5}\n{'color': 'yellow', 'points': 10}\n{'color': 'red', 'points': 15}\n```\n\nE.g_2:\n```python\naliens = []\n\nfor alien_number in range(30):\n    new_alien = {'color': 'green', 'points': 5, 'speed': 'slow'}\n    aliens.append(new_alien)\n    \nfor alien in aliens[0:3]:\n    if alien['color'] == 'green':\n        alien['color'] = 'yellow'\n        alien['points'] = 10\n        alien['speed'] = 'medium'\nfor alien in aliens[:5]:\n    print(alien)\nprint('...')\n\nprint('Total number of aliens: ' + str(len(aliens)))\n```\n\n###### Output: \n```\n{'color': 'yellow', 'points': 10, 'speed': 'medium'}\n{'color': 'yellow', 'points': 10, 'speed': 'medium'}\n{'color': 'yellow', 'points': 10, 'speed': 'medium'}\n{'color': 'green', 'points': 5, 'speed': 'slow'}\n{'color': 'green', 'points': 5, 'speed': 'slow'}\n...\n```\n\n### 4.4.2 在字典中存储列表\nE.g: ( pizza.py )\n```python\npizza = {\n    'crust': 'thick',\n    'toppings': ['mushrooms', 'extra cheese']\n    }\n    \nprint('You ordered a ' + pizza['crust'] + '-crust pizza ' +\n            'with the following toppings: ')\n            \nfor topping in pizza['toppings']:\n    print('\\t' + topping) \n```\n\n###### Output:\n```\nYou ordered a thick-crust pizza with the following toppings: \n\tmushrooms\n\textra cheese\n```\n\nE.g_2:\n```python\nfavourite_languages = {\n    'jen': ['python', 'ruby'],\n    'sarah': ['c'],\n    'edward': ['ruby', 'go'],\n    'phil': ['python', 'haskell'],\n}\n\nfor name, languages in favourite_languages.items():\n    print('\\n' + name.title() + \"'s favourite languages are:\")\n    \n    for language in languages:\n        print(\"\\t\" + language.title())\n```\n\n###### Output:\n```\nJen's favourite languages are:\n\tPython\n\tRuby\n\nSarah's favourite languages are:\n\tC\n\nEdward's favourite languages are:\n\tRuby\n\tGo\n\nPhil's favourite languages are:\n\tPython\n\tHaskell\n```\n\n### 4.4.3 在字典中存储字典\nE.g: ( many_users.py )\n```python\nusers = {\n    'aesinstein': {\n        'first': 'albert',\n        'last': 'einstein',\n        'location': 'princeton',\n        },\n        \n    'mcurie': {\n        'first': 'marie',\n        'last': 'curie',\n        'location': 'paris',\n        },\n        \n    }\n    \nfor username, user_info in users.items():\n    print('\\nUsername: ' + username)\n    full_name = user_info['first'] + ' ' +  user_info['last']\n    location = user_info['location']\n     \n    print('\\tFull name: ' + full_name.title())\n    print('\\tLocation: ' + location.title())\n  ```\n\n###### Output:\n```\nUsername: aesinstein\n\tFull name: Albert Einstein\n\tLocation: Princeton\n\nUsername: mcurie\n\tFull name: Marie Curie\n\tLocation: Paris\n```\n\n","slug":"2017-11-19-Python-Dictionary","published":1,"updated":"2018-11-26T03:32:37.619Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8w80007rmtuwssqtzhm","content":"<p>在 Python 中, 字典是一系列 <code>键值对</code>, 每个<code>键</code>都与一个<code>值</code>相关联, 可以使用键来访问相关的值.<br><a id=\"more\"></a></p>\n<h2 id=\"4-0-对-Example-解释\"><a href=\"#4-0-对-Example-解释\" class=\"headerlink\" title=\"4.0 对 Example 解释\"></a>4.0 对 Example 解释</h2><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>&#125;</span><br><span class=\"line\">print(alien_0[<span class=\"string\">'color'</span>]</span><br><span class=\"line\">print(alien_0[<span class=\"string\">'points'</span>]</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">green</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-1-使用字典\"><a href=\"#4-1-使用字典\" class=\"headerlink\" title=\"4.1 使用字典\"></a>4.1 使用字典</h2><p>事实上,可以将任何 Python 对象用作字典的值.</p>\n<p>在 Python 中, 字典用放在花括号 <code>{}</code> 的一系列 键–值 对表示</p>\n<h3 id=\"4-1-1-访问字典中的值\"><a href=\"#4-1-1-访问字典中的值\" class=\"headerlink\" title=\"4.1.1 访问字典中的值\"></a>4.1.1 访问字典中的值</h3><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>&#125;</span><br><span class=\"line\">print(alien_0[<span class=\"string\">'color'</span>]</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">green</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-1-2-添加键值对\"><a href=\"#4-1-2-添加键值对\" class=\"headerlink\" title=\"4.1.2 添加键值对\"></a>4.1.2 添加键值对</h3><p>可依次指定字典名、用方括号括起的键和相关联的值<br>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>&#125;</span><br><span class=\"line\">print(alien_0)</span><br><span class=\"line\"></span><br><span class=\"line\">alien_0[<span class=\"string\">'x_position'</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">alien_0[<span class=\"string\">'y_position'</span>] = <span class=\"number\">25</span></span><br><span class=\"line\">print(alien_0)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5, &apos;x_position&apos;: 0, &apos;y_position&apos;: 25&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-1-3-先创建一个空字典\"><a href=\"#4-1-3-先创建一个空字典\" class=\"headerlink\" title=\"4.1.3 先创建一个空字典\"></a>4.1.3 先创建一个空字典</h3><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0  = &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-1-4-修改字典中的值\"><a href=\"#4-1-4-修改字典中的值\" class=\"headerlink\" title=\"4.1.4 修改字典中的值\"></a>4.1.4 修改字典中的值</h3><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>&#125;</span><br><span class=\"line\">print(alien_0[<span class=\"string\">'color'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">alien_0[<span class=\"string\">'color'</span>] = <span class=\"string\">'yellow'</span></span><br><span class=\"line\">print(alien_0[<span class=\"string\">'color'</span>])</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">green</span><br><span class=\"line\">yellow</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-1-5-删除以键值对\"><a href=\"#4-1-5-删除以键值对\" class=\"headerlink\" title=\"4.1.5 删除以键值对\"></a>4.1.5 删除以键值对</h3><p>使用 <code>del</code> 语句</p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>&#125;</span><br><span class=\"line\">print(alien_0)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">del</span> alien_0[<span class=\"string\">'points'</span>]</span><br><span class=\"line\">print(alien_0)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-6-由类似对象构成的字典\"><a href=\"#4-2-6-由类似对象构成的字典\" class=\"headerlink\" title=\"4.2.6: 由类似对象构成的字典\"></a>4.2.6: 由类似对象构成的字典</h3><p>E.g:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favourite_languages = &#123;</span><br><span class=\"line\">    &apos;jen&apos; = &apos;python&apos;,</span><br><span class=\"line\">    &apos;sarah&apos; = &apos;c&apos;</span><br><span class=\"line\">    &apos;edward&apos; = &apos;ruby&apos;</span><br><span class=\"line\">    &apos;phil&apos; = &apos;python&apos;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-3-遍历字典\"><a href=\"#4-3-遍历字典\" class=\"headerlink\" title=\"4.3 遍历字典\"></a>4.3 遍历字典</h2><h3 id=\"4-3-1-遍历所有键值对\"><a href=\"#4-3-1-遍历所有键值对\" class=\"headerlink\" title=\"4.3.1: 遍历所有键值对\"></a>4.3.1: 遍历所有键值对</h3><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user_0 = &#123;</span><br><span class=\"line\">    <span class=\"string\">'username'</span>:<span class=\"string\">'efermi'</span>,</span><br><span class=\"line\">    <span class=\"string\">'first'</span>:<span class=\"string\">'enrico'</span>,</span><br><span class=\"line\">    <span class=\"string\">'last'</span>:<span class=\"string\">'fermi'</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> key,value <span class=\"keyword\">in</span> user_0.items():</span><br><span class=\"line\">    print(<span class=\"string\">\"\\nKey: \"</span> + key)</span><br><span class=\"line\">    print(<span class=\"string\">\"Value: \"</span> + value)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Key: username</span><br><span class=\"line\">Value: efermi</span><br><span class=\"line\"></span><br><span class=\"line\">Key: first</span><br><span class=\"line\">Value: enrico</span><br><span class=\"line\"></span><br><span class=\"line\">Key: last</span><br><span class=\"line\">Value: fermi</span><br></pre></td></tr></table></figure>\n<p><code>for k, v in user_0.items()</code><br>for 语句的第二部分包含字典名和方法 <code>items()</code>, 它返回一个 键–值 对列表.</p>\n<h6 id=\"注-即使遍历字典时-返回顺序也于存储顺序不同\"><a href=\"#注-即使遍历字典时-返回顺序也于存储顺序不同\" class=\"headerlink\" title=\"注: 即使遍历字典时, 返回顺序也于存储顺序不同.\"></a>注: 即使遍历字典时, 返回顺序也于存储顺序不同.</h6><h3 id=\"4-3-2-遍历字典中的所有键\"><a href=\"#4-3-2-遍历字典中的所有键\" class=\"headerlink\" title=\"4.3.2 遍历字典中的所有键\"></a>4.3.2 遍历字典中的所有键</h3><p>使用 <code>keys()</code><br>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favourite_languages = &#123;</span><br><span class=\"line\">    <span class=\"string\">'jen'</span>: <span class=\"string\">'python'</span>,</span><br><span class=\"line\">    <span class=\"string\">'sarah'</span>: <span class=\"string\">'c'</span>,</span><br><span class=\"line\">    <span class=\"string\">'edward'</span>: <span class=\"string\">'ruby'</span>,</span><br><span class=\"line\">    <span class=\"string\">'phil'</span>: <span class=\"string\">'python'</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> favourite_languages.keys():</span><br><span class=\"line\">    print(name.title())</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-6\"><a href=\"#Output-6\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Jen</span><br><span class=\"line\">Sarah</span><br><span class=\"line\">Edward</span><br><span class=\"line\">Phil</span><br></pre></td></tr></table></figure>\n<p>遍历字典时, 会默认遍历所有的键,<br>so:<br><code>for name in favourite_languages.keys()</code> == <code>for names in foavourite_languages</code></p>\n<h4 id=\"4-3-2-1-按顺序遍历字典中的所有键\"><a href=\"#4-3-2-1-按顺序遍历字典中的所有键\" class=\"headerlink\" title=\"4.3.2.1 按顺序遍历字典中的所有键\"></a>4.3.2.1 按顺序遍历字典中的所有键</h4><p>用 sorted() 创建按特定顺序排列的键的列表的副本<br>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> sorted(favourite_languages.keys()):</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-3-3-遍历字典中的所有值\"><a href=\"#4-3-3-遍历字典中的所有值\" class=\"headerlink\" title=\"4.3.3 遍历字典中的所有值\"></a>4.3.3 遍历字典中的所有值</h3><p>使用 value()<br>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> language <span class=\"keyword\">in</span> favourite_languages.values():</span><br><span class=\"line\">``` </span><br><span class=\"line\">注: 该方法遍历所有值, 可能导致重复</span><br><span class=\"line\">为剔除重复项, 可使用集合 (set), 集合类似于列表, 但每个元素都是独一无二的.</span><br><span class=\"line\">```python</span><br><span class=\"line\"><span class=\"keyword\">for</span> language <span class=\"keyword\">in</span> set(favourite_languages.values()):</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-4-嵌套\"><a href=\"#4-4-嵌套\" class=\"headerlink\" title=\"4.4 嵌套\"></a>4.4 嵌套</h2><h3 id=\"4-4-1-字典列表\"><a href=\"#4-4-1-字典列表\" class=\"headerlink\" title=\"4.4.1 字典列表\"></a>4.4.1 字典列表</h3><p>E.g: ( aliens.py )<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>&#125;</span><br><span class=\"line\">alien_1 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'yellow'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">10</span>&#125;</span><br><span class=\"line\">alien_2 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'red'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">15</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">aliens = [alien_0, alien_1, alien_2]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> alien <span class=\"keyword\">in</span> aliens:</span><br><span class=\"line\">    print(alien)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-7\"><a href=\"#Output-7\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;red&apos;, &apos;points&apos;: 15&#125;</span><br></pre></td></tr></table></figure>\n<p>E.g_2:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aliens = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> alien_number <span class=\"keyword\">in</span> range(<span class=\"number\">30</span>):</span><br><span class=\"line\">    new_alien = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>, <span class=\"string\">'speed'</span>: <span class=\"string\">'slow'</span>&#125;</span><br><span class=\"line\">    aliens.append(new_alien)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">for</span> alien <span class=\"keyword\">in</span> aliens[<span class=\"number\">0</span>:<span class=\"number\">3</span>]:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> alien[<span class=\"string\">'color'</span>] == <span class=\"string\">'green'</span>:</span><br><span class=\"line\">        alien[<span class=\"string\">'color'</span>] = <span class=\"string\">'yellow'</span></span><br><span class=\"line\">        alien[<span class=\"string\">'points'</span>] = <span class=\"number\">10</span></span><br><span class=\"line\">        alien[<span class=\"string\">'speed'</span>] = <span class=\"string\">'medium'</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> alien <span class=\"keyword\">in</span> aliens[:<span class=\"number\">5</span>]:</span><br><span class=\"line\">    print(alien)</span><br><span class=\"line\">print(<span class=\"string\">'...'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">'Total number of aliens: '</span> + str(len(aliens)))</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-8\"><a href=\"#Output-8\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10, &apos;speed&apos;: &apos;medium&apos;&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10, &apos;speed&apos;: &apos;medium&apos;&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10, &apos;speed&apos;: &apos;medium&apos;&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5, &apos;speed&apos;: &apos;slow&apos;&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5, &apos;speed&apos;: &apos;slow&apos;&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-2-在字典中存储列表\"><a href=\"#4-4-2-在字典中存储列表\" class=\"headerlink\" title=\"4.4.2 在字典中存储列表\"></a>4.4.2 在字典中存储列表</h3><p>E.g: ( pizza.py )<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pizza = &#123;</span><br><span class=\"line\">    <span class=\"string\">'crust'</span>: <span class=\"string\">'thick'</span>,</span><br><span class=\"line\">    <span class=\"string\">'toppings'</span>: [<span class=\"string\">'mushrooms'</span>, <span class=\"string\">'extra cheese'</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">print(<span class=\"string\">'You ordered a '</span> + pizza[<span class=\"string\">'crust'</span>] + <span class=\"string\">'-crust pizza '</span> +</span><br><span class=\"line\">            <span class=\"string\">'with the following toppings: '</span>)</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"keyword\">for</span> topping <span class=\"keyword\">in</span> pizza[<span class=\"string\">'toppings'</span>]:</span><br><span class=\"line\">    print(<span class=\"string\">'\\t'</span> + topping)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-9\"><a href=\"#Output-9\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You ordered a thick-crust pizza with the following toppings: </span><br><span class=\"line\">\tmushrooms</span><br><span class=\"line\">\textra cheese</span><br></pre></td></tr></table></figure>\n<p>E.g_2:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favourite_languages = &#123;</span><br><span class=\"line\">    <span class=\"string\">'jen'</span>: [<span class=\"string\">'python'</span>, <span class=\"string\">'ruby'</span>],</span><br><span class=\"line\">    <span class=\"string\">'sarah'</span>: [<span class=\"string\">'c'</span>],</span><br><span class=\"line\">    <span class=\"string\">'edward'</span>: [<span class=\"string\">'ruby'</span>, <span class=\"string\">'go'</span>],</span><br><span class=\"line\">    <span class=\"string\">'phil'</span>: [<span class=\"string\">'python'</span>, <span class=\"string\">'haskell'</span>],</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> name, languages <span class=\"keyword\">in</span> favourite_languages.items():</span><br><span class=\"line\">    print(<span class=\"string\">'\\n'</span> + name.title() + <span class=\"string\">\"'s favourite languages are:\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> language <span class=\"keyword\">in</span> languages:</span><br><span class=\"line\">        print(<span class=\"string\">\"\\t\"</span> + language.title())</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-10\"><a href=\"#Output-10\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Jen&apos;s favourite languages are:</span><br><span class=\"line\">\tPython</span><br><span class=\"line\">\tRuby</span><br><span class=\"line\"></span><br><span class=\"line\">Sarah&apos;s favourite languages are:</span><br><span class=\"line\">\tC</span><br><span class=\"line\"></span><br><span class=\"line\">Edward&apos;s favourite languages are:</span><br><span class=\"line\">\tRuby</span><br><span class=\"line\">\tGo</span><br><span class=\"line\"></span><br><span class=\"line\">Phil&apos;s favourite languages are:</span><br><span class=\"line\">\tPython</span><br><span class=\"line\">\tHaskell</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-3-在字典中存储字典\"><a href=\"#4-4-3-在字典中存储字典\" class=\"headerlink\" title=\"4.4.3 在字典中存储字典\"></a>4.4.3 在字典中存储字典</h3><p>E.g: ( many_users.py )<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">users = &#123;</span><br><span class=\"line\">    <span class=\"string\">'aesinstein'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'first'</span>: <span class=\"string\">'albert'</span>,</span><br><span class=\"line\">        <span class=\"string\">'last'</span>: <span class=\"string\">'einstein'</span>,</span><br><span class=\"line\">        <span class=\"string\">'location'</span>: <span class=\"string\">'princeton'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"string\">'mcurie'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'first'</span>: <span class=\"string\">'marie'</span>,</span><br><span class=\"line\">        <span class=\"string\">'last'</span>: <span class=\"string\">'curie'</span>,</span><br><span class=\"line\">        <span class=\"string\">'location'</span>: <span class=\"string\">'paris'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">for</span> username, user_info <span class=\"keyword\">in</span> users.items():</span><br><span class=\"line\">    print(<span class=\"string\">'\\nUsername: '</span> + username)</span><br><span class=\"line\">    full_name = user_info[<span class=\"string\">'first'</span>] + <span class=\"string\">' '</span> +  user_info[<span class=\"string\">'last'</span>]</span><br><span class=\"line\">    location = user_info[<span class=\"string\">'location'</span>]</span><br><span class=\"line\">     </span><br><span class=\"line\">    print(<span class=\"string\">'\\tFull name: '</span> + full_name.title())</span><br><span class=\"line\">    print(<span class=\"string\">'\\tLocation: '</span> + location.title())</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-11\"><a href=\"#Output-11\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Username: aesinstein</span><br><span class=\"line\">\tFull name: Albert Einstein</span><br><span class=\"line\">\tLocation: Princeton</span><br><span class=\"line\"></span><br><span class=\"line\">Username: mcurie</span><br><span class=\"line\">\tFull name: Marie Curie</span><br><span class=\"line\">\tLocation: Paris</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>在 Python 中, 字典是一系列 <code>键值对</code>, 每个<code>键</code>都与一个<code>值</code>相关联, 可以使用键来访问相关的值.<br>","more":"</p>\n<h2 id=\"4-0-对-Example-解释\"><a href=\"#4-0-对-Example-解释\" class=\"headerlink\" title=\"4.0 对 Example 解释\"></a>4.0 对 Example 解释</h2><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>&#125;</span><br><span class=\"line\">print(alien_0[<span class=\"string\">'color'</span>]</span><br><span class=\"line\">print(alien_0[<span class=\"string\">'points'</span>]</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">green</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-1-使用字典\"><a href=\"#4-1-使用字典\" class=\"headerlink\" title=\"4.1 使用字典\"></a>4.1 使用字典</h2><p>事实上,可以将任何 Python 对象用作字典的值.</p>\n<p>在 Python 中, 字典用放在花括号 <code>{}</code> 的一系列 键–值 对表示</p>\n<h3 id=\"4-1-1-访问字典中的值\"><a href=\"#4-1-1-访问字典中的值\" class=\"headerlink\" title=\"4.1.1 访问字典中的值\"></a>4.1.1 访问字典中的值</h3><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>&#125;</span><br><span class=\"line\">print(alien_0[<span class=\"string\">'color'</span>]</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">green</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-1-2-添加键值对\"><a href=\"#4-1-2-添加键值对\" class=\"headerlink\" title=\"4.1.2 添加键值对\"></a>4.1.2 添加键值对</h3><p>可依次指定字典名、用方括号括起的键和相关联的值<br>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>&#125;</span><br><span class=\"line\">print(alien_0)</span><br><span class=\"line\"></span><br><span class=\"line\">alien_0[<span class=\"string\">'x_position'</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">alien_0[<span class=\"string\">'y_position'</span>] = <span class=\"number\">25</span></span><br><span class=\"line\">print(alien_0)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5, &apos;x_position&apos;: 0, &apos;y_position&apos;: 25&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-1-3-先创建一个空字典\"><a href=\"#4-1-3-先创建一个空字典\" class=\"headerlink\" title=\"4.1.3 先创建一个空字典\"></a>4.1.3 先创建一个空字典</h3><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0  = &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-1-4-修改字典中的值\"><a href=\"#4-1-4-修改字典中的值\" class=\"headerlink\" title=\"4.1.4 修改字典中的值\"></a>4.1.4 修改字典中的值</h3><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>&#125;</span><br><span class=\"line\">print(alien_0[<span class=\"string\">'color'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">alien_0[<span class=\"string\">'color'</span>] = <span class=\"string\">'yellow'</span></span><br><span class=\"line\">print(alien_0[<span class=\"string\">'color'</span>])</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">green</span><br><span class=\"line\">yellow</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-1-5-删除以键值对\"><a href=\"#4-1-5-删除以键值对\" class=\"headerlink\" title=\"4.1.5 删除以键值对\"></a>4.1.5 删除以键值对</h3><p>使用 <code>del</code> 语句</p>\n<p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>&#125;</span><br><span class=\"line\">print(alien_0)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">del</span> alien_0[<span class=\"string\">'points'</span>]</span><br><span class=\"line\">print(alien_0)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-6-由类似对象构成的字典\"><a href=\"#4-2-6-由类似对象构成的字典\" class=\"headerlink\" title=\"4.2.6: 由类似对象构成的字典\"></a>4.2.6: 由类似对象构成的字典</h3><p>E.g:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favourite_languages = &#123;</span><br><span class=\"line\">    &apos;jen&apos; = &apos;python&apos;,</span><br><span class=\"line\">    &apos;sarah&apos; = &apos;c&apos;</span><br><span class=\"line\">    &apos;edward&apos; = &apos;ruby&apos;</span><br><span class=\"line\">    &apos;phil&apos; = &apos;python&apos;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-3-遍历字典\"><a href=\"#4-3-遍历字典\" class=\"headerlink\" title=\"4.3 遍历字典\"></a>4.3 遍历字典</h2><h3 id=\"4-3-1-遍历所有键值对\"><a href=\"#4-3-1-遍历所有键值对\" class=\"headerlink\" title=\"4.3.1: 遍历所有键值对\"></a>4.3.1: 遍历所有键值对</h3><p>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user_0 = &#123;</span><br><span class=\"line\">    <span class=\"string\">'username'</span>:<span class=\"string\">'efermi'</span>,</span><br><span class=\"line\">    <span class=\"string\">'first'</span>:<span class=\"string\">'enrico'</span>,</span><br><span class=\"line\">    <span class=\"string\">'last'</span>:<span class=\"string\">'fermi'</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> key,value <span class=\"keyword\">in</span> user_0.items():</span><br><span class=\"line\">    print(<span class=\"string\">\"\\nKey: \"</span> + key)</span><br><span class=\"line\">    print(<span class=\"string\">\"Value: \"</span> + value)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Key: username</span><br><span class=\"line\">Value: efermi</span><br><span class=\"line\"></span><br><span class=\"line\">Key: first</span><br><span class=\"line\">Value: enrico</span><br><span class=\"line\"></span><br><span class=\"line\">Key: last</span><br><span class=\"line\">Value: fermi</span><br></pre></td></tr></table></figure>\n<p><code>for k, v in user_0.items()</code><br>for 语句的第二部分包含字典名和方法 <code>items()</code>, 它返回一个 键–值 对列表.</p>\n<h6 id=\"注-即使遍历字典时-返回顺序也于存储顺序不同\"><a href=\"#注-即使遍历字典时-返回顺序也于存储顺序不同\" class=\"headerlink\" title=\"注: 即使遍历字典时, 返回顺序也于存储顺序不同.\"></a>注: 即使遍历字典时, 返回顺序也于存储顺序不同.</h6><h3 id=\"4-3-2-遍历字典中的所有键\"><a href=\"#4-3-2-遍历字典中的所有键\" class=\"headerlink\" title=\"4.3.2 遍历字典中的所有键\"></a>4.3.2 遍历字典中的所有键</h3><p>使用 <code>keys()</code><br>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favourite_languages = &#123;</span><br><span class=\"line\">    <span class=\"string\">'jen'</span>: <span class=\"string\">'python'</span>,</span><br><span class=\"line\">    <span class=\"string\">'sarah'</span>: <span class=\"string\">'c'</span>,</span><br><span class=\"line\">    <span class=\"string\">'edward'</span>: <span class=\"string\">'ruby'</span>,</span><br><span class=\"line\">    <span class=\"string\">'phil'</span>: <span class=\"string\">'python'</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> favourite_languages.keys():</span><br><span class=\"line\">    print(name.title())</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-6\"><a href=\"#Output-6\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Jen</span><br><span class=\"line\">Sarah</span><br><span class=\"line\">Edward</span><br><span class=\"line\">Phil</span><br></pre></td></tr></table></figure>\n<p>遍历字典时, 会默认遍历所有的键,<br>so:<br><code>for name in favourite_languages.keys()</code> == <code>for names in foavourite_languages</code></p>\n<h4 id=\"4-3-2-1-按顺序遍历字典中的所有键\"><a href=\"#4-3-2-1-按顺序遍历字典中的所有键\" class=\"headerlink\" title=\"4.3.2.1 按顺序遍历字典中的所有键\"></a>4.3.2.1 按顺序遍历字典中的所有键</h4><p>用 sorted() 创建按特定顺序排列的键的列表的副本<br>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> sorted(favourite_languages.keys()):</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"4-3-3-遍历字典中的所有值\"><a href=\"#4-3-3-遍历字典中的所有值\" class=\"headerlink\" title=\"4.3.3 遍历字典中的所有值\"></a>4.3.3 遍历字典中的所有值</h3><p>使用 value()<br>E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> language <span class=\"keyword\">in</span> favourite_languages.values():</span><br><span class=\"line\">``` </span><br><span class=\"line\">注: 该方法遍历所有值, 可能导致重复</span><br><span class=\"line\">为剔除重复项, 可使用集合 (set), 集合类似于列表, 但每个元素都是独一无二的.</span><br><span class=\"line\">```python</span><br><span class=\"line\"><span class=\"keyword\">for</span> language <span class=\"keyword\">in</span> set(favourite_languages.values()):</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-4-嵌套\"><a href=\"#4-4-嵌套\" class=\"headerlink\" title=\"4.4 嵌套\"></a>4.4 嵌套</h2><h3 id=\"4-4-1-字典列表\"><a href=\"#4-4-1-字典列表\" class=\"headerlink\" title=\"4.4.1 字典列表\"></a>4.4.1 字典列表</h3><p>E.g: ( aliens.py )<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alien_0 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>&#125;</span><br><span class=\"line\">alien_1 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'yellow'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">10</span>&#125;</span><br><span class=\"line\">alien_2 = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'red'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">15</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">aliens = [alien_0, alien_1, alien_2]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> alien <span class=\"keyword\">in</span> aliens:</span><br><span class=\"line\">    print(alien)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-7\"><a href=\"#Output-7\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;red&apos;, &apos;points&apos;: 15&#125;</span><br></pre></td></tr></table></figure>\n<p>E.g_2:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aliens = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> alien_number <span class=\"keyword\">in</span> range(<span class=\"number\">30</span>):</span><br><span class=\"line\">    new_alien = &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'green'</span>, <span class=\"string\">'points'</span>: <span class=\"number\">5</span>, <span class=\"string\">'speed'</span>: <span class=\"string\">'slow'</span>&#125;</span><br><span class=\"line\">    aliens.append(new_alien)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">for</span> alien <span class=\"keyword\">in</span> aliens[<span class=\"number\">0</span>:<span class=\"number\">3</span>]:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> alien[<span class=\"string\">'color'</span>] == <span class=\"string\">'green'</span>:</span><br><span class=\"line\">        alien[<span class=\"string\">'color'</span>] = <span class=\"string\">'yellow'</span></span><br><span class=\"line\">        alien[<span class=\"string\">'points'</span>] = <span class=\"number\">10</span></span><br><span class=\"line\">        alien[<span class=\"string\">'speed'</span>] = <span class=\"string\">'medium'</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> alien <span class=\"keyword\">in</span> aliens[:<span class=\"number\">5</span>]:</span><br><span class=\"line\">    print(alien)</span><br><span class=\"line\">print(<span class=\"string\">'...'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">'Total number of aliens: '</span> + str(len(aliens)))</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-8\"><a href=\"#Output-8\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10, &apos;speed&apos;: &apos;medium&apos;&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10, &apos;speed&apos;: &apos;medium&apos;&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10, &apos;speed&apos;: &apos;medium&apos;&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5, &apos;speed&apos;: &apos;slow&apos;&#125;</span><br><span class=\"line\">&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5, &apos;speed&apos;: &apos;slow&apos;&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-2-在字典中存储列表\"><a href=\"#4-4-2-在字典中存储列表\" class=\"headerlink\" title=\"4.4.2 在字典中存储列表\"></a>4.4.2 在字典中存储列表</h3><p>E.g: ( pizza.py )<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pizza = &#123;</span><br><span class=\"line\">    <span class=\"string\">'crust'</span>: <span class=\"string\">'thick'</span>,</span><br><span class=\"line\">    <span class=\"string\">'toppings'</span>: [<span class=\"string\">'mushrooms'</span>, <span class=\"string\">'extra cheese'</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">print(<span class=\"string\">'You ordered a '</span> + pizza[<span class=\"string\">'crust'</span>] + <span class=\"string\">'-crust pizza '</span> +</span><br><span class=\"line\">            <span class=\"string\">'with the following toppings: '</span>)</span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"keyword\">for</span> topping <span class=\"keyword\">in</span> pizza[<span class=\"string\">'toppings'</span>]:</span><br><span class=\"line\">    print(<span class=\"string\">'\\t'</span> + topping)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-9\"><a href=\"#Output-9\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">You ordered a thick-crust pizza with the following toppings: </span><br><span class=\"line\">\tmushrooms</span><br><span class=\"line\">\textra cheese</span><br></pre></td></tr></table></figure>\n<p>E.g_2:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">favourite_languages = &#123;</span><br><span class=\"line\">    <span class=\"string\">'jen'</span>: [<span class=\"string\">'python'</span>, <span class=\"string\">'ruby'</span>],</span><br><span class=\"line\">    <span class=\"string\">'sarah'</span>: [<span class=\"string\">'c'</span>],</span><br><span class=\"line\">    <span class=\"string\">'edward'</span>: [<span class=\"string\">'ruby'</span>, <span class=\"string\">'go'</span>],</span><br><span class=\"line\">    <span class=\"string\">'phil'</span>: [<span class=\"string\">'python'</span>, <span class=\"string\">'haskell'</span>],</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> name, languages <span class=\"keyword\">in</span> favourite_languages.items():</span><br><span class=\"line\">    print(<span class=\"string\">'\\n'</span> + name.title() + <span class=\"string\">\"'s favourite languages are:\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> language <span class=\"keyword\">in</span> languages:</span><br><span class=\"line\">        print(<span class=\"string\">\"\\t\"</span> + language.title())</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-10\"><a href=\"#Output-10\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Jen&apos;s favourite languages are:</span><br><span class=\"line\">\tPython</span><br><span class=\"line\">\tRuby</span><br><span class=\"line\"></span><br><span class=\"line\">Sarah&apos;s favourite languages are:</span><br><span class=\"line\">\tC</span><br><span class=\"line\"></span><br><span class=\"line\">Edward&apos;s favourite languages are:</span><br><span class=\"line\">\tRuby</span><br><span class=\"line\">\tGo</span><br><span class=\"line\"></span><br><span class=\"line\">Phil&apos;s favourite languages are:</span><br><span class=\"line\">\tPython</span><br><span class=\"line\">\tHaskell</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-4-3-在字典中存储字典\"><a href=\"#4-4-3-在字典中存储字典\" class=\"headerlink\" title=\"4.4.3 在字典中存储字典\"></a>4.4.3 在字典中存储字典</h3><p>E.g: ( many_users.py )<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">users = &#123;</span><br><span class=\"line\">    <span class=\"string\">'aesinstein'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'first'</span>: <span class=\"string\">'albert'</span>,</span><br><span class=\"line\">        <span class=\"string\">'last'</span>: <span class=\"string\">'einstein'</span>,</span><br><span class=\"line\">        <span class=\"string\">'location'</span>: <span class=\"string\">'princeton'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"string\">'mcurie'</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">'first'</span>: <span class=\"string\">'marie'</span>,</span><br><span class=\"line\">        <span class=\"string\">'last'</span>: <span class=\"string\">'curie'</span>,</span><br><span class=\"line\">        <span class=\"string\">'location'</span>: <span class=\"string\">'paris'</span>,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">for</span> username, user_info <span class=\"keyword\">in</span> users.items():</span><br><span class=\"line\">    print(<span class=\"string\">'\\nUsername: '</span> + username)</span><br><span class=\"line\">    full_name = user_info[<span class=\"string\">'first'</span>] + <span class=\"string\">' '</span> +  user_info[<span class=\"string\">'last'</span>]</span><br><span class=\"line\">    location = user_info[<span class=\"string\">'location'</span>]</span><br><span class=\"line\">     </span><br><span class=\"line\">    print(<span class=\"string\">'\\tFull name: '</span> + full_name.title())</span><br><span class=\"line\">    print(<span class=\"string\">'\\tLocation: '</span> + location.title())</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-11\"><a href=\"#Output-11\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Username: aesinstein</span><br><span class=\"line\">\tFull name: Albert Einstein</span><br><span class=\"line\">\tLocation: Princeton</span><br><span class=\"line\"></span><br><span class=\"line\">Username: mcurie</span><br><span class=\"line\">\tFull name: Marie Curie</span><br><span class=\"line\">\tLocation: Paris</span><br></pre></td></tr></table></figure>"},{"title":"Python 列表","date":"2018-11-26T03:32:37.618Z","author":"OCD","_content":"使用 `[]` 表示列表\n\n<!-- more -->\n\n## 2.1. Example -- bicycles.py\n\n```python\nbicycles = ['trek', 'cannondale', 'redline', 'specialized'] \nprint( bicycles)\n```\n__The output is__ `['trek', 'cannondale', 'redline', 'specialized']`\n\n**输出元素** --> `print(bicycles[0])` to print `trek`\n\n# START FROM 0!!!!!\n\n注: 使用 `bicycle[-1]` 以取得 bicycle 中的倒数第一个元素\n&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;`bicycle[-2]` 以取得 bicycle 中的倒数第二个元素\n&ensp;&ensp;&ensp;&ensp;·······\n&ensp;&ensp;&ensp;&ensp;依次类推\n<br />    \n\n## 2.2. 改变一个元素的值 Example --> change 'trek' to 'test'\n\n```python\nbicycles[0] = 'test'\n```\n<br />\n\n## 2.3. 使用append() 将元素添加到列表末尾\n```python\nbicycles.append('test_end')\n```\n\none more example here\n\n```python\nmotorbicycles = []\nmotorbicycles.append('cannondale')\nmotorbicycles.append('redline')\nmotorbicycles.append('specialized')\nprint(motorbicycles)\n```\n\n###### Output `['cannondale', 'reline', 'specialized']`\n<br />\n\n## 2.4. 使用 insert() 向列表添加元素\n注: motorbicycles 与上文相同.\n```python\nmotorbicycles.insert(0, 'ducati')\nprint(motorbicycles)\n```\n\n###### Output `['ducati', 'cannondale', 'realine', 'specialized']`\n<br />\n\n## 2.5. 删除语句\n\n### 2.5.1 使用 del 语句\n```python\ndel motorbicycles[0]\nprint(motorbicycles)\n```\n###### Output `['cannondale', 'realine', 'specialized']`\n\n### 2.5.2 使用 pop() 删除元素\npop()可删除列表末尾的元素，并让你能够接着使用它。\n```python\nmotorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\npopped_motorcycle = motorcycles.pop()\nprint(motorcycles)\nprint(popped_motorcycle)\n```\n\n###### Output:\n`['honda', 'yamaha', 'suzuki']`\n`['honda', 'yamaha']`\n`suzuki`\n使用 pop(__int__) 来确定弹出位置 `motorcycles.pop(0)` 为弹出第0(1)个位置的 _honda_\n\n### 2.5.3 使用 remove 按值删除元素\n` motorcycles.remove('honda')` 会删除 __honda__\n\n\n## 2.6 使用 sort() 对列表进行永久排序\n\n cars.py\n```python\ncars = ['bmw', 'audi', 'toyota', 'subaru']\ncars.sort()\nprint(cars)\ncars.sort(reverse=True)\nprint(cars)\n```\n\n###### output: \n\n`['audi', 'bmw', 'subaru', 'toyota']`\n\n`['toyota', 'subaru', 'bmw', 'audi']`\n\n## 2.7 使用 sorted() 对列表进行临时排序\n\n```python\ncars = ['bmw', 'audi', 'toyota', 'subaru']\n#cars.sort()\nprint(cars)\nprint(sorted(cars))\nprint(cars)\nprint(sorted(cars, reverse=True))\n```\n###### output:\n`['bmw', 'audi', 'toyota', 'subaru']`\n\n`['audi', 'bmw', 'subaru', 'toyota']`\n\n`['bmw', 'audi', 'toyota', 'subaru']`\n\n`['toyota', 'subaru', 'bmw', 'audi']`\n\n## 2.8 使用 len() 确定列表长度\n\n```python\nlen(cars)\n```\n\n## 2.9 遍历整个列表\n\nfor 循环\n                   \n```python\nmagicians = ['alice', 'david', 'carolina']\nfor magician in magicians:\n  print(magician)\n```\n###### 每次从列表取名字, 存在 `magician` 中并打印 (`print`)\n\n每个缩进的代码行都是循环的一部分，且将针对列表中的每个值都执行一次。因此，可对列表中的每个值执行任意次数的操作。\n\n## 2.10 创建数值列表\n\n### 2.10.1 使用 range()\n```python \nfor value in range(1,5)\n  print(value)\n```\n\n###### Output:\n`1`\n`2`\n`3`\n`4`\n\n在这个示例 中，range()只是打印数字1~ 4， 这是你在编程语言中经常看到的差一行为的结果。函数 range() 让 Python 从你指定的第一个值开始 数，并在到达你 指定的第二个值后停止，因此输出不包含 第二个值（这里 为 5）。\n\n\n__E.g: To print 1 2 3 4 5, use:__\n ```python\n for value in range(1, 6)\n  print(value)\n```\n\n### 2.10.2 使用 list() 和 range() 建表\n```python\nnumbers = list(range(1,6))\nprint(numbers)\n# 设置步长\neven_number = list(range(2,11,2))\nprint(even_number)\n```\n###### Output:\n`[1, 2, 3, 4, 5]`\n`[2, 4, 6, 8, 10]`\n\n_平方数组_\n```python\nsquares = []\nfor value in range(1, 11):\n  squares.append(value**2)\n  \nprint(squares)\n```\n\n## 2.11 对数字列表进行简单计算\n```python\ndigits = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\nprint(min(digits))\nprint(max(digits))\nprint(sum(digits))\n```\n###### Output:\n`0`\n`9`\n`45`\n### 2.11.1列表解析\n```python\nsquares = [value**2 for value in range(1, 11)]\nprint(squares)\n```\n###### Output: `[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]`\n\n## 2.12 切片\n```python\nplayers = ['charles', 'martina', 'michael', 'florence', 'eli']\nprint(players[0:3]\n```\n###### Output: `['charles', 'martina', 'michael']`\n\n### 遍历切片\n处理 列表 的 部分 元素—— Python 称之为 切片。\n\n```python\nfor player in players[:3]:\n    print(player.title())\n```\n\n## 2.13 复制列表\n_foods.py_\n```python\nmy_foods = ['pizza', 'falafel', 'carrot cake']\nfriends_foods = my_foods[:]\n\nprint(\"My favorite foods are:\")\nprint(my_foods)\n\nprint(\"\\nMy friend's favorite foods are:\")\nprint(friend_foods)\n```\n这实际上产生了2个列表，他们是独立的。E.g:\n```python\nfriends_foods.append('ice cream')\nprint(my_foods)\nprint(friends_foods)\n```\n此代码中输出并不相同，可见相互独立。\n\n__需要用切片复制列表，否则不能得到两个列表__\n```python\nmy_foods = ['pizza', 'falafel', 'carrot cake']\n\nfriend_foods = my_foods\n\nmy_foods.append('cannoli')\nfriend_food.append('ice cream')\n\nprint(my_foods)\nprint(friend_food)\n```\n实际上, 输出是一样的\n\n## 2.14 元组\nPython 将不能修改的值称为不可变的，而不可变的列表被称为元组。\n\n### 2.14.1 定义元组\n使用圆括号标识\n\n_dimensions.py_\n```python\ndimensions = (200, 50)\nprint(dimensions[0])\nprint(dimensions[1])\n```\n###### Output:\n`200`\n`50`\n\n值不能被改变:\n`dimensions[0] = 50`\n###### Output:\n```\nTraceback (most recent call last): File \"dimensions.py\", line 3, in < module> dimensions[ 0] = 250 TypeError: 'tuple' object does not support item assignment\n```\n### 遍历元组中所有值\n```python\ndimensions = (50, 200)\nfor dimension in dimensions:\n    print(dimension)\n```\n###### Output:\n`200`\n`50`\n\n","source":"_posts/2017-11-11-python-list.md","raw":"---\ntitle: Python 列表\ndate: 2017-11-11  2\nauthor: \"OCD\"\ncategory:\n    - Programming\ntags:\n  - Python\n  - Develop\n---\n使用 `[]` 表示列表\n\n<!-- more -->\n\n## 2.1. Example -- bicycles.py\n\n```python\nbicycles = ['trek', 'cannondale', 'redline', 'specialized'] \nprint( bicycles)\n```\n__The output is__ `['trek', 'cannondale', 'redline', 'specialized']`\n\n**输出元素** --> `print(bicycles[0])` to print `trek`\n\n# START FROM 0!!!!!\n\n注: 使用 `bicycle[-1]` 以取得 bicycle 中的倒数第一个元素\n&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;`bicycle[-2]` 以取得 bicycle 中的倒数第二个元素\n&ensp;&ensp;&ensp;&ensp;·······\n&ensp;&ensp;&ensp;&ensp;依次类推\n<br />    \n\n## 2.2. 改变一个元素的值 Example --> change 'trek' to 'test'\n\n```python\nbicycles[0] = 'test'\n```\n<br />\n\n## 2.3. 使用append() 将元素添加到列表末尾\n```python\nbicycles.append('test_end')\n```\n\none more example here\n\n```python\nmotorbicycles = []\nmotorbicycles.append('cannondale')\nmotorbicycles.append('redline')\nmotorbicycles.append('specialized')\nprint(motorbicycles)\n```\n\n###### Output `['cannondale', 'reline', 'specialized']`\n<br />\n\n## 2.4. 使用 insert() 向列表添加元素\n注: motorbicycles 与上文相同.\n```python\nmotorbicycles.insert(0, 'ducati')\nprint(motorbicycles)\n```\n\n###### Output `['ducati', 'cannondale', 'realine', 'specialized']`\n<br />\n\n## 2.5. 删除语句\n\n### 2.5.1 使用 del 语句\n```python\ndel motorbicycles[0]\nprint(motorbicycles)\n```\n###### Output `['cannondale', 'realine', 'specialized']`\n\n### 2.5.2 使用 pop() 删除元素\npop()可删除列表末尾的元素，并让你能够接着使用它。\n```python\nmotorcycles = ['honda', 'yamaha', 'suzuki']\nprint(motorcycles)\npopped_motorcycle = motorcycles.pop()\nprint(motorcycles)\nprint(popped_motorcycle)\n```\n\n###### Output:\n`['honda', 'yamaha', 'suzuki']`\n`['honda', 'yamaha']`\n`suzuki`\n使用 pop(__int__) 来确定弹出位置 `motorcycles.pop(0)` 为弹出第0(1)个位置的 _honda_\n\n### 2.5.3 使用 remove 按值删除元素\n` motorcycles.remove('honda')` 会删除 __honda__\n\n\n## 2.6 使用 sort() 对列表进行永久排序\n\n cars.py\n```python\ncars = ['bmw', 'audi', 'toyota', 'subaru']\ncars.sort()\nprint(cars)\ncars.sort(reverse=True)\nprint(cars)\n```\n\n###### output: \n\n`['audi', 'bmw', 'subaru', 'toyota']`\n\n`['toyota', 'subaru', 'bmw', 'audi']`\n\n## 2.7 使用 sorted() 对列表进行临时排序\n\n```python\ncars = ['bmw', 'audi', 'toyota', 'subaru']\n#cars.sort()\nprint(cars)\nprint(sorted(cars))\nprint(cars)\nprint(sorted(cars, reverse=True))\n```\n###### output:\n`['bmw', 'audi', 'toyota', 'subaru']`\n\n`['audi', 'bmw', 'subaru', 'toyota']`\n\n`['bmw', 'audi', 'toyota', 'subaru']`\n\n`['toyota', 'subaru', 'bmw', 'audi']`\n\n## 2.8 使用 len() 确定列表长度\n\n```python\nlen(cars)\n```\n\n## 2.9 遍历整个列表\n\nfor 循环\n                   \n```python\nmagicians = ['alice', 'david', 'carolina']\nfor magician in magicians:\n  print(magician)\n```\n###### 每次从列表取名字, 存在 `magician` 中并打印 (`print`)\n\n每个缩进的代码行都是循环的一部分，且将针对列表中的每个值都执行一次。因此，可对列表中的每个值执行任意次数的操作。\n\n## 2.10 创建数值列表\n\n### 2.10.1 使用 range()\n```python \nfor value in range(1,5)\n  print(value)\n```\n\n###### Output:\n`1`\n`2`\n`3`\n`4`\n\n在这个示例 中，range()只是打印数字1~ 4， 这是你在编程语言中经常看到的差一行为的结果。函数 range() 让 Python 从你指定的第一个值开始 数，并在到达你 指定的第二个值后停止，因此输出不包含 第二个值（这里 为 5）。\n\n\n__E.g: To print 1 2 3 4 5, use:__\n ```python\n for value in range(1, 6)\n  print(value)\n```\n\n### 2.10.2 使用 list() 和 range() 建表\n```python\nnumbers = list(range(1,6))\nprint(numbers)\n# 设置步长\neven_number = list(range(2,11,2))\nprint(even_number)\n```\n###### Output:\n`[1, 2, 3, 4, 5]`\n`[2, 4, 6, 8, 10]`\n\n_平方数组_\n```python\nsquares = []\nfor value in range(1, 11):\n  squares.append(value**2)\n  \nprint(squares)\n```\n\n## 2.11 对数字列表进行简单计算\n```python\ndigits = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]\nprint(min(digits))\nprint(max(digits))\nprint(sum(digits))\n```\n###### Output:\n`0`\n`9`\n`45`\n### 2.11.1列表解析\n```python\nsquares = [value**2 for value in range(1, 11)]\nprint(squares)\n```\n###### Output: `[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]`\n\n## 2.12 切片\n```python\nplayers = ['charles', 'martina', 'michael', 'florence', 'eli']\nprint(players[0:3]\n```\n###### Output: `['charles', 'martina', 'michael']`\n\n### 遍历切片\n处理 列表 的 部分 元素—— Python 称之为 切片。\n\n```python\nfor player in players[:3]:\n    print(player.title())\n```\n\n## 2.13 复制列表\n_foods.py_\n```python\nmy_foods = ['pizza', 'falafel', 'carrot cake']\nfriends_foods = my_foods[:]\n\nprint(\"My favorite foods are:\")\nprint(my_foods)\n\nprint(\"\\nMy friend's favorite foods are:\")\nprint(friend_foods)\n```\n这实际上产生了2个列表，他们是独立的。E.g:\n```python\nfriends_foods.append('ice cream')\nprint(my_foods)\nprint(friends_foods)\n```\n此代码中输出并不相同，可见相互独立。\n\n__需要用切片复制列表，否则不能得到两个列表__\n```python\nmy_foods = ['pizza', 'falafel', 'carrot cake']\n\nfriend_foods = my_foods\n\nmy_foods.append('cannoli')\nfriend_food.append('ice cream')\n\nprint(my_foods)\nprint(friend_food)\n```\n实际上, 输出是一样的\n\n## 2.14 元组\nPython 将不能修改的值称为不可变的，而不可变的列表被称为元组。\n\n### 2.14.1 定义元组\n使用圆括号标识\n\n_dimensions.py_\n```python\ndimensions = (200, 50)\nprint(dimensions[0])\nprint(dimensions[1])\n```\n###### Output:\n`200`\n`50`\n\n值不能被改变:\n`dimensions[0] = 50`\n###### Output:\n```\nTraceback (most recent call last): File \"dimensions.py\", line 3, in < module> dimensions[ 0] = 250 TypeError: 'tuple' object does not support item assignment\n```\n### 遍历元组中所有值\n```python\ndimensions = (50, 200)\nfor dimension in dimensions:\n    print(dimension)\n```\n###### Output:\n`200`\n`50`\n\n","slug":"2017-11-11-python-list","published":1,"updated":"2018-11-26T03:32:37.618Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8w90008rmtuwmeqdgoh","content":"<p>使用 <code>[]</code> 表示列表</p>\n<a id=\"more\"></a>\n<h2 id=\"2-1-Example-–-bicycles-py\"><a href=\"#2-1-Example-–-bicycles-py\" class=\"headerlink\" title=\"2.1. Example – bicycles.py\"></a>2.1. Example – bicycles.py</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bicycles = [<span class=\"string\">'trek'</span>, <span class=\"string\">'cannondale'</span>, <span class=\"string\">'redline'</span>, <span class=\"string\">'specialized'</span>] </span><br><span class=\"line\">print( bicycles)</span><br></pre></td></tr></table></figure>\n<p><strong>The output is</strong> <code>[&#39;trek&#39;, &#39;cannondale&#39;, &#39;redline&#39;, &#39;specialized&#39;]</code></p>\n<p><strong>输出元素</strong> –&gt; <code>print(bicycles[0])</code> to print <code>trek</code></p>\n<h1 id=\"START-FROM-0\"><a href=\"#START-FROM-0\" class=\"headerlink\" title=\"START FROM 0!!!!!\"></a>START FROM 0!!!!!</h1><p>注: 使用 <code>bicycle[-1]</code> 以取得 bicycle 中的倒数第一个元素<br>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<code>bicycle[-2]</code> 以取得 bicycle 中的倒数第二个元素<br>&ensp;&ensp;&ensp;&ensp;·······<br>&ensp;&ensp;&ensp;&ensp;依次类推<br><br>    </p>\n<h2 id=\"2-2-改变一个元素的值-Example-–-gt-change-‘trek’-to-‘test’\"><a href=\"#2-2-改变一个元素的值-Example-–-gt-change-‘trek’-to-‘test’\" class=\"headerlink\" title=\"2.2. 改变一个元素的值 Example –&gt; change ‘trek’ to ‘test’\"></a>2.2. 改变一个元素的值 Example –&gt; change ‘trek’ to ‘test’</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bicycles[<span class=\"number\">0</span>] = <span class=\"string\">'test'</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h2 id=\"2-3-使用append-将元素添加到列表末尾\"><a href=\"#2-3-使用append-将元素添加到列表末尾\" class=\"headerlink\" title=\"2.3. 使用append() 将元素添加到列表末尾\"></a>2.3. 使用append() 将元素添加到列表末尾</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bicycles.append(<span class=\"string\">'test_end'</span>)</span><br></pre></td></tr></table></figure>\n<p>one more example here</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">motorbicycles = []</span><br><span class=\"line\">motorbicycles.append(<span class=\"string\">'cannondale'</span>)</span><br><span class=\"line\">motorbicycles.append(<span class=\"string\">'redline'</span>)</span><br><span class=\"line\">motorbicycles.append(<span class=\"string\">'specialized'</span>)</span><br><span class=\"line\">print(motorbicycles)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-39-cannondale-39-39-reline-39-39-specialized-39\"><a href=\"#Output-39-cannondale-39-39-reline-39-39-specialized-39\" class=\"headerlink\" title=\"Output [&#39;cannondale&#39;, &#39;reline&#39;, &#39;specialized&#39;]\"></a>Output <code>[&#39;cannondale&#39;, &#39;reline&#39;, &#39;specialized&#39;]</code></h6><p><br></p>\n<h2 id=\"2-4-使用-insert-向列表添加元素\"><a href=\"#2-4-使用-insert-向列表添加元素\" class=\"headerlink\" title=\"2.4. 使用 insert() 向列表添加元素\"></a>2.4. 使用 insert() 向列表添加元素</h2><p>注: motorbicycles 与上文相同.<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">motorbicycles.insert(<span class=\"number\">0</span>, <span class=\"string\">'ducati'</span>)</span><br><span class=\"line\">print(motorbicycles)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-39-ducati-39-39-cannondale-39-39-realine-39-39-specialized-39\"><a href=\"#Output-39-ducati-39-39-cannondale-39-39-realine-39-39-specialized-39\" class=\"headerlink\" title=\"Output [&#39;ducati&#39;, &#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]\"></a>Output <code>[&#39;ducati&#39;, &#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]</code></h6><p><br></p>\n<h2 id=\"2-5-删除语句\"><a href=\"#2-5-删除语句\" class=\"headerlink\" title=\"2.5. 删除语句\"></a>2.5. 删除语句</h2><h3 id=\"2-5-1-使用-del-语句\"><a href=\"#2-5-1-使用-del-语句\" class=\"headerlink\" title=\"2.5.1 使用 del 语句\"></a>2.5.1 使用 del 语句</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">del</span> motorbicycles[<span class=\"number\">0</span>]</span><br><span class=\"line\">print(motorbicycles)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-39-cannondale-39-39-realine-39-39-specialized-39\"><a href=\"#Output-39-cannondale-39-39-realine-39-39-specialized-39\" class=\"headerlink\" title=\"Output [&#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]\"></a>Output <code>[&#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]</code></h6><h3 id=\"2-5-2-使用-pop-删除元素\"><a href=\"#2-5-2-使用-pop-删除元素\" class=\"headerlink\" title=\"2.5.2 使用 pop() 删除元素\"></a>2.5.2 使用 pop() 删除元素</h3><p>pop()可删除列表末尾的元素，并让你能够接着使用它。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">motorcycles = [<span class=\"string\">'honda'</span>, <span class=\"string\">'yamaha'</span>, <span class=\"string\">'suzuki'</span>]</span><br><span class=\"line\">print(motorcycles)</span><br><span class=\"line\">popped_motorcycle = motorcycles.pop()</span><br><span class=\"line\">print(motorcycles)</span><br><span class=\"line\">print(popped_motorcycle)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>[&#39;honda&#39;, &#39;yamaha&#39;, &#39;suzuki&#39;]</code><br><code>[&#39;honda&#39;, &#39;yamaha&#39;]</code><br><code>suzuki</code><br>使用 pop(<strong>int</strong>) 来确定弹出位置 <code>motorcycles.pop(0)</code> 为弹出第0(1)个位置的 <em>honda</em></p>\n<h3 id=\"2-5-3-使用-remove-按值删除元素\"><a href=\"#2-5-3-使用-remove-按值删除元素\" class=\"headerlink\" title=\"2.5.3 使用 remove 按值删除元素\"></a>2.5.3 使用 remove 按值删除元素</h3><p><code>motorcycles.remove(&#39;honda&#39;)</code> 会删除 <strong>honda</strong></p>\n<h2 id=\"2-6-使用-sort-对列表进行永久排序\"><a href=\"#2-6-使用-sort-对列表进行永久排序\" class=\"headerlink\" title=\"2.6 使用 sort() 对列表进行永久排序\"></a>2.6 使用 sort() 对列表进行永久排序</h2><p> cars.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cars = [<span class=\"string\">'bmw'</span>, <span class=\"string\">'audi'</span>, <span class=\"string\">'toyota'</span>, <span class=\"string\">'subaru'</span>]</span><br><span class=\"line\">cars.sort()</span><br><span class=\"line\">print(cars)</span><br><span class=\"line\">cars.sort(reverse=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">print(cars)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"output\"><a href=\"#output\" class=\"headerlink\" title=\"output:\"></a>output:</h6><p><code>[&#39;audi&#39;, &#39;bmw&#39;, &#39;subaru&#39;, &#39;toyota&#39;]</code></p>\n<p><code>[&#39;toyota&#39;, &#39;subaru&#39;, &#39;bmw&#39;, &#39;audi&#39;]</code></p>\n<h2 id=\"2-7-使用-sorted-对列表进行临时排序\"><a href=\"#2-7-使用-sorted-对列表进行临时排序\" class=\"headerlink\" title=\"2.7 使用 sorted() 对列表进行临时排序\"></a>2.7 使用 sorted() 对列表进行临时排序</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cars = [<span class=\"string\">'bmw'</span>, <span class=\"string\">'audi'</span>, <span class=\"string\">'toyota'</span>, <span class=\"string\">'subaru'</span>]</span><br><span class=\"line\"><span class=\"comment\">#cars.sort()</span></span><br><span class=\"line\">print(cars)</span><br><span class=\"line\">print(sorted(cars))</span><br><span class=\"line\">print(cars)</span><br><span class=\"line\">print(sorted(cars, reverse=<span class=\"keyword\">True</span>))</span><br></pre></td></tr></table></figure>\n<h6 id=\"output-1\"><a href=\"#output-1\" class=\"headerlink\" title=\"output:\"></a>output:</h6><p><code>[&#39;bmw&#39;, &#39;audi&#39;, &#39;toyota&#39;, &#39;subaru&#39;]</code></p>\n<p><code>[&#39;audi&#39;, &#39;bmw&#39;, &#39;subaru&#39;, &#39;toyota&#39;]</code></p>\n<p><code>[&#39;bmw&#39;, &#39;audi&#39;, &#39;toyota&#39;, &#39;subaru&#39;]</code></p>\n<p><code>[&#39;toyota&#39;, &#39;subaru&#39;, &#39;bmw&#39;, &#39;audi&#39;]</code></p>\n<h2 id=\"2-8-使用-len-确定列表长度\"><a href=\"#2-8-使用-len-确定列表长度\" class=\"headerlink\" title=\"2.8 使用 len() 确定列表长度\"></a>2.8 使用 len() 确定列表长度</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">len(cars)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-9-遍历整个列表\"><a href=\"#2-9-遍历整个列表\" class=\"headerlink\" title=\"2.9 遍历整个列表\"></a>2.9 遍历整个列表</h2><p>for 循环</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">magicians = [<span class=\"string\">'alice'</span>, <span class=\"string\">'david'</span>, <span class=\"string\">'carolina'</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> magician <span class=\"keyword\">in</span> magicians:</span><br><span class=\"line\">  print(magician)</span><br></pre></td></tr></table></figure>\n<h6 id=\"每次从列表取名字-存在-magician-中并打印-print\"><a href=\"#每次从列表取名字-存在-magician-中并打印-print\" class=\"headerlink\" title=\"每次从列表取名字, 存在 magician 中并打印 (print)\"></a>每次从列表取名字, 存在 <code>magician</code> 中并打印 (<code>print</code>)</h6><p>每个缩进的代码行都是循环的一部分，且将针对列表中的每个值都执行一次。因此，可对列表中的每个值执行任意次数的操作。</p>\n<h2 id=\"2-10-创建数值列表\"><a href=\"#2-10-创建数值列表\" class=\"headerlink\" title=\"2.10 创建数值列表\"></a>2.10 创建数值列表</h2><h3 id=\"2-10-1-使用-range\"><a href=\"#2-10-1-使用-range\" class=\"headerlink\" title=\"2.10.1 使用 range()\"></a>2.10.1 使用 range()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">5</span>)</span><br><span class=\"line\">  print(value)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>1</code><br><code>2</code><br><code>3</code><br><code>4</code></p>\n<p>在这个示例 中，range()只是打印数字1~ 4， 这是你在编程语言中经常看到的差一行为的结果。函数 range() 让 Python 从你指定的第一个值开始 数，并在到达你 指定的第二个值后停止，因此输出不包含 第二个值（这里 为 5）。</p>\n<p><strong>E.g: To print 1 2 3 4 5, use:</strong><br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\"> print(value)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-10-2-使用-list-和-range-建表\"><a href=\"#2-10-2-使用-list-和-range-建表\" class=\"headerlink\" title=\"2.10.2 使用 list() 和 range() 建表\"></a>2.10.2 使用 list() 和 range() 建表</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">numbers = list(range(<span class=\"number\">1</span>,<span class=\"number\">6</span>))</span><br><span class=\"line\">print(numbers)</span><br><span class=\"line\"><span class=\"comment\"># 设置步长</span></span><br><span class=\"line\">even_number = list(range(<span class=\"number\">2</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>))</span><br><span class=\"line\">print(even_number)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>[1, 2, 3, 4, 5]</code><br><code>[2, 4, 6, 8, 10]</code></p>\n<p><em>平方数组</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">squares = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">11</span>):</span><br><span class=\"line\">  squares.append(value**<span class=\"number\">2</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">print(squares)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-11-对数字列表进行简单计算\"><a href=\"#2-11-对数字列表进行简单计算\" class=\"headerlink\" title=\"2.11 对数字列表进行简单计算\"></a>2.11 对数字列表进行简单计算</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">digits = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">print(min(digits))</span><br><span class=\"line\">print(max(digits))</span><br><span class=\"line\">print(sum(digits))</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>0</code><br><code>9</code><br><code>45</code></p>\n<h3 id=\"2-11-1列表解析\"><a href=\"#2-11-1列表解析\" class=\"headerlink\" title=\"2.11.1列表解析\"></a>2.11.1列表解析</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">squares = [value**<span class=\"number\">2</span> <span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">11</span>)]</span><br><span class=\"line\">print(squares)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-1-4-9-16-25-36-49-64-81-100\"><a href=\"#Output-1-4-9-16-25-36-49-64-81-100\" class=\"headerlink\" title=\"Output: [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\"></a>Output: <code>[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</code></h6><h2 id=\"2-12-切片\"><a href=\"#2-12-切片\" class=\"headerlink\" title=\"2.12 切片\"></a>2.12 切片</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">players = [<span class=\"string\">'charles'</span>, <span class=\"string\">'martina'</span>, <span class=\"string\">'michael'</span>, <span class=\"string\">'florence'</span>, <span class=\"string\">'eli'</span>]</span><br><span class=\"line\">print(players[<span class=\"number\">0</span>:<span class=\"number\">3</span>]</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-39-charles-39-39-martina-39-39-michael-39\"><a href=\"#Output-39-charles-39-39-martina-39-39-michael-39\" class=\"headerlink\" title=\"Output: [&#39;charles&#39;, &#39;martina&#39;, &#39;michael&#39;]\"></a>Output: <code>[&#39;charles&#39;, &#39;martina&#39;, &#39;michael&#39;]</code></h6><h3 id=\"遍历切片\"><a href=\"#遍历切片\" class=\"headerlink\" title=\"遍历切片\"></a>遍历切片</h3><p>处理 列表 的 部分 元素—— Python 称之为 切片。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> player <span class=\"keyword\">in</span> players[:<span class=\"number\">3</span>]:</span><br><span class=\"line\">    print(player.title())</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-13-复制列表\"><a href=\"#2-13-复制列表\" class=\"headerlink\" title=\"2.13 复制列表\"></a>2.13 复制列表</h2><p><em>foods.py</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my_foods = [<span class=\"string\">'pizza'</span>, <span class=\"string\">'falafel'</span>, <span class=\"string\">'carrot cake'</span>]</span><br><span class=\"line\">friends_foods = my_foods[:]</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"My favorite foods are:\"</span>)</span><br><span class=\"line\">print(my_foods)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"\\nMy friend's favorite foods are:\"</span>)</span><br><span class=\"line\">print(friend_foods)</span><br></pre></td></tr></table></figure></p>\n<p>这实际上产生了2个列表，他们是独立的。E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">friends_foods.append(<span class=\"string\">'ice cream'</span>)</span><br><span class=\"line\">print(my_foods)</span><br><span class=\"line\">print(friends_foods)</span><br></pre></td></tr></table></figure></p>\n<p>此代码中输出并不相同，可见相互独立。</p>\n<p><strong>需要用切片复制列表，否则不能得到两个列表</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my_foods = [<span class=\"string\">'pizza'</span>, <span class=\"string\">'falafel'</span>, <span class=\"string\">'carrot cake'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">friend_foods = my_foods</span><br><span class=\"line\"></span><br><span class=\"line\">my_foods.append(<span class=\"string\">'cannoli'</span>)</span><br><span class=\"line\">friend_food.append(<span class=\"string\">'ice cream'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(my_foods)</span><br><span class=\"line\">print(friend_food)</span><br></pre></td></tr></table></figure></p>\n<p>实际上, 输出是一样的</p>\n<h2 id=\"2-14-元组\"><a href=\"#2-14-元组\" class=\"headerlink\" title=\"2.14 元组\"></a>2.14 元组</h2><p>Python 将不能修改的值称为不可变的，而不可变的列表被称为元组。</p>\n<h3 id=\"2-14-1-定义元组\"><a href=\"#2-14-1-定义元组\" class=\"headerlink\" title=\"2.14.1 定义元组\"></a>2.14.1 定义元组</h3><p>使用圆括号标识</p>\n<p><em>dimensions.py</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dimensions = (<span class=\"number\">200</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">print(dimensions[<span class=\"number\">0</span>])</span><br><span class=\"line\">print(dimensions[<span class=\"number\">1</span>])</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>200</code><br><code>50</code></p>\n<p>值不能被改变:<br><code>dimensions[0] = 50</code></p>\n<h6 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Traceback (most recent call last): File &quot;dimensions.py&quot;, line 3, in &lt; module&gt; dimensions[ 0] = 250 TypeError: &apos;tuple&apos; object does not support item assignment</span><br></pre></td></tr></table></figure>\n<h3 id=\"遍历元组中所有值\"><a href=\"#遍历元组中所有值\" class=\"headerlink\" title=\"遍历元组中所有值\"></a>遍历元组中所有值</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dimensions = (<span class=\"number\">50</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> dimension <span class=\"keyword\">in</span> dimensions:</span><br><span class=\"line\">    print(dimension)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-6\"><a href=\"#Output-6\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>200</code><br><code>50</code></p>\n","site":{"data":{}},"excerpt":"<p>使用 <code>[]</code> 表示列表</p>","more":"<h2 id=\"2-1-Example-–-bicycles-py\"><a href=\"#2-1-Example-–-bicycles-py\" class=\"headerlink\" title=\"2.1. Example – bicycles.py\"></a>2.1. Example – bicycles.py</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bicycles = [<span class=\"string\">'trek'</span>, <span class=\"string\">'cannondale'</span>, <span class=\"string\">'redline'</span>, <span class=\"string\">'specialized'</span>] </span><br><span class=\"line\">print( bicycles)</span><br></pre></td></tr></table></figure>\n<p><strong>The output is</strong> <code>[&#39;trek&#39;, &#39;cannondale&#39;, &#39;redline&#39;, &#39;specialized&#39;]</code></p>\n<p><strong>输出元素</strong> –&gt; <code>print(bicycles[0])</code> to print <code>trek</code></p>\n<h1 id=\"START-FROM-0\"><a href=\"#START-FROM-0\" class=\"headerlink\" title=\"START FROM 0!!!!!\"></a>START FROM 0!!!!!</h1><p>注: 使用 <code>bicycle[-1]</code> 以取得 bicycle 中的倒数第一个元素<br>&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;<code>bicycle[-2]</code> 以取得 bicycle 中的倒数第二个元素<br>&ensp;&ensp;&ensp;&ensp;·······<br>&ensp;&ensp;&ensp;&ensp;依次类推<br><br>    </p>\n<h2 id=\"2-2-改变一个元素的值-Example-–-gt-change-‘trek’-to-‘test’\"><a href=\"#2-2-改变一个元素的值-Example-–-gt-change-‘trek’-to-‘test’\" class=\"headerlink\" title=\"2.2. 改变一个元素的值 Example –&gt; change ‘trek’ to ‘test’\"></a>2.2. 改变一个元素的值 Example –&gt; change ‘trek’ to ‘test’</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bicycles[<span class=\"number\">0</span>] = <span class=\"string\">'test'</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h2 id=\"2-3-使用append-将元素添加到列表末尾\"><a href=\"#2-3-使用append-将元素添加到列表末尾\" class=\"headerlink\" title=\"2.3. 使用append() 将元素添加到列表末尾\"></a>2.3. 使用append() 将元素添加到列表末尾</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bicycles.append(<span class=\"string\">'test_end'</span>)</span><br></pre></td></tr></table></figure>\n<p>one more example here</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">motorbicycles = []</span><br><span class=\"line\">motorbicycles.append(<span class=\"string\">'cannondale'</span>)</span><br><span class=\"line\">motorbicycles.append(<span class=\"string\">'redline'</span>)</span><br><span class=\"line\">motorbicycles.append(<span class=\"string\">'specialized'</span>)</span><br><span class=\"line\">print(motorbicycles)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-39-cannondale-39-39-reline-39-39-specialized-39\"><a href=\"#Output-39-cannondale-39-39-reline-39-39-specialized-39\" class=\"headerlink\" title=\"Output [&#39;cannondale&#39;, &#39;reline&#39;, &#39;specialized&#39;]\"></a>Output <code>[&#39;cannondale&#39;, &#39;reline&#39;, &#39;specialized&#39;]</code></h6><p><br></p>\n<h2 id=\"2-4-使用-insert-向列表添加元素\"><a href=\"#2-4-使用-insert-向列表添加元素\" class=\"headerlink\" title=\"2.4. 使用 insert() 向列表添加元素\"></a>2.4. 使用 insert() 向列表添加元素</h2><p>注: motorbicycles 与上文相同.<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">motorbicycles.insert(<span class=\"number\">0</span>, <span class=\"string\">'ducati'</span>)</span><br><span class=\"line\">print(motorbicycles)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-39-ducati-39-39-cannondale-39-39-realine-39-39-specialized-39\"><a href=\"#Output-39-ducati-39-39-cannondale-39-39-realine-39-39-specialized-39\" class=\"headerlink\" title=\"Output [&#39;ducati&#39;, &#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]\"></a>Output <code>[&#39;ducati&#39;, &#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]</code></h6><p><br></p>\n<h2 id=\"2-5-删除语句\"><a href=\"#2-5-删除语句\" class=\"headerlink\" title=\"2.5. 删除语句\"></a>2.5. 删除语句</h2><h3 id=\"2-5-1-使用-del-语句\"><a href=\"#2-5-1-使用-del-语句\" class=\"headerlink\" title=\"2.5.1 使用 del 语句\"></a>2.5.1 使用 del 语句</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">del</span> motorbicycles[<span class=\"number\">0</span>]</span><br><span class=\"line\">print(motorbicycles)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-39-cannondale-39-39-realine-39-39-specialized-39\"><a href=\"#Output-39-cannondale-39-39-realine-39-39-specialized-39\" class=\"headerlink\" title=\"Output [&#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]\"></a>Output <code>[&#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]</code></h6><h3 id=\"2-5-2-使用-pop-删除元素\"><a href=\"#2-5-2-使用-pop-删除元素\" class=\"headerlink\" title=\"2.5.2 使用 pop() 删除元素\"></a>2.5.2 使用 pop() 删除元素</h3><p>pop()可删除列表末尾的元素，并让你能够接着使用它。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">motorcycles = [<span class=\"string\">'honda'</span>, <span class=\"string\">'yamaha'</span>, <span class=\"string\">'suzuki'</span>]</span><br><span class=\"line\">print(motorcycles)</span><br><span class=\"line\">popped_motorcycle = motorcycles.pop()</span><br><span class=\"line\">print(motorcycles)</span><br><span class=\"line\">print(popped_motorcycle)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>[&#39;honda&#39;, &#39;yamaha&#39;, &#39;suzuki&#39;]</code><br><code>[&#39;honda&#39;, &#39;yamaha&#39;]</code><br><code>suzuki</code><br>使用 pop(<strong>int</strong>) 来确定弹出位置 <code>motorcycles.pop(0)</code> 为弹出第0(1)个位置的 <em>honda</em></p>\n<h3 id=\"2-5-3-使用-remove-按值删除元素\"><a href=\"#2-5-3-使用-remove-按值删除元素\" class=\"headerlink\" title=\"2.5.3 使用 remove 按值删除元素\"></a>2.5.3 使用 remove 按值删除元素</h3><p><code>motorcycles.remove(&#39;honda&#39;)</code> 会删除 <strong>honda</strong></p>\n<h2 id=\"2-6-使用-sort-对列表进行永久排序\"><a href=\"#2-6-使用-sort-对列表进行永久排序\" class=\"headerlink\" title=\"2.6 使用 sort() 对列表进行永久排序\"></a>2.6 使用 sort() 对列表进行永久排序</h2><p> cars.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cars = [<span class=\"string\">'bmw'</span>, <span class=\"string\">'audi'</span>, <span class=\"string\">'toyota'</span>, <span class=\"string\">'subaru'</span>]</span><br><span class=\"line\">cars.sort()</span><br><span class=\"line\">print(cars)</span><br><span class=\"line\">cars.sort(reverse=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">print(cars)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"output\"><a href=\"#output\" class=\"headerlink\" title=\"output:\"></a>output:</h6><p><code>[&#39;audi&#39;, &#39;bmw&#39;, &#39;subaru&#39;, &#39;toyota&#39;]</code></p>\n<p><code>[&#39;toyota&#39;, &#39;subaru&#39;, &#39;bmw&#39;, &#39;audi&#39;]</code></p>\n<h2 id=\"2-7-使用-sorted-对列表进行临时排序\"><a href=\"#2-7-使用-sorted-对列表进行临时排序\" class=\"headerlink\" title=\"2.7 使用 sorted() 对列表进行临时排序\"></a>2.7 使用 sorted() 对列表进行临时排序</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cars = [<span class=\"string\">'bmw'</span>, <span class=\"string\">'audi'</span>, <span class=\"string\">'toyota'</span>, <span class=\"string\">'subaru'</span>]</span><br><span class=\"line\"><span class=\"comment\">#cars.sort()</span></span><br><span class=\"line\">print(cars)</span><br><span class=\"line\">print(sorted(cars))</span><br><span class=\"line\">print(cars)</span><br><span class=\"line\">print(sorted(cars, reverse=<span class=\"keyword\">True</span>))</span><br></pre></td></tr></table></figure>\n<h6 id=\"output-1\"><a href=\"#output-1\" class=\"headerlink\" title=\"output:\"></a>output:</h6><p><code>[&#39;bmw&#39;, &#39;audi&#39;, &#39;toyota&#39;, &#39;subaru&#39;]</code></p>\n<p><code>[&#39;audi&#39;, &#39;bmw&#39;, &#39;subaru&#39;, &#39;toyota&#39;]</code></p>\n<p><code>[&#39;bmw&#39;, &#39;audi&#39;, &#39;toyota&#39;, &#39;subaru&#39;]</code></p>\n<p><code>[&#39;toyota&#39;, &#39;subaru&#39;, &#39;bmw&#39;, &#39;audi&#39;]</code></p>\n<h2 id=\"2-8-使用-len-确定列表长度\"><a href=\"#2-8-使用-len-确定列表长度\" class=\"headerlink\" title=\"2.8 使用 len() 确定列表长度\"></a>2.8 使用 len() 确定列表长度</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">len(cars)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-9-遍历整个列表\"><a href=\"#2-9-遍历整个列表\" class=\"headerlink\" title=\"2.9 遍历整个列表\"></a>2.9 遍历整个列表</h2><p>for 循环</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">magicians = [<span class=\"string\">'alice'</span>, <span class=\"string\">'david'</span>, <span class=\"string\">'carolina'</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> magician <span class=\"keyword\">in</span> magicians:</span><br><span class=\"line\">  print(magician)</span><br></pre></td></tr></table></figure>\n<h6 id=\"每次从列表取名字-存在-magician-中并打印-print\"><a href=\"#每次从列表取名字-存在-magician-中并打印-print\" class=\"headerlink\" title=\"每次从列表取名字, 存在 magician 中并打印 (print)\"></a>每次从列表取名字, 存在 <code>magician</code> 中并打印 (<code>print</code>)</h6><p>每个缩进的代码行都是循环的一部分，且将针对列表中的每个值都执行一次。因此，可对列表中的每个值执行任意次数的操作。</p>\n<h2 id=\"2-10-创建数值列表\"><a href=\"#2-10-创建数值列表\" class=\"headerlink\" title=\"2.10 创建数值列表\"></a>2.10 创建数值列表</h2><h3 id=\"2-10-1-使用-range\"><a href=\"#2-10-1-使用-range\" class=\"headerlink\" title=\"2.10.1 使用 range()\"></a>2.10.1 使用 range()</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,<span class=\"number\">5</span>)</span><br><span class=\"line\">  print(value)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>1</code><br><code>2</code><br><code>3</code><br><code>4</code></p>\n<p>在这个示例 中，range()只是打印数字1~ 4， 这是你在编程语言中经常看到的差一行为的结果。函数 range() 让 Python 从你指定的第一个值开始 数，并在到达你 指定的第二个值后停止，因此输出不包含 第二个值（这里 为 5）。</p>\n<p><strong>E.g: To print 1 2 3 4 5, use:</strong><br> <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">6</span>)</span><br><span class=\"line\"> print(value)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-10-2-使用-list-和-range-建表\"><a href=\"#2-10-2-使用-list-和-range-建表\" class=\"headerlink\" title=\"2.10.2 使用 list() 和 range() 建表\"></a>2.10.2 使用 list() 和 range() 建表</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">numbers = list(range(<span class=\"number\">1</span>,<span class=\"number\">6</span>))</span><br><span class=\"line\">print(numbers)</span><br><span class=\"line\"><span class=\"comment\"># 设置步长</span></span><br><span class=\"line\">even_number = list(range(<span class=\"number\">2</span>,<span class=\"number\">11</span>,<span class=\"number\">2</span>))</span><br><span class=\"line\">print(even_number)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>[1, 2, 3, 4, 5]</code><br><code>[2, 4, 6, 8, 10]</code></p>\n<p><em>平方数组</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">squares = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">11</span>):</span><br><span class=\"line\">  squares.append(value**<span class=\"number\">2</span>)</span><br><span class=\"line\">  </span><br><span class=\"line\">print(squares)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-11-对数字列表进行简单计算\"><a href=\"#2-11-对数字列表进行简单计算\" class=\"headerlink\" title=\"2.11 对数字列表进行简单计算\"></a>2.11 对数字列表进行简单计算</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">digits = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">0</span>]</span><br><span class=\"line\">print(min(digits))</span><br><span class=\"line\">print(max(digits))</span><br><span class=\"line\">print(sum(digits))</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>0</code><br><code>9</code><br><code>45</code></p>\n<h3 id=\"2-11-1列表解析\"><a href=\"#2-11-1列表解析\" class=\"headerlink\" title=\"2.11.1列表解析\"></a>2.11.1列表解析</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">squares = [value**<span class=\"number\">2</span> <span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">11</span>)]</span><br><span class=\"line\">print(squares)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-1-4-9-16-25-36-49-64-81-100\"><a href=\"#Output-1-4-9-16-25-36-49-64-81-100\" class=\"headerlink\" title=\"Output: [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\"></a>Output: <code>[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]</code></h6><h2 id=\"2-12-切片\"><a href=\"#2-12-切片\" class=\"headerlink\" title=\"2.12 切片\"></a>2.12 切片</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">players = [<span class=\"string\">'charles'</span>, <span class=\"string\">'martina'</span>, <span class=\"string\">'michael'</span>, <span class=\"string\">'florence'</span>, <span class=\"string\">'eli'</span>]</span><br><span class=\"line\">print(players[<span class=\"number\">0</span>:<span class=\"number\">3</span>]</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-39-charles-39-39-martina-39-39-michael-39\"><a href=\"#Output-39-charles-39-39-martina-39-39-michael-39\" class=\"headerlink\" title=\"Output: [&#39;charles&#39;, &#39;martina&#39;, &#39;michael&#39;]\"></a>Output: <code>[&#39;charles&#39;, &#39;martina&#39;, &#39;michael&#39;]</code></h6><h3 id=\"遍历切片\"><a href=\"#遍历切片\" class=\"headerlink\" title=\"遍历切片\"></a>遍历切片</h3><p>处理 列表 的 部分 元素—— Python 称之为 切片。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> player <span class=\"keyword\">in</span> players[:<span class=\"number\">3</span>]:</span><br><span class=\"line\">    print(player.title())</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-13-复制列表\"><a href=\"#2-13-复制列表\" class=\"headerlink\" title=\"2.13 复制列表\"></a>2.13 复制列表</h2><p><em>foods.py</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my_foods = [<span class=\"string\">'pizza'</span>, <span class=\"string\">'falafel'</span>, <span class=\"string\">'carrot cake'</span>]</span><br><span class=\"line\">friends_foods = my_foods[:]</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"My favorite foods are:\"</span>)</span><br><span class=\"line\">print(my_foods)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"\\nMy friend's favorite foods are:\"</span>)</span><br><span class=\"line\">print(friend_foods)</span><br></pre></td></tr></table></figure></p>\n<p>这实际上产生了2个列表，他们是独立的。E.g:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">friends_foods.append(<span class=\"string\">'ice cream'</span>)</span><br><span class=\"line\">print(my_foods)</span><br><span class=\"line\">print(friends_foods)</span><br></pre></td></tr></table></figure></p>\n<p>此代码中输出并不相同，可见相互独立。</p>\n<p><strong>需要用切片复制列表，否则不能得到两个列表</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">my_foods = [<span class=\"string\">'pizza'</span>, <span class=\"string\">'falafel'</span>, <span class=\"string\">'carrot cake'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">friend_foods = my_foods</span><br><span class=\"line\"></span><br><span class=\"line\">my_foods.append(<span class=\"string\">'cannoli'</span>)</span><br><span class=\"line\">friend_food.append(<span class=\"string\">'ice cream'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">print(my_foods)</span><br><span class=\"line\">print(friend_food)</span><br></pre></td></tr></table></figure></p>\n<p>实际上, 输出是一样的</p>\n<h2 id=\"2-14-元组\"><a href=\"#2-14-元组\" class=\"headerlink\" title=\"2.14 元组\"></a>2.14 元组</h2><p>Python 将不能修改的值称为不可变的，而不可变的列表被称为元组。</p>\n<h3 id=\"2-14-1-定义元组\"><a href=\"#2-14-1-定义元组\" class=\"headerlink\" title=\"2.14.1 定义元组\"></a>2.14.1 定义元组</h3><p>使用圆括号标识</p>\n<p><em>dimensions.py</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dimensions = (<span class=\"number\">200</span>, <span class=\"number\">50</span>)</span><br><span class=\"line\">print(dimensions[<span class=\"number\">0</span>])</span><br><span class=\"line\">print(dimensions[<span class=\"number\">1</span>])</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>200</code><br><code>50</code></p>\n<p>值不能被改变:<br><code>dimensions[0] = 50</code></p>\n<h6 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Traceback (most recent call last): File &quot;dimensions.py&quot;, line 3, in &lt; module&gt; dimensions[ 0] = 250 TypeError: &apos;tuple&apos; object does not support item assignment</span><br></pre></td></tr></table></figure>\n<h3 id=\"遍历元组中所有值\"><a href=\"#遍历元组中所有值\" class=\"headerlink\" title=\"遍历元组中所有值\"></a>遍历元组中所有值</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dimensions = (<span class=\"number\">50</span>, <span class=\"number\">200</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> dimension <span class=\"keyword\">in</span> dimensions:</span><br><span class=\"line\">    print(dimension)</span><br></pre></td></tr></table></figure>\n<h6 id=\"Output-6\"><a href=\"#Output-6\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><p><code>200</code><br><code>50</code></p>"},{"title":"在 macOS 编译 Android 的尝试","date":"2018-11-26T03:32:37.618Z","author":"OCD","Category":["PLAY"],"_content":"尝试在 macOS 10.13 上编译 Android LineageOS 14.1 备份以便将来使用\n<!-- more -->\n\n## 1. 环境搭建\n\n### 1.1 repo\n\n```bash\nbrew install repo\n```\n\n### 1.2 准备硬盘(镜像)\n\n我的办法使直接从移动硬盘上割了一块以储存 Android 源码, 格式应当设置为 macOS拓展 日志式 `区分大小写`\n\n### 1.3 准备源码\n\n从 GitHub 同步 Lineage 14.1 源码\n\n```bash\nrepo init -u git://github.com/LineageOS/android.git -b cm-14.1\nrepo sync -j4\n```\n\n唔，作为 IPv6 用户，同步速度 10M/s 无压力呀。\n如遇速度慢请使用 USTC 镜像代替 Google Source 进行同步，必要时可能需要爱国XD～\n\n### 1.4 Xcode 降级\n\n在同步代码的时候，我们可以进行一些其他工作~~为编译的顺畅进行做好准备~~\nXcode 9 的 SDK 对 Android 7.1 十分不友好， 因此，建议从 [Apple Developer](https://developer.apple.com/download/more/) 下载 Xcode 8.3.3.\n将 Xcode8.3.3.app 移动到 /Application 中， 然后运行\n\n```bash\nxcode-select -p /Application/Xcode8.3.3.app\n```\n\n### 1.5 Java 安装\n\n编译 Lineage14.1 需要 [JDK8](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html), 如果安装了JDK 9 你还是先卸了吧。。。毕竟我是没法子转 JDK Version.\n\n```bash\n#卸载Java9\nsudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin\nsudo rm -fr /Library/PreferencePanes/JavaControlPanel.prefPane\nsudo rm -fr ~/Library/Application\\ Support/Java\nsudo rm -fr /Library/Java/JavaVirtualMachines/jdk-9.jdk\n```\n\n然后即可安装 JDK 8.\n安装后确认:\n\n```bash\n➜ java -version\njava version \"1.8.0_151\"\nJava(TM) SE Runtime Environment (build 1.8.0_151-b12)\nJava HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)\n```\n\n### 1.6 依赖安装\n\n唔 这个参考 [Android Source](https://source.android.com/source/initializing)\n\n## 2. 开始编译\n\n### 2.1 设置环境变量\n\n```bash\n# ccache\nexport USE_CCACHE=1             # 开启 CCACHE\nexport CCACHE_DIR=/<path_of_your_choice>/.ccache # 设置 CCACHE 文件夹\nprebuilts/misc/darwin-x86/ccache/ccache -M 50G    # 设置 CCACHE 大小\n```\n\n也可以将上述写入 ~/.bash_profile 以避免重复输入。。\n\n### 2.2 对内核进行修改\n\n#### 2.2.1 gsed\n\n我们注意到 `brew install gnu-sed` 使用的是 `gsed` 命令。\n因此我们要对 kernel source 中的脚本进行修改。\n\n```diff\n--- a/scripts/headers_install.sh\n+++ b/scripts/headers_install.sh\n\n-   sed -r \\\n+   gsed -r \\\n```\n\n```diff\n--- a/arch/arm64/kernel/vdso/gen_vdso_offsets.sh\n+++ b/arch/arm64/kernel/vdso/gen_vdso_offsets.sh\n\n- sed -n -e 's/^00*/0/' -e \\\n+ gsed -n -e 's/^00*/0/' -e \\\n```\n\n#### 2.2.2 xargs\n\nMac 的 xargs 与Linux存在差别，因此进行修改:\n\n```bash\nbrew install findutils\n```\n\n```diff\n--- a/scripts/Makefile.modpost\n+++ b/scripts/Makefile.modpost\n\n- MODLISTCMD := find $(MODVERDIR) -name '*.mod' | xargs -r grep -h '\\.ko$$' | sort  -u\n+ MODLISTCMD := find $(MODVERDIR) -name '*.mod' | gxargs -r grep -h '\\.ko$$' | sort  -u\n```\n\n### 2.3 Bison\n\nBison requires a commit to work.\n\n```bash\n# in the root of the source code\ncd external/bison\ngit cherry-pick c0c852bd6fe462b148475476d9124fd740eba160\ncd ../../\nmm bison\ncp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/\n\n# Credits: https://groups.google.com/forum/#!topic/android-building/D1-c5lZ9Oco\n```\n\n## 3. Here wo go\n\n``` bash\nbreakfast <device_name>         # 从 Lineage 的 repo 上下载 device kernel 等\ngit clone https://github.com/TheMuppets/<repo> vendor/<device_name>\n                                # 从 TheMuppets 的 repo 下载 vendor 文件\nlunch lineage_<device_name>-userdebug\nmake -j<cpu_num> bacon          # 开始编译\n```\n\n### 3.1 out of memory error\n\n诶机器差的命啊:\n\n```bash\nexport JACK_SERVER_VM_ARGUMENTS=\"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m\" \\\njack-admin kill-server && jack-admin start-server \\\nmake -j<cpu_num> bacon\n```\n\n## 4. Job done\n\n没什么好写的233333\n我什么也不会呀\n\n注: 当初找 xargs 的 GNU 版本找了很久, 现在发现奇淫技巧:\n\n```bash\n➜ brew search --desc xargs\nfindutils: Collection of GNU find, xargs, and locate\n```\n\n## Special Thanks\n\n@Asuka\n@XINGRZ\n\n\n","source":"_posts/2017-11-15-Build-Android-on-MacOS.md","raw":"---\ntitle: 在 macOS 编译 Android 的尝试\ndate: 2017-11-15 1\nauthor: \"OCD\"\nCategory:\n    - PLAY\ntags: \n    - Android build\n    - Develop\n---\n尝试在 macOS 10.13 上编译 Android LineageOS 14.1 备份以便将来使用\n<!-- more -->\n\n## 1. 环境搭建\n\n### 1.1 repo\n\n```bash\nbrew install repo\n```\n\n### 1.2 准备硬盘(镜像)\n\n我的办法使直接从移动硬盘上割了一块以储存 Android 源码, 格式应当设置为 macOS拓展 日志式 `区分大小写`\n\n### 1.3 准备源码\n\n从 GitHub 同步 Lineage 14.1 源码\n\n```bash\nrepo init -u git://github.com/LineageOS/android.git -b cm-14.1\nrepo sync -j4\n```\n\n唔，作为 IPv6 用户，同步速度 10M/s 无压力呀。\n如遇速度慢请使用 USTC 镜像代替 Google Source 进行同步，必要时可能需要爱国XD～\n\n### 1.4 Xcode 降级\n\n在同步代码的时候，我们可以进行一些其他工作~~为编译的顺畅进行做好准备~~\nXcode 9 的 SDK 对 Android 7.1 十分不友好， 因此，建议从 [Apple Developer](https://developer.apple.com/download/more/) 下载 Xcode 8.3.3.\n将 Xcode8.3.3.app 移动到 /Application 中， 然后运行\n\n```bash\nxcode-select -p /Application/Xcode8.3.3.app\n```\n\n### 1.5 Java 安装\n\n编译 Lineage14.1 需要 [JDK8](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html), 如果安装了JDK 9 你还是先卸了吧。。。毕竟我是没法子转 JDK Version.\n\n```bash\n#卸载Java9\nsudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin\nsudo rm -fr /Library/PreferencePanes/JavaControlPanel.prefPane\nsudo rm -fr ~/Library/Application\\ Support/Java\nsudo rm -fr /Library/Java/JavaVirtualMachines/jdk-9.jdk\n```\n\n然后即可安装 JDK 8.\n安装后确认:\n\n```bash\n➜ java -version\njava version \"1.8.0_151\"\nJava(TM) SE Runtime Environment (build 1.8.0_151-b12)\nJava HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)\n```\n\n### 1.6 依赖安装\n\n唔 这个参考 [Android Source](https://source.android.com/source/initializing)\n\n## 2. 开始编译\n\n### 2.1 设置环境变量\n\n```bash\n# ccache\nexport USE_CCACHE=1             # 开启 CCACHE\nexport CCACHE_DIR=/<path_of_your_choice>/.ccache # 设置 CCACHE 文件夹\nprebuilts/misc/darwin-x86/ccache/ccache -M 50G    # 设置 CCACHE 大小\n```\n\n也可以将上述写入 ~/.bash_profile 以避免重复输入。。\n\n### 2.2 对内核进行修改\n\n#### 2.2.1 gsed\n\n我们注意到 `brew install gnu-sed` 使用的是 `gsed` 命令。\n因此我们要对 kernel source 中的脚本进行修改。\n\n```diff\n--- a/scripts/headers_install.sh\n+++ b/scripts/headers_install.sh\n\n-   sed -r \\\n+   gsed -r \\\n```\n\n```diff\n--- a/arch/arm64/kernel/vdso/gen_vdso_offsets.sh\n+++ b/arch/arm64/kernel/vdso/gen_vdso_offsets.sh\n\n- sed -n -e 's/^00*/0/' -e \\\n+ gsed -n -e 's/^00*/0/' -e \\\n```\n\n#### 2.2.2 xargs\n\nMac 的 xargs 与Linux存在差别，因此进行修改:\n\n```bash\nbrew install findutils\n```\n\n```diff\n--- a/scripts/Makefile.modpost\n+++ b/scripts/Makefile.modpost\n\n- MODLISTCMD := find $(MODVERDIR) -name '*.mod' | xargs -r grep -h '\\.ko$$' | sort  -u\n+ MODLISTCMD := find $(MODVERDIR) -name '*.mod' | gxargs -r grep -h '\\.ko$$' | sort  -u\n```\n\n### 2.3 Bison\n\nBison requires a commit to work.\n\n```bash\n# in the root of the source code\ncd external/bison\ngit cherry-pick c0c852bd6fe462b148475476d9124fd740eba160\ncd ../../\nmm bison\ncp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/\n\n# Credits: https://groups.google.com/forum/#!topic/android-building/D1-c5lZ9Oco\n```\n\n## 3. Here wo go\n\n``` bash\nbreakfast <device_name>         # 从 Lineage 的 repo 上下载 device kernel 等\ngit clone https://github.com/TheMuppets/<repo> vendor/<device_name>\n                                # 从 TheMuppets 的 repo 下载 vendor 文件\nlunch lineage_<device_name>-userdebug\nmake -j<cpu_num> bacon          # 开始编译\n```\n\n### 3.1 out of memory error\n\n诶机器差的命啊:\n\n```bash\nexport JACK_SERVER_VM_ARGUMENTS=\"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m\" \\\njack-admin kill-server && jack-admin start-server \\\nmake -j<cpu_num> bacon\n```\n\n## 4. Job done\n\n没什么好写的233333\n我什么也不会呀\n\n注: 当初找 xargs 的 GNU 版本找了很久, 现在发现奇淫技巧:\n\n```bash\n➜ brew search --desc xargs\nfindutils: Collection of GNU find, xargs, and locate\n```\n\n## Special Thanks\n\n@Asuka\n@XINGRZ\n\n\n","slug":"2017-11-15-Build-Android-on-MacOS","published":1,"updated":"2018-11-26T03:32:37.619Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wa0009rmtu29061wlr","content":"<p>尝试在 macOS 10.13 上编译 Android LineageOS 14.1 备份以便将来使用<br><a id=\"more\"></a></p>\n<h2 id=\"1-环境搭建\"><a href=\"#1-环境搭建\" class=\"headerlink\" title=\"1. 环境搭建\"></a>1. 环境搭建</h2><h3 id=\"1-1-repo\"><a href=\"#1-1-repo\" class=\"headerlink\" title=\"1.1 repo\"></a>1.1 repo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install repo</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-准备硬盘-镜像\"><a href=\"#1-2-准备硬盘-镜像\" class=\"headerlink\" title=\"1.2 准备硬盘(镜像)\"></a>1.2 准备硬盘(镜像)</h3><p>我的办法使直接从移动硬盘上割了一块以储存 Android 源码, 格式应当设置为 macOS拓展 日志式 <code>区分大小写</code></p>\n<h3 id=\"1-3-准备源码\"><a href=\"#1-3-准备源码\" class=\"headerlink\" title=\"1.3 准备源码\"></a>1.3 准备源码</h3><p>从 GitHub 同步 Lineage 14.1 源码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">repo init -u git://github.com/LineageOS/android.git -b cm-14.1</span><br><span class=\"line\">repo sync -j4</span><br></pre></td></tr></table></figure>\n<p>唔，作为 IPv6 用户，同步速度 10M/s 无压力呀。<br>如遇速度慢请使用 USTC 镜像代替 Google Source 进行同步，必要时可能需要爱国XD～</p>\n<h3 id=\"1-4-Xcode-降级\"><a href=\"#1-4-Xcode-降级\" class=\"headerlink\" title=\"1.4 Xcode 降级\"></a>1.4 Xcode 降级</h3><p>在同步代码的时候，我们可以进行一些其他工作<del>为编译的顺畅进行做好准备</del><br>Xcode 9 的 SDK 对 Android 7.1 十分不友好， 因此，建议从 <a href=\"https://developer.apple.com/download/more/\" target=\"_blank\" rel=\"noopener\">Apple Developer</a> 下载 Xcode 8.3.3.<br>将 Xcode8.3.3.app 移动到 /Application 中， 然后运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcode-select -p /Application/Xcode8.3.3.app</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-Java-安装\"><a href=\"#1-5-Java-安装\" class=\"headerlink\" title=\"1.5 Java 安装\"></a>1.5 Java 安装</h3><p>编译 Lineage14.1 需要 <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\" rel=\"noopener\">JDK8</a>, 如果安装了JDK 9 你还是先卸了吧。。。毕竟我是没法子转 JDK Version.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#卸载Java9</span></span><br><span class=\"line\">sudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin</span><br><span class=\"line\">sudo rm -fr /Library/PreferencePanes/JavaControlPanel.prefPane</span><br><span class=\"line\">sudo rm -fr ~/Library/Application\\ Support/Java</span><br><span class=\"line\">sudo rm -fr /Library/Java/JavaVirtualMachines/jdk-9.jdk</span><br></pre></td></tr></table></figure>\n<p>然后即可安装 JDK 8.<br>安装后确认:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜ java -version</span><br><span class=\"line\">java version <span class=\"string\">\"1.8.0_151\"</span></span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_151-b12)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-6-依赖安装\"><a href=\"#1-6-依赖安装\" class=\"headerlink\" title=\"1.6 依赖安装\"></a>1.6 依赖安装</h3><p>唔 这个参考 <a href=\"https://source.android.com/source/initializing\" target=\"_blank\" rel=\"noopener\">Android Source</a></p>\n<h2 id=\"2-开始编译\"><a href=\"#2-开始编译\" class=\"headerlink\" title=\"2. 开始编译\"></a>2. 开始编译</h2><h3 id=\"2-1-设置环境变量\"><a href=\"#2-1-设置环境变量\" class=\"headerlink\" title=\"2.1 设置环境变量\"></a>2.1 设置环境变量</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ccache</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> USE_CCACHE=1             <span class=\"comment\"># 开启 CCACHE</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> CCACHE_DIR=/&lt;path_of_your_choice&gt;/.ccache <span class=\"comment\"># 设置 CCACHE 文件夹</span></span><br><span class=\"line\">prebuilts/misc/darwin-x86/ccache/ccache -M 50G    <span class=\"comment\"># 设置 CCACHE 大小</span></span><br></pre></td></tr></table></figure>\n<p>也可以将上述写入 ~/.bash_profile 以避免重复输入。。</p>\n<h3 id=\"2-2-对内核进行修改\"><a href=\"#2-2-对内核进行修改\" class=\"headerlink\" title=\"2.2 对内核进行修改\"></a>2.2 对内核进行修改</h3><h4 id=\"2-2-1-gsed\"><a href=\"#2-2-1-gsed\" class=\"headerlink\" title=\"2.2.1 gsed\"></a>2.2.1 gsed</h4><p>我们注意到 <code>brew install gnu-sed</code> 使用的是 <code>gsed</code> 命令。<br>因此我们要对 kernel source 中的脚本进行修改。</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--- a/scripts/headers_install.sh</span></span><br><span class=\"line\"><span class=\"comment\">+++ b/scripts/headers_install.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-   sed -r \\</span></span><br><span class=\"line\"><span class=\"addition\">+   gsed -r \\</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--- a/arch/arm64/kernel/vdso/gen_vdso_offsets.sh</span></span><br><span class=\"line\"><span class=\"comment\">+++ b/arch/arm64/kernel/vdso/gen_vdso_offsets.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">- sed -n -e 's/^00*/0/' -e \\</span></span><br><span class=\"line\"><span class=\"addition\">+ gsed -n -e 's/^00*/0/' -e \\</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-2-xargs\"><a href=\"#2-2-2-xargs\" class=\"headerlink\" title=\"2.2.2 xargs\"></a>2.2.2 xargs</h4><p>Mac 的 xargs 与Linux存在差别，因此进行修改:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install findutils</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--- a/scripts/Makefile.modpost</span></span><br><span class=\"line\"><span class=\"comment\">+++ b/scripts/Makefile.modpost</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">- MODLISTCMD := find $(MODVERDIR) -name '*.mod' | xargs -r grep -h '\\.ko$$' | sort  -u</span></span><br><span class=\"line\"><span class=\"addition\">+ MODLISTCMD := find $(MODVERDIR) -name '*.mod' | gxargs -r grep -h '\\.ko$$' | sort  -u</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-Bison\"><a href=\"#2-3-Bison\" class=\"headerlink\" title=\"2.3 Bison\"></a>2.3 Bison</h3><p>Bison requires a commit to work.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># in the root of the source code</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> external/bison</span><br><span class=\"line\">git cherry-pick c0c852bd6fe462b148475476d9124fd740eba160</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ../../</span><br><span class=\"line\">mm bison</span><br><span class=\"line\">cp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Credits: https://groups.google.com/forum/#!topic/android-building/D1-c5lZ9Oco</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-Here-wo-go\"><a href=\"#3-Here-wo-go\" class=\"headerlink\" title=\"3. Here wo go\"></a>3. Here wo go</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">breakfast &lt;device_name&gt;         <span class=\"comment\"># 从 Lineage 的 repo 上下载 device kernel 等</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/TheMuppets/&lt;repo&gt; vendor/&lt;device_name&gt;</span><br><span class=\"line\">                                <span class=\"comment\"># 从 TheMuppets 的 repo 下载 vendor 文件</span></span><br><span class=\"line\">lunch lineage_&lt;device_name&gt;-userdebug</span><br><span class=\"line\">make -j&lt;cpu_num&gt; bacon          <span class=\"comment\"># 开始编译</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-out-of-memory-error\"><a href=\"#3-1-out-of-memory-error\" class=\"headerlink\" title=\"3.1 out of memory error\"></a>3.1 out of memory error</h3><p>诶机器差的命啊:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> JACK_SERVER_VM_ARGUMENTS=<span class=\"string\">\"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m\"</span> \\</span><br><span class=\"line\">jack-admin <span class=\"built_in\">kill</span>-server &amp;&amp; jack-admin start-server \\</span><br><span class=\"line\">make -j&lt;cpu_num&gt; bacon</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Job-done\"><a href=\"#4-Job-done\" class=\"headerlink\" title=\"4. Job done\"></a>4. Job done</h2><p>没什么好写的233333<br>我什么也不会呀</p>\n<p>注: 当初找 xargs 的 GNU 版本找了很久, 现在发现奇淫技巧:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜ brew search --desc xargs</span><br><span class=\"line\">findutils: Collection of GNU find, xargs, and locate</span><br></pre></td></tr></table></figure>\n<h2 id=\"Special-Thanks\"><a href=\"#Special-Thanks\" class=\"headerlink\" title=\"Special Thanks\"></a>Special Thanks</h2><p>@Asuka<br>@XINGRZ</p>\n","site":{"data":{}},"excerpt":"<p>尝试在 macOS 10.13 上编译 Android LineageOS 14.1 备份以便将来使用<br>","more":"</p>\n<h2 id=\"1-环境搭建\"><a href=\"#1-环境搭建\" class=\"headerlink\" title=\"1. 环境搭建\"></a>1. 环境搭建</h2><h3 id=\"1-1-repo\"><a href=\"#1-1-repo\" class=\"headerlink\" title=\"1.1 repo\"></a>1.1 repo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install repo</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-准备硬盘-镜像\"><a href=\"#1-2-准备硬盘-镜像\" class=\"headerlink\" title=\"1.2 准备硬盘(镜像)\"></a>1.2 准备硬盘(镜像)</h3><p>我的办法使直接从移动硬盘上割了一块以储存 Android 源码, 格式应当设置为 macOS拓展 日志式 <code>区分大小写</code></p>\n<h3 id=\"1-3-准备源码\"><a href=\"#1-3-准备源码\" class=\"headerlink\" title=\"1.3 准备源码\"></a>1.3 准备源码</h3><p>从 GitHub 同步 Lineage 14.1 源码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">repo init -u git://github.com/LineageOS/android.git -b cm-14.1</span><br><span class=\"line\">repo sync -j4</span><br></pre></td></tr></table></figure>\n<p>唔，作为 IPv6 用户，同步速度 10M/s 无压力呀。<br>如遇速度慢请使用 USTC 镜像代替 Google Source 进行同步，必要时可能需要爱国XD～</p>\n<h3 id=\"1-4-Xcode-降级\"><a href=\"#1-4-Xcode-降级\" class=\"headerlink\" title=\"1.4 Xcode 降级\"></a>1.4 Xcode 降级</h3><p>在同步代码的时候，我们可以进行一些其他工作<del>为编译的顺畅进行做好准备</del><br>Xcode 9 的 SDK 对 Android 7.1 十分不友好， 因此，建议从 <a href=\"https://developer.apple.com/download/more/\" target=\"_blank\" rel=\"noopener\">Apple Developer</a> 下载 Xcode 8.3.3.<br>将 Xcode8.3.3.app 移动到 /Application 中， 然后运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcode-select -p /Application/Xcode8.3.3.app</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-5-Java-安装\"><a href=\"#1-5-Java-安装\" class=\"headerlink\" title=\"1.5 Java 安装\"></a>1.5 Java 安装</h3><p>编译 Lineage14.1 需要 <a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\" rel=\"noopener\">JDK8</a>, 如果安装了JDK 9 你还是先卸了吧。。。毕竟我是没法子转 JDK Version.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#卸载Java9</span></span><br><span class=\"line\">sudo rm -fr /Library/Internet\\ Plug-Ins/JavaAppletPlugin.plugin</span><br><span class=\"line\">sudo rm -fr /Library/PreferencePanes/JavaControlPanel.prefPane</span><br><span class=\"line\">sudo rm -fr ~/Library/Application\\ Support/Java</span><br><span class=\"line\">sudo rm -fr /Library/Java/JavaVirtualMachines/jdk-9.jdk</span><br></pre></td></tr></table></figure>\n<p>然后即可安装 JDK 8.<br>安装后确认:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜ java -version</span><br><span class=\"line\">java version <span class=\"string\">\"1.8.0_151\"</span></span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 1.8.0_151-b12)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-6-依赖安装\"><a href=\"#1-6-依赖安装\" class=\"headerlink\" title=\"1.6 依赖安装\"></a>1.6 依赖安装</h3><p>唔 这个参考 <a href=\"https://source.android.com/source/initializing\" target=\"_blank\" rel=\"noopener\">Android Source</a></p>\n<h2 id=\"2-开始编译\"><a href=\"#2-开始编译\" class=\"headerlink\" title=\"2. 开始编译\"></a>2. 开始编译</h2><h3 id=\"2-1-设置环境变量\"><a href=\"#2-1-设置环境变量\" class=\"headerlink\" title=\"2.1 设置环境变量\"></a>2.1 设置环境变量</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ccache</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> USE_CCACHE=1             <span class=\"comment\"># 开启 CCACHE</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> CCACHE_DIR=/&lt;path_of_your_choice&gt;/.ccache <span class=\"comment\"># 设置 CCACHE 文件夹</span></span><br><span class=\"line\">prebuilts/misc/darwin-x86/ccache/ccache -M 50G    <span class=\"comment\"># 设置 CCACHE 大小</span></span><br></pre></td></tr></table></figure>\n<p>也可以将上述写入 ~/.bash_profile 以避免重复输入。。</p>\n<h3 id=\"2-2-对内核进行修改\"><a href=\"#2-2-对内核进行修改\" class=\"headerlink\" title=\"2.2 对内核进行修改\"></a>2.2 对内核进行修改</h3><h4 id=\"2-2-1-gsed\"><a href=\"#2-2-1-gsed\" class=\"headerlink\" title=\"2.2.1 gsed\"></a>2.2.1 gsed</h4><p>我们注意到 <code>brew install gnu-sed</code> 使用的是 <code>gsed</code> 命令。<br>因此我们要对 kernel source 中的脚本进行修改。</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--- a/scripts/headers_install.sh</span></span><br><span class=\"line\"><span class=\"comment\">+++ b/scripts/headers_install.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-   sed -r \\</span></span><br><span class=\"line\"><span class=\"addition\">+   gsed -r \\</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--- a/arch/arm64/kernel/vdso/gen_vdso_offsets.sh</span></span><br><span class=\"line\"><span class=\"comment\">+++ b/arch/arm64/kernel/vdso/gen_vdso_offsets.sh</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">- sed -n -e 's/^00*/0/' -e \\</span></span><br><span class=\"line\"><span class=\"addition\">+ gsed -n -e 's/^00*/0/' -e \\</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-2-xargs\"><a href=\"#2-2-2-xargs\" class=\"headerlink\" title=\"2.2.2 xargs\"></a>2.2.2 xargs</h4><p>Mac 的 xargs 与Linux存在差别，因此进行修改:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install findutils</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--- a/scripts/Makefile.modpost</span></span><br><span class=\"line\"><span class=\"comment\">+++ b/scripts/Makefile.modpost</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">- MODLISTCMD := find $(MODVERDIR) -name '*.mod' | xargs -r grep -h '\\.ko$$' | sort  -u</span></span><br><span class=\"line\"><span class=\"addition\">+ MODLISTCMD := find $(MODVERDIR) -name '*.mod' | gxargs -r grep -h '\\.ko$$' | sort  -u</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-3-Bison\"><a href=\"#2-3-Bison\" class=\"headerlink\" title=\"2.3 Bison\"></a>2.3 Bison</h3><p>Bison requires a commit to work.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># in the root of the source code</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> external/bison</span><br><span class=\"line\">git cherry-pick c0c852bd6fe462b148475476d9124fd740eba160</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ../../</span><br><span class=\"line\">mm bison</span><br><span class=\"line\">cp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Credits: https://groups.google.com/forum/#!topic/android-building/D1-c5lZ9Oco</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-Here-wo-go\"><a href=\"#3-Here-wo-go\" class=\"headerlink\" title=\"3. Here wo go\"></a>3. Here wo go</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">breakfast &lt;device_name&gt;         <span class=\"comment\"># 从 Lineage 的 repo 上下载 device kernel 等</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/TheMuppets/&lt;repo&gt; vendor/&lt;device_name&gt;</span><br><span class=\"line\">                                <span class=\"comment\"># 从 TheMuppets 的 repo 下载 vendor 文件</span></span><br><span class=\"line\">lunch lineage_&lt;device_name&gt;-userdebug</span><br><span class=\"line\">make -j&lt;cpu_num&gt; bacon          <span class=\"comment\"># 开始编译</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-1-out-of-memory-error\"><a href=\"#3-1-out-of-memory-error\" class=\"headerlink\" title=\"3.1 out of memory error\"></a>3.1 out of memory error</h3><p>诶机器差的命啊:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> JACK_SERVER_VM_ARGUMENTS=<span class=\"string\">\"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m\"</span> \\</span><br><span class=\"line\">jack-admin <span class=\"built_in\">kill</span>-server &amp;&amp; jack-admin start-server \\</span><br><span class=\"line\">make -j&lt;cpu_num&gt; bacon</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Job-done\"><a href=\"#4-Job-done\" class=\"headerlink\" title=\"4. Job done\"></a>4. Job done</h2><p>没什么好写的233333<br>我什么也不会呀</p>\n<p>注: 当初找 xargs 的 GNU 版本找了很久, 现在发现奇淫技巧:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜ brew search --desc xargs</span><br><span class=\"line\">findutils: Collection of GNU find, xargs, and locate</span><br></pre></td></tr></table></figure>\n<h2 id=\"Special-Thanks\"><a href=\"#Special-Thanks\" class=\"headerlink\" title=\"Special Thanks\"></a>Special Thanks</h2><p>@Asuka<br>@XINGRZ</p>"},{"title":"用户输入和 while 循环","author":"OCD","date":"2018-11-26T03:32:37.619Z","_content":"使用 input() 处理用户输入\n\n<!-- more -->\n\n## 7.1 函数 `input()` 工作原理\n__E.g:__\n```python\nmessage = input(\"Tell me something, and I will repeat it back to you: \")\nprint(message)\n```\n###### Output:\n```\nTell me something, and I will repeat it back to you: \nHello, Everyone!\nHello, Everyone!\n```\n\n### 7.1.1 编写清晰的程序\n没当你编写函数 `input()` 时, 都应指定清晰而易于明白的提示如下所示:\n__E.g:__\n```python\nname = input(\"Please enter your name\")\nprint(\"Hello, \" + name + \"!\")  \n```\n###### Output:\n```\nPlease enter your name: Eric\nHello, Eric!\n```\n\n### 7.1.2 使用 int() 来获取数值输入\n使用函数 `input()` 时, Python 会将用户输入解读为字符串, 为解决此问题, 可使用函数 `int()`\n\n__E.g:__\n```python:\nage = input(\"How old are you?\")\nage = int(age)\n```\n\n### 7.1.3 求模运算符 `%`\n__E.g:__ even_or_odd.py\n```python\nnumber = input(\"Enter a number, and I'll tell you whether it is even or odd: \")\nnumber = int(number)\n\nif number % 2 == 0:\n    print(\"\\nThe number \" + str(number) + \" is even.\")\nelse:\n    print(\"\\nThe number \" + str(number) + \" is odd.\")\n```\n\n###### Output:\n```\nEnter a number, and I'll tell you whether it is even or odd: 43\n\nThe number 43 is odd\n```\n\n## 7.2 `while` 循环简介\n### 7.2.1 使用 `while` 循环\n__E.g:__ counting.py\n```python\ncurrent_number = 1\nwhile current_number <= 5:\n    print(current_number)\n    current_number += 1\n```\n###### Output:\n```\n1\n2\n3\n4\n5\n```\n### 7.2.2 让用户选择何时退出\nwe can define a variable and evaluate it when entering `while`\n__E.g:__ parrot.py\n```python\nprompt = \"\\nTell me something, and I will repeat it back to you: \"\nprompt += \"\\nEnter 'quit' to end the program: \"\nmessage = \"\"\n\nwhile message != 'quit':\n    message = input(prompt)\n    if message != 'quit':\n        print(message)\n```\n\n###### Output:\n```\nTell me something, and I will repeat it back to you:\nEnter 'quit' to end the program: hello\nhello\n\nTell me something, and I will repeat it back to you:\nEnter 'quit' to end the program: 1\n1\n\nTell me something, and I will repeat it back to you:\nEnter 'quit' to end the program: quit\n```\n\n### 7.2.3 使用标志\n__E.g:__  improved_parrot.py\n```python\nprompt = \"\\nTell me something, and I will repeat it back to you: \"\nprompt += \"\\nEnter 'quit' to end the program: \"\nmessage = \"\"\n\nactive = True\nwhile active == True:\n    message = input(prompt)\n    if message == 'quit':\n        active = False\n    else:\n        print(message)\n```\n\n###### Output: `same as above`\n\n### 7.2.4 Use `break` to quit a loop\n__E.g:__ second_inproved_parrot.py\n```python\nprompt = \"\\nTell me something, and I will repeat it back to you: \"\nprompt += \"\\nEnter 'quit' to end the program: \"\nmessage = \"\"\n\nwhile True:\n    message = input(prompt)\n    if message == 'quit':\n        break\n    else:\n        print(message)\n```\n注: 在任何循环中都可使用 break\n\n### 7.2.5 Use `continue`\n__E.g:__ counting.py\n```python\ncurrent_number = 0\nwhile current_number < 10:\n    current_number += 1\n    if current_number %2 == 0:\n        continue\n        \n    print(current_number)\n```\n###### Output:\n```\n1\n3\n5\n7\n9\n```\n### 7.2.6 避免无限循环\n\n## 7.3 使用 `while` 处理列表和字典\n### 7.3.1 在列表中移动元素\n__E.g:__ confirmed_users.py\n```python\nunconfirmed_users = ['alice', 'brian', 'candace']\nconfirmed_users = []\n\nwhile unconfirmed_users:\n    current_user = unconfirmed_users.pop()\n    \n    print(\"Verifying user: \" + current_user.title())\n    confirmed_users.append(current_user)\n    \nprint(\"\\nThe following users have been confirmed: \")\nfor confirmed_user in confirmed_users:\n    print(confirmed_user.title())\n``` \n\n###### Output:\n```\nVerifying user: Candace\nVerifying user: Brian\nVerifying user: Alice\n\nThe following users have been confirmed: \nCandace\nBrian\nAlice\n```\n\n### 7.3.2 删除包含特定值的所有列表元素\n在第二章中, 我们使用函数 `remove()` 来删除列表中的特定值, 现在要删除多个相同元素:\n__E.g:__ pets.py\n```python\npets = ['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat']\nprint(pets)\n\nwhile 'cat' in pets:\n    pets.remove('cat')\n    \nprint(pets)\n```\n\n###### Output\n```\n['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat']\n['dog', 'dog', 'goldfish', 'rabbit']\n```\n\n### 7.3.3 使用用户输入填充字典\n__E.g:__ mountain_poll.py\n```python\nresponses = {}\n\npolling_active = True\n\nwhile polling_active:\n    name = input(\"\\nWhat is your name? \")\n    response = input(\"Which mountain would you like to climb someday? \")\n    \n    responses[name] = response\n    \n    repeat = input(\"Would you like to let another person respond? (yes/no)\")\n    if repeat == 'no':\n        polling_active = False\n        \nprint(\"\\n--- Poll Result ---\\n\")\nfor name, mountain in responses.items():\n    print(name.title() + \" would like to climb \" + mountain.title() + \".\")\n```\n\n###### Output:\n```\nWhat is your name? bbn\nWhich mountain would you like to climb someday? a\nWould you like to let another person respond? (yes/no)no\n\n--- Poll Result ---\n\nBbn would like to climb a.\n```\n\n\n\n\n","source":"_posts/2017-11-23-User-input-and-while-loop.md","raw":"---\ntitle: 用户输入和 while 循环\nauthor: \"OCD\"\ndate: 2017-11-23 1\ncategory:\n    - Programming\ntags:\n    - Python\n    - Develop\n---\n使用 input() 处理用户输入\n\n<!-- more -->\n\n## 7.1 函数 `input()` 工作原理\n__E.g:__\n```python\nmessage = input(\"Tell me something, and I will repeat it back to you: \")\nprint(message)\n```\n###### Output:\n```\nTell me something, and I will repeat it back to you: \nHello, Everyone!\nHello, Everyone!\n```\n\n### 7.1.1 编写清晰的程序\n没当你编写函数 `input()` 时, 都应指定清晰而易于明白的提示如下所示:\n__E.g:__\n```python\nname = input(\"Please enter your name\")\nprint(\"Hello, \" + name + \"!\")  \n```\n###### Output:\n```\nPlease enter your name: Eric\nHello, Eric!\n```\n\n### 7.1.2 使用 int() 来获取数值输入\n使用函数 `input()` 时, Python 会将用户输入解读为字符串, 为解决此问题, 可使用函数 `int()`\n\n__E.g:__\n```python:\nage = input(\"How old are you?\")\nage = int(age)\n```\n\n### 7.1.3 求模运算符 `%`\n__E.g:__ even_or_odd.py\n```python\nnumber = input(\"Enter a number, and I'll tell you whether it is even or odd: \")\nnumber = int(number)\n\nif number % 2 == 0:\n    print(\"\\nThe number \" + str(number) + \" is even.\")\nelse:\n    print(\"\\nThe number \" + str(number) + \" is odd.\")\n```\n\n###### Output:\n```\nEnter a number, and I'll tell you whether it is even or odd: 43\n\nThe number 43 is odd\n```\n\n## 7.2 `while` 循环简介\n### 7.2.1 使用 `while` 循环\n__E.g:__ counting.py\n```python\ncurrent_number = 1\nwhile current_number <= 5:\n    print(current_number)\n    current_number += 1\n```\n###### Output:\n```\n1\n2\n3\n4\n5\n```\n### 7.2.2 让用户选择何时退出\nwe can define a variable and evaluate it when entering `while`\n__E.g:__ parrot.py\n```python\nprompt = \"\\nTell me something, and I will repeat it back to you: \"\nprompt += \"\\nEnter 'quit' to end the program: \"\nmessage = \"\"\n\nwhile message != 'quit':\n    message = input(prompt)\n    if message != 'quit':\n        print(message)\n```\n\n###### Output:\n```\nTell me something, and I will repeat it back to you:\nEnter 'quit' to end the program: hello\nhello\n\nTell me something, and I will repeat it back to you:\nEnter 'quit' to end the program: 1\n1\n\nTell me something, and I will repeat it back to you:\nEnter 'quit' to end the program: quit\n```\n\n### 7.2.3 使用标志\n__E.g:__  improved_parrot.py\n```python\nprompt = \"\\nTell me something, and I will repeat it back to you: \"\nprompt += \"\\nEnter 'quit' to end the program: \"\nmessage = \"\"\n\nactive = True\nwhile active == True:\n    message = input(prompt)\n    if message == 'quit':\n        active = False\n    else:\n        print(message)\n```\n\n###### Output: `same as above`\n\n### 7.2.4 Use `break` to quit a loop\n__E.g:__ second_inproved_parrot.py\n```python\nprompt = \"\\nTell me something, and I will repeat it back to you: \"\nprompt += \"\\nEnter 'quit' to end the program: \"\nmessage = \"\"\n\nwhile True:\n    message = input(prompt)\n    if message == 'quit':\n        break\n    else:\n        print(message)\n```\n注: 在任何循环中都可使用 break\n\n### 7.2.5 Use `continue`\n__E.g:__ counting.py\n```python\ncurrent_number = 0\nwhile current_number < 10:\n    current_number += 1\n    if current_number %2 == 0:\n        continue\n        \n    print(current_number)\n```\n###### Output:\n```\n1\n3\n5\n7\n9\n```\n### 7.2.6 避免无限循环\n\n## 7.3 使用 `while` 处理列表和字典\n### 7.3.1 在列表中移动元素\n__E.g:__ confirmed_users.py\n```python\nunconfirmed_users = ['alice', 'brian', 'candace']\nconfirmed_users = []\n\nwhile unconfirmed_users:\n    current_user = unconfirmed_users.pop()\n    \n    print(\"Verifying user: \" + current_user.title())\n    confirmed_users.append(current_user)\n    \nprint(\"\\nThe following users have been confirmed: \")\nfor confirmed_user in confirmed_users:\n    print(confirmed_user.title())\n``` \n\n###### Output:\n```\nVerifying user: Candace\nVerifying user: Brian\nVerifying user: Alice\n\nThe following users have been confirmed: \nCandace\nBrian\nAlice\n```\n\n### 7.3.2 删除包含特定值的所有列表元素\n在第二章中, 我们使用函数 `remove()` 来删除列表中的特定值, 现在要删除多个相同元素:\n__E.g:__ pets.py\n```python\npets = ['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat']\nprint(pets)\n\nwhile 'cat' in pets:\n    pets.remove('cat')\n    \nprint(pets)\n```\n\n###### Output\n```\n['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'cat']\n['dog', 'dog', 'goldfish', 'rabbit']\n```\n\n### 7.3.3 使用用户输入填充字典\n__E.g:__ mountain_poll.py\n```python\nresponses = {}\n\npolling_active = True\n\nwhile polling_active:\n    name = input(\"\\nWhat is your name? \")\n    response = input(\"Which mountain would you like to climb someday? \")\n    \n    responses[name] = response\n    \n    repeat = input(\"Would you like to let another person respond? (yes/no)\")\n    if repeat == 'no':\n        polling_active = False\n        \nprint(\"\\n--- Poll Result ---\\n\")\nfor name, mountain in responses.items():\n    print(name.title() + \" would like to climb \" + mountain.title() + \".\")\n```\n\n###### Output:\n```\nWhat is your name? bbn\nWhich mountain would you like to climb someday? a\nWould you like to let another person respond? (yes/no)no\n\n--- Poll Result ---\n\nBbn would like to climb a.\n```\n\n\n\n\n","slug":"2017-11-23-User-input-and-while-loop","published":1,"updated":"2018-11-26T03:32:37.619Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wd000crmtu6gb63h9f","content":"<p>使用 input() 处理用户输入</p>\n<a id=\"more\"></a>\n<h2 id=\"7-1-函数-input-工作原理\"><a href=\"#7-1-函数-input-工作原理\" class=\"headerlink\" title=\"7.1 函数 input() 工作原理\"></a>7.1 函数 <code>input()</code> 工作原理</h2><p><strong>E.g:</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">message = input(<span class=\"string\">\"Tell me something, and I will repeat it back to you: \"</span>)</span><br><span class=\"line\">print(message)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Tell me something, and I will repeat it back to you: </span><br><span class=\"line\">Hello, Everyone!</span><br><span class=\"line\">Hello, Everyone!</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-1-1-编写清晰的程序\"><a href=\"#7-1-1-编写清晰的程序\" class=\"headerlink\" title=\"7.1.1 编写清晰的程序\"></a>7.1.1 编写清晰的程序</h3><p>没当你编写函数 <code>input()</code> 时, 都应指定清晰而易于明白的提示如下所示:<br><strong>E.g:</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = input(<span class=\"string\">\"Please enter your name\"</span>)</span><br><span class=\"line\">print(<span class=\"string\">\"Hello, \"</span> + name + <span class=\"string\">\"!\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Please enter your name: Eric</span><br><span class=\"line\">Hello, Eric!</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-1-2-使用-int-来获取数值输入\"><a href=\"#7-1-2-使用-int-来获取数值输入\" class=\"headerlink\" title=\"7.1.2 使用 int() 来获取数值输入\"></a>7.1.2 使用 int() 来获取数值输入</h3><p>使用函数 <code>input()</code> 时, Python 会将用户输入解读为字符串, 为解决此问题, 可使用函数 <code>int()</code></p>\n<p><strong>E.g:</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age = input(&quot;How old are you?&quot;)</span><br><span class=\"line\">age = int(age)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"7-1-3-求模运算符\"><a href=\"#7-1-3-求模运算符\" class=\"headerlink\" title=\"7.1.3 求模运算符 %\"></a>7.1.3 求模运算符 <code>%</code></h3><p><strong>E.g:</strong> even_or_odd.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">number = input(<span class=\"string\">\"Enter a number, and I'll tell you whether it is even or odd: \"</span>)</span><br><span class=\"line\">number = int(number)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> number % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"\\nThe number \"</span> + str(number) + <span class=\"string\">\" is even.\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"\\nThe number \"</span> + str(number) + <span class=\"string\">\" is odd.\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Enter a number, and I&apos;ll tell you whether it is even or odd: 43</span><br><span class=\"line\"></span><br><span class=\"line\">The number 43 is odd</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-2-while-循环简介\"><a href=\"#7-2-while-循环简介\" class=\"headerlink\" title=\"7.2 while 循环简介\"></a>7.2 <code>while</code> 循环简介</h2><h3 id=\"7-2-1-使用-while-循环\"><a href=\"#7-2-1-使用-while-循环\" class=\"headerlink\" title=\"7.2.1 使用 while 循环\"></a>7.2.1 使用 <code>while</code> 循环</h3><p><strong>E.g:</strong> counting.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">current_number = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> current_number &lt;= <span class=\"number\">5</span>:</span><br><span class=\"line\">    print(current_number)</span><br><span class=\"line\">    current_number += <span class=\"number\">1</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-2-2-让用户选择何时退出\"><a href=\"#7-2-2-让用户选择何时退出\" class=\"headerlink\" title=\"7.2.2 让用户选择何时退出\"></a>7.2.2 让用户选择何时退出</h3><p>we can define a variable and evaluate it when entering <code>while</code><br><strong>E.g:</strong> parrot.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prompt = <span class=\"string\">\"\\nTell me something, and I will repeat it back to you: \"</span></span><br><span class=\"line\">prompt += <span class=\"string\">\"\\nEnter 'quit' to end the program: \"</span></span><br><span class=\"line\">message = <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> message != <span class=\"string\">'quit'</span>:</span><br><span class=\"line\">    message = input(prompt)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> message != <span class=\"string\">'quit'</span>:</span><br><span class=\"line\">        print(message)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Tell me something, and I will repeat it back to you:</span><br><span class=\"line\">Enter &apos;quit&apos; to end the program: hello</span><br><span class=\"line\">hello</span><br><span class=\"line\"></span><br><span class=\"line\">Tell me something, and I will repeat it back to you:</span><br><span class=\"line\">Enter &apos;quit&apos; to end the program: 1</span><br><span class=\"line\">1</span><br><span class=\"line\"></span><br><span class=\"line\">Tell me something, and I will repeat it back to you:</span><br><span class=\"line\">Enter &apos;quit&apos; to end the program: quit</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-2-3-使用标志\"><a href=\"#7-2-3-使用标志\" class=\"headerlink\" title=\"7.2.3 使用标志\"></a>7.2.3 使用标志</h3><p><strong>E.g:</strong>  improved_parrot.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prompt = <span class=\"string\">\"\\nTell me something, and I will repeat it back to you: \"</span></span><br><span class=\"line\">prompt += <span class=\"string\">\"\\nEnter 'quit' to end the program: \"</span></span><br><span class=\"line\">message = <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">active = <span class=\"keyword\">True</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> active == <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    message = input(prompt)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> message == <span class=\"string\">'quit'</span>:</span><br><span class=\"line\">        active = <span class=\"keyword\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(message)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-same-as-above\"><a href=\"#Output-same-as-above\" class=\"headerlink\" title=\"Output: same as above\"></a>Output: <code>same as above</code></h6><h3 id=\"7-2-4-Use-break-to-quit-a-loop\"><a href=\"#7-2-4-Use-break-to-quit-a-loop\" class=\"headerlink\" title=\"7.2.4 Use break to quit a loop\"></a>7.2.4 Use <code>break</code> to quit a loop</h3><p><strong>E.g:</strong> second_inproved_parrot.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prompt = <span class=\"string\">\"\\nTell me something, and I will repeat it back to you: \"</span></span><br><span class=\"line\">prompt += <span class=\"string\">\"\\nEnter 'quit' to end the program: \"</span></span><br><span class=\"line\">message = <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    message = input(prompt)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> message == <span class=\"string\">'quit'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(message)</span><br></pre></td></tr></table></figure></p>\n<p>注: 在任何循环中都可使用 break</p>\n<h3 id=\"7-2-5-Use-continue\"><a href=\"#7-2-5-Use-continue\" class=\"headerlink\" title=\"7.2.5 Use continue\"></a>7.2.5 Use <code>continue</code></h3><p><strong>E.g:</strong> counting.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">current_number = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> current_number &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">    current_number += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> current_number %<span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    print(current_number)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">3</span><br><span class=\"line\">5</span><br><span class=\"line\">7</span><br><span class=\"line\">9</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-2-6-避免无限循环\"><a href=\"#7-2-6-避免无限循环\" class=\"headerlink\" title=\"7.2.6 避免无限循环\"></a>7.2.6 避免无限循环</h3><h2 id=\"7-3-使用-while-处理列表和字典\"><a href=\"#7-3-使用-while-处理列表和字典\" class=\"headerlink\" title=\"7.3 使用 while 处理列表和字典\"></a>7.3 使用 <code>while</code> 处理列表和字典</h2><h3 id=\"7-3-1-在列表中移动元素\"><a href=\"#7-3-1-在列表中移动元素\" class=\"headerlink\" title=\"7.3.1 在列表中移动元素\"></a>7.3.1 在列表中移动元素</h3><p><strong>E.g:</strong> confirmed_users.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unconfirmed_users = [<span class=\"string\">'alice'</span>, <span class=\"string\">'brian'</span>, <span class=\"string\">'candace'</span>]</span><br><span class=\"line\">confirmed_users = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> unconfirmed_users:</span><br><span class=\"line\">    current_user = unconfirmed_users.pop()</span><br><span class=\"line\">    </span><br><span class=\"line\">    print(<span class=\"string\">\"Verifying user: \"</span> + current_user.title())</span><br><span class=\"line\">    confirmed_users.append(current_user)</span><br><span class=\"line\">    </span><br><span class=\"line\">print(<span class=\"string\">\"\\nThe following users have been confirmed: \"</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> confirmed_user <span class=\"keyword\">in</span> confirmed_users:</span><br><span class=\"line\">    print(confirmed_user.title())</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###### Output:</span></span><br></pre></td></tr></table></figure></p>\n<p>Verifying user: Candace<br>Verifying user: Brian<br>Verifying user: Alice</p>\n<p>The following users have been confirmed:<br>Candace<br>Brian<br>Alice<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 7.3.2 删除包含特定值的所有列表元素</span><br><span class=\"line\">在第二章中, 我们使用函数 `remove()` 来删除列表中的特定值, 现在要删除多个相同元素:</span><br><span class=\"line\">__E.g:__ pets.py</span><br><span class=\"line\">```python</span><br><span class=\"line\">pets = [&apos;dog&apos;, &apos;cat&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;cat&apos;, &apos;rabbit&apos;, &apos;cat&apos;]</span><br><span class=\"line\">print(pets)</span><br><span class=\"line\"></span><br><span class=\"line\">while &apos;cat&apos; in pets:</span><br><span class=\"line\">    pets.remove(&apos;cat&apos;)</span><br><span class=\"line\">    </span><br><span class=\"line\">print(pets)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-6\"><a href=\"#Output-6\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&apos;dog&apos;, &apos;cat&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;cat&apos;, &apos;rabbit&apos;, &apos;cat&apos;]</span><br><span class=\"line\">[&apos;dog&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;rabbit&apos;]</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-3-3-使用用户输入填充字典\"><a href=\"#7-3-3-使用用户输入填充字典\" class=\"headerlink\" title=\"7.3.3 使用用户输入填充字典\"></a>7.3.3 使用用户输入填充字典</h3><p><strong>E.g:</strong> mountain_poll.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">responses = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">polling_active = <span class=\"keyword\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> polling_active:</span><br><span class=\"line\">    name = input(<span class=\"string\">\"\\nWhat is your name? \"</span>)</span><br><span class=\"line\">    response = input(<span class=\"string\">\"Which mountain would you like to climb someday? \"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    responses[name] = response</span><br><span class=\"line\">    </span><br><span class=\"line\">    repeat = input(<span class=\"string\">\"Would you like to let another person respond? (yes/no)\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> repeat == <span class=\"string\">'no'</span>:</span><br><span class=\"line\">        polling_active = <span class=\"keyword\">False</span></span><br><span class=\"line\">        </span><br><span class=\"line\">print(<span class=\"string\">\"\\n--- Poll Result ---\\n\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> name, mountain <span class=\"keyword\">in</span> responses.items():</span><br><span class=\"line\">    print(name.title() + <span class=\"string\">\" would like to climb \"</span> + mountain.title() + <span class=\"string\">\".\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-7\"><a href=\"#Output-7\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">What is your name? bbn</span><br><span class=\"line\">Which mountain would you like to climb someday? a</span><br><span class=\"line\">Would you like to let another person respond? (yes/no)no</span><br><span class=\"line\"></span><br><span class=\"line\">--- Poll Result ---</span><br><span class=\"line\"></span><br><span class=\"line\">Bbn would like to climb a.</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>使用 input() 处理用户输入</p>","more":"<h2 id=\"7-1-函数-input-工作原理\"><a href=\"#7-1-函数-input-工作原理\" class=\"headerlink\" title=\"7.1 函数 input() 工作原理\"></a>7.1 函数 <code>input()</code> 工作原理</h2><p><strong>E.g:</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">message = input(<span class=\"string\">\"Tell me something, and I will repeat it back to you: \"</span>)</span><br><span class=\"line\">print(message)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Tell me something, and I will repeat it back to you: </span><br><span class=\"line\">Hello, Everyone!</span><br><span class=\"line\">Hello, Everyone!</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-1-1-编写清晰的程序\"><a href=\"#7-1-1-编写清晰的程序\" class=\"headerlink\" title=\"7.1.1 编写清晰的程序\"></a>7.1.1 编写清晰的程序</h3><p>没当你编写函数 <code>input()</code> 时, 都应指定清晰而易于明白的提示如下所示:<br><strong>E.g:</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = input(<span class=\"string\">\"Please enter your name\"</span>)</span><br><span class=\"line\">print(<span class=\"string\">\"Hello, \"</span> + name + <span class=\"string\">\"!\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Please enter your name: Eric</span><br><span class=\"line\">Hello, Eric!</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-1-2-使用-int-来获取数值输入\"><a href=\"#7-1-2-使用-int-来获取数值输入\" class=\"headerlink\" title=\"7.1.2 使用 int() 来获取数值输入\"></a>7.1.2 使用 int() 来获取数值输入</h3><p>使用函数 <code>input()</code> 时, Python 会将用户输入解读为字符串, 为解决此问题, 可使用函数 <code>int()</code></p>\n<p><strong>E.g:</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">age = input(&quot;How old are you?&quot;)</span><br><span class=\"line\">age = int(age)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"7-1-3-求模运算符\"><a href=\"#7-1-3-求模运算符\" class=\"headerlink\" title=\"7.1.3 求模运算符 %\"></a>7.1.3 求模运算符 <code>%</code></h3><p><strong>E.g:</strong> even_or_odd.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">number = input(<span class=\"string\">\"Enter a number, and I'll tell you whether it is even or odd: \"</span>)</span><br><span class=\"line\">number = int(number)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> number % <span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"\\nThe number \"</span> + str(number) + <span class=\"string\">\" is even.\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"\\nThe number \"</span> + str(number) + <span class=\"string\">\" is odd.\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Enter a number, and I&apos;ll tell you whether it is even or odd: 43</span><br><span class=\"line\"></span><br><span class=\"line\">The number 43 is odd</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-2-while-循环简介\"><a href=\"#7-2-while-循环简介\" class=\"headerlink\" title=\"7.2 while 循环简介\"></a>7.2 <code>while</code> 循环简介</h2><h3 id=\"7-2-1-使用-while-循环\"><a href=\"#7-2-1-使用-while-循环\" class=\"headerlink\" title=\"7.2.1 使用 while 循环\"></a>7.2.1 使用 <code>while</code> 循环</h3><p><strong>E.g:</strong> counting.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">current_number = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> current_number &lt;= <span class=\"number\">5</span>:</span><br><span class=\"line\">    print(current_number)</span><br><span class=\"line\">    current_number += <span class=\"number\">1</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-2-2-让用户选择何时退出\"><a href=\"#7-2-2-让用户选择何时退出\" class=\"headerlink\" title=\"7.2.2 让用户选择何时退出\"></a>7.2.2 让用户选择何时退出</h3><p>we can define a variable and evaluate it when entering <code>while</code><br><strong>E.g:</strong> parrot.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prompt = <span class=\"string\">\"\\nTell me something, and I will repeat it back to you: \"</span></span><br><span class=\"line\">prompt += <span class=\"string\">\"\\nEnter 'quit' to end the program: \"</span></span><br><span class=\"line\">message = <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> message != <span class=\"string\">'quit'</span>:</span><br><span class=\"line\">    message = input(prompt)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> message != <span class=\"string\">'quit'</span>:</span><br><span class=\"line\">        print(message)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Tell me something, and I will repeat it back to you:</span><br><span class=\"line\">Enter &apos;quit&apos; to end the program: hello</span><br><span class=\"line\">hello</span><br><span class=\"line\"></span><br><span class=\"line\">Tell me something, and I will repeat it back to you:</span><br><span class=\"line\">Enter &apos;quit&apos; to end the program: 1</span><br><span class=\"line\">1</span><br><span class=\"line\"></span><br><span class=\"line\">Tell me something, and I will repeat it back to you:</span><br><span class=\"line\">Enter &apos;quit&apos; to end the program: quit</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-2-3-使用标志\"><a href=\"#7-2-3-使用标志\" class=\"headerlink\" title=\"7.2.3 使用标志\"></a>7.2.3 使用标志</h3><p><strong>E.g:</strong>  improved_parrot.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prompt = <span class=\"string\">\"\\nTell me something, and I will repeat it back to you: \"</span></span><br><span class=\"line\">prompt += <span class=\"string\">\"\\nEnter 'quit' to end the program: \"</span></span><br><span class=\"line\">message = <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">active = <span class=\"keyword\">True</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> active == <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    message = input(prompt)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> message == <span class=\"string\">'quit'</span>:</span><br><span class=\"line\">        active = <span class=\"keyword\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(message)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-same-as-above\"><a href=\"#Output-same-as-above\" class=\"headerlink\" title=\"Output: same as above\"></a>Output: <code>same as above</code></h6><h3 id=\"7-2-4-Use-break-to-quit-a-loop\"><a href=\"#7-2-4-Use-break-to-quit-a-loop\" class=\"headerlink\" title=\"7.2.4 Use break to quit a loop\"></a>7.2.4 Use <code>break</code> to quit a loop</h3><p><strong>E.g:</strong> second_inproved_parrot.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prompt = <span class=\"string\">\"\\nTell me something, and I will repeat it back to you: \"</span></span><br><span class=\"line\">prompt += <span class=\"string\">\"\\nEnter 'quit' to end the program: \"</span></span><br><span class=\"line\">message = <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    message = input(prompt)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> message == <span class=\"string\">'quit'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(message)</span><br></pre></td></tr></table></figure></p>\n<p>注: 在任何循环中都可使用 break</p>\n<h3 id=\"7-2-5-Use-continue\"><a href=\"#7-2-5-Use-continue\" class=\"headerlink\" title=\"7.2.5 Use continue\"></a>7.2.5 Use <code>continue</code></h3><p><strong>E.g:</strong> counting.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">current_number = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> current_number &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">    current_number += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> current_number %<span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    print(current_number)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br><span class=\"line\">3</span><br><span class=\"line\">5</span><br><span class=\"line\">7</span><br><span class=\"line\">9</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-2-6-避免无限循环\"><a href=\"#7-2-6-避免无限循环\" class=\"headerlink\" title=\"7.2.6 避免无限循环\"></a>7.2.6 避免无限循环</h3><h2 id=\"7-3-使用-while-处理列表和字典\"><a href=\"#7-3-使用-while-处理列表和字典\" class=\"headerlink\" title=\"7.3 使用 while 处理列表和字典\"></a>7.3 使用 <code>while</code> 处理列表和字典</h2><h3 id=\"7-3-1-在列表中移动元素\"><a href=\"#7-3-1-在列表中移动元素\" class=\"headerlink\" title=\"7.3.1 在列表中移动元素\"></a>7.3.1 在列表中移动元素</h3><p><strong>E.g:</strong> confirmed_users.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unconfirmed_users = [<span class=\"string\">'alice'</span>, <span class=\"string\">'brian'</span>, <span class=\"string\">'candace'</span>]</span><br><span class=\"line\">confirmed_users = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> unconfirmed_users:</span><br><span class=\"line\">    current_user = unconfirmed_users.pop()</span><br><span class=\"line\">    </span><br><span class=\"line\">    print(<span class=\"string\">\"Verifying user: \"</span> + current_user.title())</span><br><span class=\"line\">    confirmed_users.append(current_user)</span><br><span class=\"line\">    </span><br><span class=\"line\">print(<span class=\"string\">\"\\nThe following users have been confirmed: \"</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> confirmed_user <span class=\"keyword\">in</span> confirmed_users:</span><br><span class=\"line\">    print(confirmed_user.title())</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###### Output:</span></span><br></pre></td></tr></table></figure></p>\n<p>Verifying user: Candace<br>Verifying user: Brian<br>Verifying user: Alice</p>\n<p>The following users have been confirmed:<br>Candace<br>Brian<br>Alice<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 7.3.2 删除包含特定值的所有列表元素</span><br><span class=\"line\">在第二章中, 我们使用函数 `remove()` 来删除列表中的特定值, 现在要删除多个相同元素:</span><br><span class=\"line\">__E.g:__ pets.py</span><br><span class=\"line\">```python</span><br><span class=\"line\">pets = [&apos;dog&apos;, &apos;cat&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;cat&apos;, &apos;rabbit&apos;, &apos;cat&apos;]</span><br><span class=\"line\">print(pets)</span><br><span class=\"line\"></span><br><span class=\"line\">while &apos;cat&apos; in pets:</span><br><span class=\"line\">    pets.remove(&apos;cat&apos;)</span><br><span class=\"line\">    </span><br><span class=\"line\">print(pets)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-6\"><a href=\"#Output-6\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&apos;dog&apos;, &apos;cat&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;cat&apos;, &apos;rabbit&apos;, &apos;cat&apos;]</span><br><span class=\"line\">[&apos;dog&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;rabbit&apos;]</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-3-3-使用用户输入填充字典\"><a href=\"#7-3-3-使用用户输入填充字典\" class=\"headerlink\" title=\"7.3.3 使用用户输入填充字典\"></a>7.3.3 使用用户输入填充字典</h3><p><strong>E.g:</strong> mountain_poll.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">responses = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">polling_active = <span class=\"keyword\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> polling_active:</span><br><span class=\"line\">    name = input(<span class=\"string\">\"\\nWhat is your name? \"</span>)</span><br><span class=\"line\">    response = input(<span class=\"string\">\"Which mountain would you like to climb someday? \"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    responses[name] = response</span><br><span class=\"line\">    </span><br><span class=\"line\">    repeat = input(<span class=\"string\">\"Would you like to let another person respond? (yes/no)\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> repeat == <span class=\"string\">'no'</span>:</span><br><span class=\"line\">        polling_active = <span class=\"keyword\">False</span></span><br><span class=\"line\">        </span><br><span class=\"line\">print(<span class=\"string\">\"\\n--- Poll Result ---\\n\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> name, mountain <span class=\"keyword\">in</span> responses.items():</span><br><span class=\"line\">    print(name.title() + <span class=\"string\">\" would like to climb \"</span> + mountain.title() + <span class=\"string\">\".\"</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-7\"><a href=\"#Output-7\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">What is your name? bbn</span><br><span class=\"line\">Which mountain would you like to climb someday? a</span><br><span class=\"line\">Would you like to let another person respond? (yes/no)no</span><br><span class=\"line\"></span><br><span class=\"line\">--- Poll Result ---</span><br><span class=\"line\"></span><br><span class=\"line\">Bbn would like to climb a.</span><br></pre></td></tr></table></figure>"},{"title":"Algorithm Analysis","author":"OCD","date":"2018-11-26T03:32:37.619Z","mathjax":true,"_content":"\nShowing two possible Algorithms:\n\n<!-- more -->\n## 1. Maximum Subsequence Sum\n### A. O( N*logN \\)\nThis example uses a `divide and conquer` strategy\n__Example__:\n\n```c\n//\n//  main.c\n//  Temp\n//\n//  Created by clfbbn on 2017/11/26.\n//  Copyright © 2017年 clfbbn. All rights reserved.\n//\n\n#include <stdio.h>\nint Max3(int a, int b, int c) {\n    int max;\n    if (a > b) {\n        max = a;\n    } else{\n        max = b;\n    }\n    if (max < c) {\n        max = c;\n    }\n    return max;\n}\nstatic int MaxSubSum( const int A[8], int Left, int Right) {\n    int MaxLeftSum, MaxRightSum;\n    int MaxLeftBroaderSum, MaxRightBroaderSum;\n    int LeftBroaderSum, RightBroaderSum;\n    int Center, i;\n    \n    if (Left == Right) {\n        if (A[ Left ] > 0) {\n            return A[ Left ];\n        } else{\n            return 0;\n        }\n    }\n    \n    Center = (Left + Right) / 2;\n    MaxLeftSum = MaxSubSum(A, Left, Center);\n    MaxRightSum = MaxSubSum(A, Center + 1, Right);\n    \n    MaxLeftBroaderSum = 0; MaxRightBroaderSum = 0;\n    LeftBroaderSum = 0; RightBroaderSum = 0;\n    \n    for (i = Center; i >= Left; --i) {\n        LeftBroaderSum += A[i];\n        if (LeftBroaderSum > MaxLeftBroaderSum) {\n            MaxLeftBroaderSum = LeftBroaderSum;\n        }\n    }\n    \n    for (i = Center + 1; i <= Right; ++i) {\n        RightBroaderSum += A[i];\n        if (RightBroaderSum > MaxRightBroaderSum) {\n            MaxRightBroaderSum = RightBroaderSum;\n        }\n    }\n    return Max3( MaxLeftSum, MaxRightSum, MaxRightBroaderSum + MaxLeftBroaderSum);\n}\n\nint MaxSubsequenceSum(const int A[], int N){\n    return MaxSubSum(A, 0, N - 1);\n}\nint main() {\n    int array[8] = {4, -3, 5, -2, -1, 2, 6, -2,};\n    printf(\"%d\\n\", MaxSubsequenceSum(array, 8));\n    \n    return 0;\n}\n```\n\n### B. O(N)\n```c\nint MaxSunsequenceSum_New( const int A[], int N) {\n    int ThisSum, MaxSum, j;\n    \n    ThisSum = MaxSum = 0;\n    \n    for (j = 0; j < N; j++) {\n        ThisSum += A[j];\n        if (ThisSum < 0) {\n            ThisSum = 0;\n        }\n        if (ThisSum > MaxSum) {\n            MaxSum = ThisSum;\n        }\n    }\n    return MaxSum;\n}\n```\n\n## 2. Binary Search ( O(logN) )\n\n```c\n#define ElementType int\n#include <stdio.h>\n\n\nint BinarySearch(const ElementType A[], int N, ElementType x) {\n    int Low, High, Mid;\n    \n    Low = 0;\n    High = N - 1;\n    while (Low <= High) {\n        Mid = (Low + High) / 2;\n        if (x < A[Mid]) {\n            High = Mid;\n        } else if (x > A[Mid]) {\n            Low = Mid + 1;\n        } else {\n            return Mid;\n        }\n    }\n    return -1;\n}\n\nint main() {\n    ElementType Array[] = {1, 7, 4, 3, 2, 5, 7};\n    printf(\"%d\\n\", BinarySearch(Array, 0, 7));\n    \n    return 0;\n}\n```\n\n## 3. Euclid's Algorithm ( O(logN) )\n\n```c\nint gcd(int x, int y) {\n    int t;\n    if (x < y) {\n        t = x;\n        x = y;\n        y = t;\n    }\n    \n    while (y > 0) {\n        t = x;\n        x = y;\n        y = t % y;\n    }\n    return x;\n}\n```\n\n## 4. Exponentiation\n```c\nlong int Pow( int X, int N ) {\n    if (N == 0) {\n        return 1;\n    } else if( N % 2 == 0) {\n        return Pow(X * X, N / 2);\n    } else {\n        return Pow(X * X, N / 2) * X;\n    }\n    \n}\n```\n\n## 5. Exercises\n### 5.1 Calculate $$\\sum_{i=0}^N A_iX^i$$\n```c\nlong int Cal(int A[], int X, int N){\n    long int sum = 0;\n    sum = A[0];\n    for (int i = 0; i < N - 1 ; i++) {\n        sum = X * sum + A[i + 1];\n    }\n    return sum;\n}\n```\n\n### 5.2 Three Ways to generate numbers between A and B\n#### Way 1\n```c\nint inIt(int * arr, int x, int n) {\n    for (int i = 0; i < n; ++ i) {\n        if (x == arr[i]) {\n            return 1;\n        }\n    }\n    return 0;\n}\n\nint* generateA(const int x, const int y) {\n    int* A = malloc(sizeof(int) * (y - x + 1));\n    int generated;\n    srand((unsigned int)time(NULL));\n    int i = 0;\n    for (int i = 0; i < y - x + 1; ++i) {\n        A[i] = -1;\n    }\n    while (i < (y - x + 1)) {\n        generated = rand() % (y - x + 1);\n        if (inIt(A, generated, i) == 0) {\n            A[i++] = generated;\n        }\n    }\n    return A;\n}\n```\n#### Way 2\n```c\nint* generateB(const int x, const int y) {\n    int* A = malloc(sizeof(int) * (y - x + 1));\n    int generated;\n    srand((unsigned int)time(NULL));\n    int* Used = malloc(sizeof(int) * (y - x + 1));\n    for (int i = 0; i < y - x + 1; ++i) {\n        Used[i] = 0;\n    }\n    int i = 0;\n    while (i < (y - x + 1)) {\n        generated = rand() % (y - x + 1);\n        if (Used[generated] == 0) {\n            Used[generated] = 1;\n            A[i++] = generated;\n        }\n    }\n    return A;\n}\n```\n#### Way 3\n```c\nint* generateC(const int x, const int y) {\n    int* A = malloc(sizeof(int) * (y - x + 1));\n    for (int i = 0; i < y - x + 1; ++i) {\n        A[i] = i ;\n    }\n    for (int i = 0; i < y - x + 1; ++ i) {\n        swap(&A[i], &A[RandonInt(0, i)]);\n    }\n    return A;\n}\n```\n\n\n\n","source":"_posts/2017-11-26-Algorithm-Analysis.md","raw":"---\ntitle: Algorithm Analysis\nauthor: \"OCD\"\ndate: 2017-11-30 1\nmathjax: true\ncategory:\n    - Programming\ntags: \n    - C\n    - Data Structure\n    - Develop\n---\n\nShowing two possible Algorithms:\n\n<!-- more -->\n## 1. Maximum Subsequence Sum\n### A. O( N*logN \\)\nThis example uses a `divide and conquer` strategy\n__Example__:\n\n```c\n//\n//  main.c\n//  Temp\n//\n//  Created by clfbbn on 2017/11/26.\n//  Copyright © 2017年 clfbbn. All rights reserved.\n//\n\n#include <stdio.h>\nint Max3(int a, int b, int c) {\n    int max;\n    if (a > b) {\n        max = a;\n    } else{\n        max = b;\n    }\n    if (max < c) {\n        max = c;\n    }\n    return max;\n}\nstatic int MaxSubSum( const int A[8], int Left, int Right) {\n    int MaxLeftSum, MaxRightSum;\n    int MaxLeftBroaderSum, MaxRightBroaderSum;\n    int LeftBroaderSum, RightBroaderSum;\n    int Center, i;\n    \n    if (Left == Right) {\n        if (A[ Left ] > 0) {\n            return A[ Left ];\n        } else{\n            return 0;\n        }\n    }\n    \n    Center = (Left + Right) / 2;\n    MaxLeftSum = MaxSubSum(A, Left, Center);\n    MaxRightSum = MaxSubSum(A, Center + 1, Right);\n    \n    MaxLeftBroaderSum = 0; MaxRightBroaderSum = 0;\n    LeftBroaderSum = 0; RightBroaderSum = 0;\n    \n    for (i = Center; i >= Left; --i) {\n        LeftBroaderSum += A[i];\n        if (LeftBroaderSum > MaxLeftBroaderSum) {\n            MaxLeftBroaderSum = LeftBroaderSum;\n        }\n    }\n    \n    for (i = Center + 1; i <= Right; ++i) {\n        RightBroaderSum += A[i];\n        if (RightBroaderSum > MaxRightBroaderSum) {\n            MaxRightBroaderSum = RightBroaderSum;\n        }\n    }\n    return Max3( MaxLeftSum, MaxRightSum, MaxRightBroaderSum + MaxLeftBroaderSum);\n}\n\nint MaxSubsequenceSum(const int A[], int N){\n    return MaxSubSum(A, 0, N - 1);\n}\nint main() {\n    int array[8] = {4, -3, 5, -2, -1, 2, 6, -2,};\n    printf(\"%d\\n\", MaxSubsequenceSum(array, 8));\n    \n    return 0;\n}\n```\n\n### B. O(N)\n```c\nint MaxSunsequenceSum_New( const int A[], int N) {\n    int ThisSum, MaxSum, j;\n    \n    ThisSum = MaxSum = 0;\n    \n    for (j = 0; j < N; j++) {\n        ThisSum += A[j];\n        if (ThisSum < 0) {\n            ThisSum = 0;\n        }\n        if (ThisSum > MaxSum) {\n            MaxSum = ThisSum;\n        }\n    }\n    return MaxSum;\n}\n```\n\n## 2. Binary Search ( O(logN) )\n\n```c\n#define ElementType int\n#include <stdio.h>\n\n\nint BinarySearch(const ElementType A[], int N, ElementType x) {\n    int Low, High, Mid;\n    \n    Low = 0;\n    High = N - 1;\n    while (Low <= High) {\n        Mid = (Low + High) / 2;\n        if (x < A[Mid]) {\n            High = Mid;\n        } else if (x > A[Mid]) {\n            Low = Mid + 1;\n        } else {\n            return Mid;\n        }\n    }\n    return -1;\n}\n\nint main() {\n    ElementType Array[] = {1, 7, 4, 3, 2, 5, 7};\n    printf(\"%d\\n\", BinarySearch(Array, 0, 7));\n    \n    return 0;\n}\n```\n\n## 3. Euclid's Algorithm ( O(logN) )\n\n```c\nint gcd(int x, int y) {\n    int t;\n    if (x < y) {\n        t = x;\n        x = y;\n        y = t;\n    }\n    \n    while (y > 0) {\n        t = x;\n        x = y;\n        y = t % y;\n    }\n    return x;\n}\n```\n\n## 4. Exponentiation\n```c\nlong int Pow( int X, int N ) {\n    if (N == 0) {\n        return 1;\n    } else if( N % 2 == 0) {\n        return Pow(X * X, N / 2);\n    } else {\n        return Pow(X * X, N / 2) * X;\n    }\n    \n}\n```\n\n## 5. Exercises\n### 5.1 Calculate $$\\sum_{i=0}^N A_iX^i$$\n```c\nlong int Cal(int A[], int X, int N){\n    long int sum = 0;\n    sum = A[0];\n    for (int i = 0; i < N - 1 ; i++) {\n        sum = X * sum + A[i + 1];\n    }\n    return sum;\n}\n```\n\n### 5.2 Three Ways to generate numbers between A and B\n#### Way 1\n```c\nint inIt(int * arr, int x, int n) {\n    for (int i = 0; i < n; ++ i) {\n        if (x == arr[i]) {\n            return 1;\n        }\n    }\n    return 0;\n}\n\nint* generateA(const int x, const int y) {\n    int* A = malloc(sizeof(int) * (y - x + 1));\n    int generated;\n    srand((unsigned int)time(NULL));\n    int i = 0;\n    for (int i = 0; i < y - x + 1; ++i) {\n        A[i] = -1;\n    }\n    while (i < (y - x + 1)) {\n        generated = rand() % (y - x + 1);\n        if (inIt(A, generated, i) == 0) {\n            A[i++] = generated;\n        }\n    }\n    return A;\n}\n```\n#### Way 2\n```c\nint* generateB(const int x, const int y) {\n    int* A = malloc(sizeof(int) * (y - x + 1));\n    int generated;\n    srand((unsigned int)time(NULL));\n    int* Used = malloc(sizeof(int) * (y - x + 1));\n    for (int i = 0; i < y - x + 1; ++i) {\n        Used[i] = 0;\n    }\n    int i = 0;\n    while (i < (y - x + 1)) {\n        generated = rand() % (y - x + 1);\n        if (Used[generated] == 0) {\n            Used[generated] = 1;\n            A[i++] = generated;\n        }\n    }\n    return A;\n}\n```\n#### Way 3\n```c\nint* generateC(const int x, const int y) {\n    int* A = malloc(sizeof(int) * (y - x + 1));\n    for (int i = 0; i < y - x + 1; ++i) {\n        A[i] = i ;\n    }\n    for (int i = 0; i < y - x + 1; ++ i) {\n        swap(&A[i], &A[RandonInt(0, i)]);\n    }\n    return A;\n}\n```\n\n\n\n","slug":"2017-11-26-Algorithm-Analysis","published":1,"updated":"2018-11-26T03:32:37.619Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wf000drmtu8chesh79","content":"<p>Showing two possible Algorithms:</p>\n<a id=\"more\"></a>\n<h2 id=\"1-Maximum-Subsequence-Sum\"><a href=\"#1-Maximum-Subsequence-Sum\" class=\"headerlink\" title=\"1. Maximum Subsequence Sum\"></a>1. Maximum Subsequence Sum</h2><h3 id=\"A-O-N-logN\"><a href=\"#A-O-N-logN\" class=\"headerlink\" title=\"A. O( N*logN )\"></a>A. O( N*logN )</h3><p>This example uses a <code>divide and conquer</code> strategy<br><strong>Example</strong>:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  main.c</span></span><br><span class=\"line\"><span class=\"comment\">//  Temp</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  Created by clfbbn on 2017/11/26.</span></span><br><span class=\"line\"><span class=\"comment\">//  Copyright © 2017年 clfbbn. All rights reserved.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Max3</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b, <span class=\"keyword\">int</span> c)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> max;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a &gt; b) &#123;</span><br><span class=\"line\">        max = a;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        max = b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (max &lt; c) &#123;</span><br><span class=\"line\">        max = c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">MaxSubSum</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> A[<span class=\"number\">8</span>], <span class=\"keyword\">int</span> Left, <span class=\"keyword\">int</span> Right)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> MaxLeftSum, MaxRightSum;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> MaxLeftBroaderSum, MaxRightBroaderSum;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> LeftBroaderSum, RightBroaderSum;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Center, i;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Left == Right) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (A[ Left ] &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> A[ Left ];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Center = (Left + Right) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    MaxLeftSum = MaxSubSum(A, Left, Center);</span><br><span class=\"line\">    MaxRightSum = MaxSubSum(A, Center + <span class=\"number\">1</span>, Right);</span><br><span class=\"line\">    </span><br><span class=\"line\">    MaxLeftBroaderSum = <span class=\"number\">0</span>; MaxRightBroaderSum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    LeftBroaderSum = <span class=\"number\">0</span>; RightBroaderSum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = Center; i &gt;= Left; --i) &#123;</span><br><span class=\"line\">        LeftBroaderSum += A[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (LeftBroaderSum &gt; MaxLeftBroaderSum) &#123;</span><br><span class=\"line\">            MaxLeftBroaderSum = LeftBroaderSum;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = Center + <span class=\"number\">1</span>; i &lt;= Right; ++i) &#123;</span><br><span class=\"line\">        RightBroaderSum += A[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (RightBroaderSum &gt; MaxRightBroaderSum) &#123;</span><br><span class=\"line\">            MaxRightBroaderSum = RightBroaderSum;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Max3( MaxLeftSum, MaxRightSum, MaxRightBroaderSum + MaxLeftBroaderSum);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">MaxSubsequenceSum</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> A[], <span class=\"keyword\">int</span> N)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaxSubSum(A, <span class=\"number\">0</span>, N - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">8</span>] = &#123;<span class=\"number\">4</span>, <span class=\"number\">-3</span>, <span class=\"number\">5</span>, <span class=\"number\">-2</span>, <span class=\"number\">-1</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">-2</span>,&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, MaxSubsequenceSum(<span class=\"built_in\">array</span>, <span class=\"number\">8</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"B-O-N\"><a href=\"#B-O-N\" class=\"headerlink\" title=\"B. O(N)\"></a>B. O(N)</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">MaxSunsequenceSum_New</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> A[], <span class=\"keyword\">int</span> N)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ThisSum, MaxSum, j;</span><br><span class=\"line\">    </span><br><span class=\"line\">    ThisSum = MaxSum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; N; j++) &#123;</span><br><span class=\"line\">        ThisSum += A[j];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ThisSum &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            ThisSum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ThisSum &gt; MaxSum) &#123;</span><br><span class=\"line\">            MaxSum = ThisSum;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaxSum;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Binary-Search-O-logN\"><a href=\"#2-Binary-Search-O-logN\" class=\"headerlink\" title=\"2. Binary Search ( O(logN) )\"></a>2. Binary Search ( O(logN) )</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ElementType int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">BinarySearch</span><span class=\"params\">(<span class=\"keyword\">const</span> ElementType A[], <span class=\"keyword\">int</span> N, ElementType x)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Low, High, Mid;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Low = <span class=\"number\">0</span>;</span><br><span class=\"line\">    High = N - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (Low &lt;= High) &#123;</span><br><span class=\"line\">        Mid = (Low + High) / <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; A[Mid]) &#123;</span><br><span class=\"line\">            High = Mid;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (x &gt; A[Mid]) &#123;</span><br><span class=\"line\">            Low = Mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Mid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    ElementType Array[] = &#123;<span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, BinarySearch(Array, <span class=\"number\">0</span>, <span class=\"number\">7</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-Euclid’s-Algorithm-O-logN\"><a href=\"#3-Euclid’s-Algorithm-O-logN\" class=\"headerlink\" title=\"3. Euclid’s Algorithm ( O(logN) )\"></a>3. Euclid’s Algorithm ( O(logN) )</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x &lt; y) &#123;</span><br><span class=\"line\">        t = x;</span><br><span class=\"line\">        x = y;</span><br><span class=\"line\">        y = t;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (y &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        t = x;</span><br><span class=\"line\">        x = y;</span><br><span class=\"line\">        y = t % y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Exponentiation\"><a href=\"#4-Exponentiation\" class=\"headerlink\" title=\"4. Exponentiation\"></a>4. Exponentiation</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">int</span> <span class=\"title\">Pow</span><span class=\"params\">( <span class=\"keyword\">int</span> X, <span class=\"keyword\">int</span> N )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (N == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>( N % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Pow(X * X, N / <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Pow(X * X, N / <span class=\"number\">2</span>) * X;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Exercises\"><a href=\"#5-Exercises\" class=\"headerlink\" title=\"5. Exercises\"></a>5. Exercises</h2><h3 id=\"5-1-Calculate-sum-i-0-N-A-iX-i\"><a href=\"#5-1-Calculate-sum-i-0-N-A-iX-i\" class=\"headerlink\" title=\"5.1 Calculate $$\\sum_{i=0}^N A_iX^i$$\"></a>5.1 Calculate $$\\sum_{i=0}^N A_iX^i$$</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">int</span> <span class=\"title\">Cal</span><span class=\"params\">(<span class=\"keyword\">int</span> A[], <span class=\"keyword\">int</span> X, <span class=\"keyword\">int</span> N)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    sum = A[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N - <span class=\"number\">1</span> ; i++) &#123;</span><br><span class=\"line\">        sum = X * sum + A[i + <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-2-Three-Ways-to-generate-numbers-between-A-and-B\"><a href=\"#5-2-Three-Ways-to-generate-numbers-between-A-and-B\" class=\"headerlink\" title=\"5.2 Three Ways to generate numbers between A and B\"></a>5.2 Three Ways to generate numbers between A and B</h3><h4 id=\"Way-1\"><a href=\"#Way-1\" class=\"headerlink\" title=\"Way 1\"></a>Way 1</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">inIt</span><span class=\"params\">(<span class=\"keyword\">int</span> * arr, <span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++ i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x == arr[i]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>* <span class=\"title\">generateA</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> x, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* A = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * (y - x + <span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> generated;</span><br><span class=\"line\">    srand((<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)time(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; y - x + <span class=\"number\">1</span>; ++i) &#123;</span><br><span class=\"line\">        A[i] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; (y - x + <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">        generated = rand() % (y - x + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (inIt(A, generated, i) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            A[i++] = generated;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> A;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Way-2\"><a href=\"#Way-2\" class=\"headerlink\" title=\"Way 2\"></a>Way 2</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>* <span class=\"title\">generateB</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> x, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* A = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * (y - x + <span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> generated;</span><br><span class=\"line\">    srand((<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)time(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* Used = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * (y - x + <span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; y - x + <span class=\"number\">1</span>; ++i) &#123;</span><br><span class=\"line\">        Used[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; (y - x + <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">        generated = rand() % (y - x + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Used[generated] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            Used[generated] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            A[i++] = generated;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> A;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Way-3\"><a href=\"#Way-3\" class=\"headerlink\" title=\"Way 3\"></a>Way 3</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>* <span class=\"title\">generateC</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> x, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* A = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * (y - x + <span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; y - x + <span class=\"number\">1</span>; ++i) &#123;</span><br><span class=\"line\">        A[i] = i ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; y - x + <span class=\"number\">1</span>; ++ i) &#123;</span><br><span class=\"line\">        swap(&amp;A[i], &amp;A[RandonInt(<span class=\"number\">0</span>, i)]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> A;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Showing two possible Algorithms:</p>","more":"<h2 id=\"1-Maximum-Subsequence-Sum\"><a href=\"#1-Maximum-Subsequence-Sum\" class=\"headerlink\" title=\"1. Maximum Subsequence Sum\"></a>1. Maximum Subsequence Sum</h2><h3 id=\"A-O-N-logN\"><a href=\"#A-O-N-logN\" class=\"headerlink\" title=\"A. O( N*logN )\"></a>A. O( N*logN )</h3><p>This example uses a <code>divide and conquer</code> strategy<br><strong>Example</strong>:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  main.c</span></span><br><span class=\"line\"><span class=\"comment\">//  Temp</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">//  Created by clfbbn on 2017/11/26.</span></span><br><span class=\"line\"><span class=\"comment\">//  Copyright © 2017年 clfbbn. All rights reserved.</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Max3</span><span class=\"params\">(<span class=\"keyword\">int</span> a, <span class=\"keyword\">int</span> b, <span class=\"keyword\">int</span> c)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> max;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (a &gt; b) &#123;</span><br><span class=\"line\">        max = a;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        max = b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (max &lt; c) &#123;</span><br><span class=\"line\">        max = c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">MaxSubSum</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> A[<span class=\"number\">8</span>], <span class=\"keyword\">int</span> Left, <span class=\"keyword\">int</span> Right)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> MaxLeftSum, MaxRightSum;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> MaxLeftBroaderSum, MaxRightBroaderSum;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> LeftBroaderSum, RightBroaderSum;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Center, i;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Left == Right) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (A[ Left ] &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> A[ Left ];</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Center = (Left + Right) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    MaxLeftSum = MaxSubSum(A, Left, Center);</span><br><span class=\"line\">    MaxRightSum = MaxSubSum(A, Center + <span class=\"number\">1</span>, Right);</span><br><span class=\"line\">    </span><br><span class=\"line\">    MaxLeftBroaderSum = <span class=\"number\">0</span>; MaxRightBroaderSum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    LeftBroaderSum = <span class=\"number\">0</span>; RightBroaderSum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = Center; i &gt;= Left; --i) &#123;</span><br><span class=\"line\">        LeftBroaderSum += A[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (LeftBroaderSum &gt; MaxLeftBroaderSum) &#123;</span><br><span class=\"line\">            MaxLeftBroaderSum = LeftBroaderSum;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (i = Center + <span class=\"number\">1</span>; i &lt;= Right; ++i) &#123;</span><br><span class=\"line\">        RightBroaderSum += A[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (RightBroaderSum &gt; MaxRightBroaderSum) &#123;</span><br><span class=\"line\">            MaxRightBroaderSum = RightBroaderSum;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Max3( MaxLeftSum, MaxRightSum, MaxRightBroaderSum + MaxLeftBroaderSum);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">MaxSubsequenceSum</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> A[], <span class=\"keyword\">int</span> N)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaxSubSum(A, <span class=\"number\">0</span>, N - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">8</span>] = &#123;<span class=\"number\">4</span>, <span class=\"number\">-3</span>, <span class=\"number\">5</span>, <span class=\"number\">-2</span>, <span class=\"number\">-1</span>, <span class=\"number\">2</span>, <span class=\"number\">6</span>, <span class=\"number\">-2</span>,&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, MaxSubsequenceSum(<span class=\"built_in\">array</span>, <span class=\"number\">8</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"B-O-N\"><a href=\"#B-O-N\" class=\"headerlink\" title=\"B. O(N)\"></a>B. O(N)</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">MaxSunsequenceSum_New</span><span class=\"params\">( <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> A[], <span class=\"keyword\">int</span> N)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ThisSum, MaxSum, j;</span><br><span class=\"line\">    </span><br><span class=\"line\">    ThisSum = MaxSum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt; N; j++) &#123;</span><br><span class=\"line\">        ThisSum += A[j];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ThisSum &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            ThisSum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ThisSum &gt; MaxSum) &#123;</span><br><span class=\"line\">            MaxSum = ThisSum;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> MaxSum;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Binary-Search-O-logN\"><a href=\"#2-Binary-Search-O-logN\" class=\"headerlink\" title=\"2. Binary Search ( O(logN) )\"></a>2. Binary Search ( O(logN) )</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ElementType int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">BinarySearch</span><span class=\"params\">(<span class=\"keyword\">const</span> ElementType A[], <span class=\"keyword\">int</span> N, ElementType x)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> Low, High, Mid;</span><br><span class=\"line\">    </span><br><span class=\"line\">    Low = <span class=\"number\">0</span>;</span><br><span class=\"line\">    High = N - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (Low &lt;= High) &#123;</span><br><span class=\"line\">        Mid = (Low + High) / <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x &lt; A[Mid]) &#123;</span><br><span class=\"line\">            High = Mid;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (x &gt; A[Mid]) &#123;</span><br><span class=\"line\">            Low = Mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> Mid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    ElementType Array[] = &#123;<span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">4</span>, <span class=\"number\">3</span>, <span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>, BinarySearch(Array, <span class=\"number\">0</span>, <span class=\"number\">7</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-Euclid’s-Algorithm-O-logN\"><a href=\"#3-Euclid’s-Algorithm-O-logN\" class=\"headerlink\" title=\"3. Euclid’s Algorithm ( O(logN) )\"></a>3. Euclid’s Algorithm ( O(logN) )</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x &lt; y) &#123;</span><br><span class=\"line\">        t = x;</span><br><span class=\"line\">        x = y;</span><br><span class=\"line\">        y = t;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (y &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        t = x;</span><br><span class=\"line\">        x = y;</span><br><span class=\"line\">        y = t % y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Exponentiation\"><a href=\"#4-Exponentiation\" class=\"headerlink\" title=\"4. Exponentiation\"></a>4. Exponentiation</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">int</span> <span class=\"title\">Pow</span><span class=\"params\">( <span class=\"keyword\">int</span> X, <span class=\"keyword\">int</span> N )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (N == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>( N % <span class=\"number\">2</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Pow(X * X, N / <span class=\"number\">2</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Pow(X * X, N / <span class=\"number\">2</span>) * X;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Exercises\"><a href=\"#5-Exercises\" class=\"headerlink\" title=\"5. Exercises\"></a>5. Exercises</h2><h3 id=\"5-1-Calculate-sum-i-0-N-A-iX-i\"><a href=\"#5-1-Calculate-sum-i-0-N-A-iX-i\" class=\"headerlink\" title=\"5.1 Calculate $$\\sum_{i=0}^N A_iX^i$$\"></a>5.1 Calculate $$\\sum_{i=0}^N A_iX^i$$</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">long</span> <span class=\"keyword\">int</span> <span class=\"title\">Cal</span><span class=\"params\">(<span class=\"keyword\">int</span> A[], <span class=\"keyword\">int</span> X, <span class=\"keyword\">int</span> N)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">long</span> <span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    sum = A[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N - <span class=\"number\">1</span> ; i++) &#123;</span><br><span class=\"line\">        sum = X * sum + A[i + <span class=\"number\">1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-2-Three-Ways-to-generate-numbers-between-A-and-B\"><a href=\"#5-2-Three-Ways-to-generate-numbers-between-A-and-B\" class=\"headerlink\" title=\"5.2 Three Ways to generate numbers between A and B\"></a>5.2 Three Ways to generate numbers between A and B</h3><h4 id=\"Way-1\"><a href=\"#Way-1\" class=\"headerlink\" title=\"Way 1\"></a>Way 1</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">inIt</span><span class=\"params\">(<span class=\"keyword\">int</span> * arr, <span class=\"keyword\">int</span> x, <span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++ i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (x == arr[i]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>* <span class=\"title\">generateA</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> x, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* A = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * (y - x + <span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> generated;</span><br><span class=\"line\">    srand((<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)time(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; y - x + <span class=\"number\">1</span>; ++i) &#123;</span><br><span class=\"line\">        A[i] = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; (y - x + <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">        generated = rand() % (y - x + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (inIt(A, generated, i) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            A[i++] = generated;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> A;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Way-2\"><a href=\"#Way-2\" class=\"headerlink\" title=\"Way 2\"></a>Way 2</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>* <span class=\"title\">generateB</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> x, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* A = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * (y - x + <span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">int</span> generated;</span><br><span class=\"line\">    srand((<span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span>)time(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* Used = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * (y - x + <span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; y - x + <span class=\"number\">1</span>; ++i) &#123;</span><br><span class=\"line\">        Used[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (i &lt; (y - x + <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">        generated = rand() % (y - x + <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (Used[generated] == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            Used[generated] = <span class=\"number\">1</span>;</span><br><span class=\"line\">            A[i++] = generated;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> A;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"Way-3\"><a href=\"#Way-3\" class=\"headerlink\" title=\"Way 3\"></a>Way 3</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>* <span class=\"title\">generateC</span><span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">int</span> x, <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> y)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* A = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * (y - x + <span class=\"number\">1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; y - x + <span class=\"number\">1</span>; ++i) &#123;</span><br><span class=\"line\">        A[i] = i ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; y - x + <span class=\"number\">1</span>; ++ i) &#123;</span><br><span class=\"line\">        swap(&amp;A[i], &amp;A[RandonInt(<span class=\"number\">0</span>, i)]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> A;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Python-Functions","author":"OCD","date":"2018-11-26T03:32:37.619Z","_content":"\n要执行函数定义的特定任务, 可调用 `函数`\n\n## 8.1 定义函数\n__E.g:__ greeter.py\n```python\ndef greet_user():                           # Line 1\n    \"\"\"Show simple greetings\"\"\"             # Line 2\n    print(\"Hello!\")                         # Line 3\n    \ngreet_user()                                # Line 4\n```\n\n###### Output:\n```\nHello!\n```\n\n#### 解释:\nLine 1: `def` 表明你要定义一个函数, 后面缩进构成函数体\nLine 2: 文档字符串, 由三个引号引起\nLine 3: 函数代码\nLine 4: 函数调用\n\n### 8.1.1 向函数传递信息\n__E.g:__ improved_greeter.py\n```python\ndef greet_user(username):                           # A - 1\n    \"\"\"Show simple greeting message\"\"\"\n    print(\"Hello, \" + username.title() + \"!\")\n    \ngreet_user('jesse')                                 # A - 2\n```\n\n###### Output:\n```\nHello, Jesse!\n```\n\n### 8.1.2 实参和形参\n在 `A - 1` 中, `username` 是一个形参\n在 `A - 2` 中, `'jesse'` 是一个实参\n\n## 8.2 传递实参\n### 8.2.1 位置实参\n你调用函数时, Python 必须根据调用中的每个实参都关联到函数定义中的一个形参, 为此, 最简单的关联方式是基于实参的顺序\n这种调用方式被称为 `位置实参`\n\n__E.g:__ pets.py\n```python\ndef describe_pet(animal_type, pet_name):\n    \"\"\"Show pets' information\"\"\"\n    print(\"\\nI have a \" + animal_type + \".\")\n    print(\"My \" + animal_type + \"'s name is \" + pet_name.title() + \".\")\n    \ndescribe_pet('hamster', 'harry')\ndescribe_pet('dog', 'willie')\n```\n###### Output\n```\n\nI have a hamster.\nMy hamster's name is Harry.\n\nI have a dog.\nMy dog's name is Willie.\n```\n\n### 8.2.2 关键字实参\n__E.g:__ new_pets.py\n```py\ndef describe_pet(animal_type, pet_name):\n    \"\"\"Show pets' information\"\"\"\n    print(\"\\nI have a \" + animal_type + \".\")\n    print(\"My \" + animal_type + \"'s name is \" + pet_name.title() + \".\")\n    \ndescribe_pet(pet_name = 'harry', animal_type = 'hamster')\ndescribe_pet('dog', 'willie')\n```\n\n###### Output is the same as `above`\n\n### 8.2.3 默认值\n__E.g:__ new2_pets.py\n```py\ndef describe_pet(animal_type = 'dog', pet_name):\n    \"\"\"Show pets' information\"\"\"\n    print(\"\\nI have a \" + animal_type + \".\")\n    print(\"My \" + animal_type + \"'s name is \" + pet_name.title() + \".\")\n    \ndescribe_pet(pet_name = 'harry', animal_type = 'hamster')\ndescribe_pet(pet_name = 'willie')\n\n```\n\n###### Output\n```\n\nI have a hamster.\nMy hamster's name is Harry.\n\nI have a dog.\nMy dog's name is Willie.\n```\n\n注: 使用默认值时, 在形参列表中必须先列出没有默认值的形参\n\n### 8.2.4 等效的函数调用\n注意到在之前的函数定义: `def describe_pet(pet_name, animal_type = 'dog')` 在任何情况下都必须给 `pet_name` 提供实参\n\n略 23333\n\n### 8.2.5 避免实参错误\n\n## 8.3 返回值\n### 8.3.1 简单返回值\n__E.g:__ formatted_name.py\n```py\ndef get_formatted_name(first_name, last_name):\n    \"\"\"Return Formatted Names\"\"\"\n    full_name = first_name + ' ' + last_name\n    \n    return full_name.title()\n    \nmusician = get_formatted_name('jimi', 'hendrix')\nprint(musician)\n```\n\n###### Output\n```\nJimi Hendrix\n```\n\n### 8.3.2 使实参可选\n__E.g:__\n```py\ndef get_formatted_name(first_name, last_name, middle_name = '')\n```\n\n### 8.3.3 返回字典\n__E.g:__ person.py\n```py\ndef build_person(first_name, last_name, age = ''):\n    \"\"\"return a Dictionary\"\"\"\n    person = {'first': first_name, 'last': last_name}\n    if age:\n        person['age'] = age\n    return person\n    \nmusician = build_person('jimi', 'henrix', age = 27)\nprint(musician)\n```\n\n###### Output:\n```\n{'first': 'jimi', 'last': 'henrix', 'age': 27}\n```\n\n### 8.3.4 结合使用函数和 `while` 循环\n__E.g:__\n```py\ndef get_formatted_name(first_name, last_name):\n    \"\"\"Return Formatted Names\"\"\"\n    full_name = first_name + ' ' + last_name\n    \n    return full_name.title()\n\n# Infinite Loop!\nwhile True:\n    print(\"\\nPlease tell me your name: \")\n    f_name = input(\"First name: \")\n    l_name = input(\"Last name: \")\n    \n    formatted_name = get_formatted_name(f_name, l_name)\n    print(\"\\nHello, \" + formatted_name.title())\n```\n\n## 8.4  传递列表\n__E.g:__ greet_users.py\n```py\ndef greet_users(names):\n    \"\"\"Send greetings to everyone in the list\"\"\"\n    for name in names:\n        print(\"Hello, \" + name.title() + \"!\")\n        \nusernames = ['hannah', 'ty', 'margot']\ngreet_users(usernames)\n```\n    \n###### Output:\n```\nHello, Hannah!\nHello, Ty!\nHello, Margot!\n```\n\n### 8.4.1 在函数中修改列表\n__E.g:__ printing_models.py\n```py\ndef print_models(unprinted_designs, completed_models):\n\t\"\"\" ... \"\"\"\n\twhile unprinted_designs:\n\t\tcurrent_design = unprinted_designs.pop()\n\t\t\n\t\tprint(\"Print model: \" + current_design)\n\t\tcompleted_models.append(current_design)\n\t\t\ndef show_completed_models(completed_models):\n\tprint(\"\\nThe following models have been printed: \")\n\tfor completed_model in completed_models:\n\t\tprint(completed_model)\n\t\t\nunprinted_designs = ['iphone case', 'rebot pendant', 'dodecahedron']\ncompleted_models = []\nprint_models(unprinted_designs, completed_models)\nshow_completed_models(completed_models)\n```\n\n###### Output:\n```\nPrint model: dodecahedron\nPrint model: rebot pendant\nPrint model: iphone case\n\nThe following models have been printed: \ndodecahedron\nrebot pendant\niphone case\n```\n\n### 8.4.2 禁止函数修改列表\nUse `function[:]` to pass a copy of the list to a sunction\n切片法表示创建列表副本\n\n## 8.5 传递任意数量的实参\n__E.g:__ pizza.py\n```py\ndef make_pizza(*toppings):\n    print(toppings)\n    \nmake_pizza('pepperoni')\nmake_pizza('mushrooms', 'green peppers', 'extra cheese')\n```\n\n###### Output:\n```\n('pepperoni',)\n('mushrooms', 'green peppers', 'extra cheese')\n```\n\n#### Explanation:\n`*toppings` 创建了一个名为 `toppings` 的空元组, 并把所有值封装到元组中\n\n### 8.5.1 结合使用位置实参和任意数量实参\n__E.g:__ new_pizza.py\n```py\ndef make_pizza(size, *toppings):\n    print(\"\\nMaking a \" + str(size) + \"-inch pizza with the following toppings:\")\n    for topping in toppings:\n        print(\"- \" + topping)\n    \nmake_pizza(16, 'pepperoni')\nmake_pizza(12, 'mushrooms', 'green peppers', 'extra cheese')\n```\n\n###### Output\n```\nMaking a 16-inch pizza with the following toppings:\n- pepperoni\n\nMaking a 12-inch pizza with the following toppings:\n- mushrooms\n- green peppers\n- extra cheese\n```\n\n","source":"_posts/2017-11-26-Function.md","raw":"---\ntitle: Python-Functions\nauthor: \"OCD\"\ndate: 2017-11-26 1\ncategory:\n    - Programming\ntags: \n    - Python\n    - Develop\n---\n\n要执行函数定义的特定任务, 可调用 `函数`\n\n## 8.1 定义函数\n__E.g:__ greeter.py\n```python\ndef greet_user():                           # Line 1\n    \"\"\"Show simple greetings\"\"\"             # Line 2\n    print(\"Hello!\")                         # Line 3\n    \ngreet_user()                                # Line 4\n```\n\n###### Output:\n```\nHello!\n```\n\n#### 解释:\nLine 1: `def` 表明你要定义一个函数, 后面缩进构成函数体\nLine 2: 文档字符串, 由三个引号引起\nLine 3: 函数代码\nLine 4: 函数调用\n\n### 8.1.1 向函数传递信息\n__E.g:__ improved_greeter.py\n```python\ndef greet_user(username):                           # A - 1\n    \"\"\"Show simple greeting message\"\"\"\n    print(\"Hello, \" + username.title() + \"!\")\n    \ngreet_user('jesse')                                 # A - 2\n```\n\n###### Output:\n```\nHello, Jesse!\n```\n\n### 8.1.2 实参和形参\n在 `A - 1` 中, `username` 是一个形参\n在 `A - 2` 中, `'jesse'` 是一个实参\n\n## 8.2 传递实参\n### 8.2.1 位置实参\n你调用函数时, Python 必须根据调用中的每个实参都关联到函数定义中的一个形参, 为此, 最简单的关联方式是基于实参的顺序\n这种调用方式被称为 `位置实参`\n\n__E.g:__ pets.py\n```python\ndef describe_pet(animal_type, pet_name):\n    \"\"\"Show pets' information\"\"\"\n    print(\"\\nI have a \" + animal_type + \".\")\n    print(\"My \" + animal_type + \"'s name is \" + pet_name.title() + \".\")\n    \ndescribe_pet('hamster', 'harry')\ndescribe_pet('dog', 'willie')\n```\n###### Output\n```\n\nI have a hamster.\nMy hamster's name is Harry.\n\nI have a dog.\nMy dog's name is Willie.\n```\n\n### 8.2.2 关键字实参\n__E.g:__ new_pets.py\n```py\ndef describe_pet(animal_type, pet_name):\n    \"\"\"Show pets' information\"\"\"\n    print(\"\\nI have a \" + animal_type + \".\")\n    print(\"My \" + animal_type + \"'s name is \" + pet_name.title() + \".\")\n    \ndescribe_pet(pet_name = 'harry', animal_type = 'hamster')\ndescribe_pet('dog', 'willie')\n```\n\n###### Output is the same as `above`\n\n### 8.2.3 默认值\n__E.g:__ new2_pets.py\n```py\ndef describe_pet(animal_type = 'dog', pet_name):\n    \"\"\"Show pets' information\"\"\"\n    print(\"\\nI have a \" + animal_type + \".\")\n    print(\"My \" + animal_type + \"'s name is \" + pet_name.title() + \".\")\n    \ndescribe_pet(pet_name = 'harry', animal_type = 'hamster')\ndescribe_pet(pet_name = 'willie')\n\n```\n\n###### Output\n```\n\nI have a hamster.\nMy hamster's name is Harry.\n\nI have a dog.\nMy dog's name is Willie.\n```\n\n注: 使用默认值时, 在形参列表中必须先列出没有默认值的形参\n\n### 8.2.4 等效的函数调用\n注意到在之前的函数定义: `def describe_pet(pet_name, animal_type = 'dog')` 在任何情况下都必须给 `pet_name` 提供实参\n\n略 23333\n\n### 8.2.5 避免实参错误\n\n## 8.3 返回值\n### 8.3.1 简单返回值\n__E.g:__ formatted_name.py\n```py\ndef get_formatted_name(first_name, last_name):\n    \"\"\"Return Formatted Names\"\"\"\n    full_name = first_name + ' ' + last_name\n    \n    return full_name.title()\n    \nmusician = get_formatted_name('jimi', 'hendrix')\nprint(musician)\n```\n\n###### Output\n```\nJimi Hendrix\n```\n\n### 8.3.2 使实参可选\n__E.g:__\n```py\ndef get_formatted_name(first_name, last_name, middle_name = '')\n```\n\n### 8.3.3 返回字典\n__E.g:__ person.py\n```py\ndef build_person(first_name, last_name, age = ''):\n    \"\"\"return a Dictionary\"\"\"\n    person = {'first': first_name, 'last': last_name}\n    if age:\n        person['age'] = age\n    return person\n    \nmusician = build_person('jimi', 'henrix', age = 27)\nprint(musician)\n```\n\n###### Output:\n```\n{'first': 'jimi', 'last': 'henrix', 'age': 27}\n```\n\n### 8.3.4 结合使用函数和 `while` 循环\n__E.g:__\n```py\ndef get_formatted_name(first_name, last_name):\n    \"\"\"Return Formatted Names\"\"\"\n    full_name = first_name + ' ' + last_name\n    \n    return full_name.title()\n\n# Infinite Loop!\nwhile True:\n    print(\"\\nPlease tell me your name: \")\n    f_name = input(\"First name: \")\n    l_name = input(\"Last name: \")\n    \n    formatted_name = get_formatted_name(f_name, l_name)\n    print(\"\\nHello, \" + formatted_name.title())\n```\n\n## 8.4  传递列表\n__E.g:__ greet_users.py\n```py\ndef greet_users(names):\n    \"\"\"Send greetings to everyone in the list\"\"\"\n    for name in names:\n        print(\"Hello, \" + name.title() + \"!\")\n        \nusernames = ['hannah', 'ty', 'margot']\ngreet_users(usernames)\n```\n    \n###### Output:\n```\nHello, Hannah!\nHello, Ty!\nHello, Margot!\n```\n\n### 8.4.1 在函数中修改列表\n__E.g:__ printing_models.py\n```py\ndef print_models(unprinted_designs, completed_models):\n\t\"\"\" ... \"\"\"\n\twhile unprinted_designs:\n\t\tcurrent_design = unprinted_designs.pop()\n\t\t\n\t\tprint(\"Print model: \" + current_design)\n\t\tcompleted_models.append(current_design)\n\t\t\ndef show_completed_models(completed_models):\n\tprint(\"\\nThe following models have been printed: \")\n\tfor completed_model in completed_models:\n\t\tprint(completed_model)\n\t\t\nunprinted_designs = ['iphone case', 'rebot pendant', 'dodecahedron']\ncompleted_models = []\nprint_models(unprinted_designs, completed_models)\nshow_completed_models(completed_models)\n```\n\n###### Output:\n```\nPrint model: dodecahedron\nPrint model: rebot pendant\nPrint model: iphone case\n\nThe following models have been printed: \ndodecahedron\nrebot pendant\niphone case\n```\n\n### 8.4.2 禁止函数修改列表\nUse `function[:]` to pass a copy of the list to a sunction\n切片法表示创建列表副本\n\n## 8.5 传递任意数量的实参\n__E.g:__ pizza.py\n```py\ndef make_pizza(*toppings):\n    print(toppings)\n    \nmake_pizza('pepperoni')\nmake_pizza('mushrooms', 'green peppers', 'extra cheese')\n```\n\n###### Output:\n```\n('pepperoni',)\n('mushrooms', 'green peppers', 'extra cheese')\n```\n\n#### Explanation:\n`*toppings` 创建了一个名为 `toppings` 的空元组, 并把所有值封装到元组中\n\n### 8.5.1 结合使用位置实参和任意数量实参\n__E.g:__ new_pizza.py\n```py\ndef make_pizza(size, *toppings):\n    print(\"\\nMaking a \" + str(size) + \"-inch pizza with the following toppings:\")\n    for topping in toppings:\n        print(\"- \" + topping)\n    \nmake_pizza(16, 'pepperoni')\nmake_pizza(12, 'mushrooms', 'green peppers', 'extra cheese')\n```\n\n###### Output\n```\nMaking a 16-inch pizza with the following toppings:\n- pepperoni\n\nMaking a 12-inch pizza with the following toppings:\n- mushrooms\n- green peppers\n- extra cheese\n```\n\n","slug":"2017-11-26-Function","published":1,"updated":"2018-11-26T03:32:37.619Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wh000irmtuxxqshm3c","content":"<p>要执行函数定义的特定任务, 可调用 <code>函数</code></p>\n<h2 id=\"8-1-定义函数\"><a href=\"#8-1-定义函数\" class=\"headerlink\" title=\"8.1 定义函数\"></a>8.1 定义函数</h2><p><strong>E.g:</strong> greeter.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">greet_user</span><span class=\"params\">()</span>:</span>                           <span class=\"comment\"># Line 1</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Show simple greetings\"\"\"</span>             <span class=\"comment\"># Line 2</span></span><br><span class=\"line\">    print(<span class=\"string\">\"Hello!\"</span>)                         <span class=\"comment\"># Line 3</span></span><br><span class=\"line\">    </span><br><span class=\"line\">greet_user()                                <span class=\"comment\"># Line 4</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello!</span><br></pre></td></tr></table></figure>\n<h4 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释:\"></a>解释:</h4><p>Line 1: <code>def</code> 表明你要定义一个函数, 后面缩进构成函数体<br>Line 2: 文档字符串, 由三个引号引起<br>Line 3: 函数代码<br>Line 4: 函数调用</p>\n<h3 id=\"8-1-1-向函数传递信息\"><a href=\"#8-1-1-向函数传递信息\" class=\"headerlink\" title=\"8.1.1 向函数传递信息\"></a>8.1.1 向函数传递信息</h3><p><strong>E.g:</strong> improved_greeter.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">greet_user</span><span class=\"params\">(username)</span>:</span>                           <span class=\"comment\"># A - 1</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Show simple greeting message\"\"\"</span></span><br><span class=\"line\">    print(<span class=\"string\">\"Hello, \"</span> + username.title() + <span class=\"string\">\"!\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">greet_user(<span class=\"string\">'jesse'</span>)                                 <span class=\"comment\"># A - 2</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello, Jesse!</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-1-2-实参和形参\"><a href=\"#8-1-2-实参和形参\" class=\"headerlink\" title=\"8.1.2 实参和形参\"></a>8.1.2 实参和形参</h3><p>在 <code>A - 1</code> 中, <code>username</code> 是一个形参<br>在 <code>A - 2</code> 中, <code>&#39;jesse&#39;</code> 是一个实参</p>\n<h2 id=\"8-2-传递实参\"><a href=\"#8-2-传递实参\" class=\"headerlink\" title=\"8.2 传递实参\"></a>8.2 传递实参</h2><h3 id=\"8-2-1-位置实参\"><a href=\"#8-2-1-位置实参\" class=\"headerlink\" title=\"8.2.1 位置实参\"></a>8.2.1 位置实参</h3><p>你调用函数时, Python 必须根据调用中的每个实参都关联到函数定义中的一个形参, 为此, 最简单的关联方式是基于实参的顺序<br>这种调用方式被称为 <code>位置实参</code></p>\n<p><strong>E.g:</strong> pets.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">describe_pet</span><span class=\"params\">(animal_type, pet_name)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Show pets' information\"\"\"</span></span><br><span class=\"line\">    print(<span class=\"string\">\"\\nI have a \"</span> + animal_type + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"My \"</span> + animal_type + <span class=\"string\">\"'s name is \"</span> + pet_name.title() + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">describe_pet(<span class=\"string\">'hamster'</span>, <span class=\"string\">'harry'</span>)</span><br><span class=\"line\">describe_pet(<span class=\"string\">'dog'</span>, <span class=\"string\">'willie'</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">I have a hamster.</span><br><span class=\"line\">My hamster&apos;s name is Harry.</span><br><span class=\"line\"></span><br><span class=\"line\">I have a dog.</span><br><span class=\"line\">My dog&apos;s name is Willie.</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-2-2-关键字实参\"><a href=\"#8-2-2-关键字实参\" class=\"headerlink\" title=\"8.2.2 关键字实参\"></a>8.2.2 关键字实参</h3><p><strong>E.g:</strong> new_pets.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">describe_pet</span><span class=\"params\">(animal_type, pet_name)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Show pets' information\"\"\"</span></span><br><span class=\"line\">    print(<span class=\"string\">\"\\nI have a \"</span> + animal_type + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"My \"</span> + animal_type + <span class=\"string\">\"'s name is \"</span> + pet_name.title() + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">describe_pet(pet_name = <span class=\"string\">'harry'</span>, animal_type = <span class=\"string\">'hamster'</span>)</span><br><span class=\"line\">describe_pet(<span class=\"string\">'dog'</span>, <span class=\"string\">'willie'</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-is-the-same-as-above\"><a href=\"#Output-is-the-same-as-above\" class=\"headerlink\" title=\"Output is the same as above\"></a>Output is the same as <code>above</code></h6><h3 id=\"8-2-3-默认值\"><a href=\"#8-2-3-默认值\" class=\"headerlink\" title=\"8.2.3 默认值\"></a>8.2.3 默认值</h3><p><strong>E.g:</strong> new2_pets.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">describe_pet</span><span class=\"params\">(animal_type = <span class=\"string\">'dog'</span>, pet_name)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Show pets' information\"\"\"</span></span><br><span class=\"line\">    print(<span class=\"string\">\"\\nI have a \"</span> + animal_type + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"My \"</span> + animal_type + <span class=\"string\">\"'s name is \"</span> + pet_name.title() + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">describe_pet(pet_name = <span class=\"string\">'harry'</span>, animal_type = <span class=\"string\">'hamster'</span>)</span><br><span class=\"line\">describe_pet(pet_name = <span class=\"string\">'willie'</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">I have a hamster.</span><br><span class=\"line\">My hamster&apos;s name is Harry.</span><br><span class=\"line\"></span><br><span class=\"line\">I have a dog.</span><br><span class=\"line\">My dog&apos;s name is Willie.</span><br></pre></td></tr></table></figure>\n<p>注: 使用默认值时, 在形参列表中必须先列出没有默认值的形参</p>\n<h3 id=\"8-2-4-等效的函数调用\"><a href=\"#8-2-4-等效的函数调用\" class=\"headerlink\" title=\"8.2.4 等效的函数调用\"></a>8.2.4 等效的函数调用</h3><p>注意到在之前的函数定义: <code>def describe_pet(pet_name, animal_type = &#39;dog&#39;)</code> 在任何情况下都必须给 <code>pet_name</code> 提供实参</p>\n<p>略 23333</p>\n<h3 id=\"8-2-5-避免实参错误\"><a href=\"#8-2-5-避免实参错误\" class=\"headerlink\" title=\"8.2.5 避免实参错误\"></a>8.2.5 避免实参错误</h3><h2 id=\"8-3-返回值\"><a href=\"#8-3-返回值\" class=\"headerlink\" title=\"8.3 返回值\"></a>8.3 返回值</h2><h3 id=\"8-3-1-简单返回值\"><a href=\"#8-3-1-简单返回值\" class=\"headerlink\" title=\"8.3.1 简单返回值\"></a>8.3.1 简单返回值</h3><p><strong>E.g:</strong> formatted_name.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_formatted_name</span><span class=\"params\">(first_name, last_name)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Return Formatted Names\"\"\"</span></span><br><span class=\"line\">    full_name = first_name + <span class=\"string\">' '</span> + last_name</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> full_name.title()</span><br><span class=\"line\">    </span><br><span class=\"line\">musician = get_formatted_name(<span class=\"string\">'jimi'</span>, <span class=\"string\">'hendrix'</span>)</span><br><span class=\"line\">print(musician)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Jimi Hendrix</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-3-2-使实参可选\"><a href=\"#8-3-2-使实参可选\" class=\"headerlink\" title=\"8.3.2 使实参可选\"></a>8.3.2 使实参可选</h3><p><strong>E.g:</strong><br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_formatted_name</span><span class=\"params\">(first_name, last_name, middle_name = <span class=\"string\">''</span>)</span></span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-3-3-返回字典\"><a href=\"#8-3-3-返回字典\" class=\"headerlink\" title=\"8.3.3 返回字典\"></a>8.3.3 返回字典</h3><p><strong>E.g:</strong> person.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">build_person</span><span class=\"params\">(first_name, last_name, age = <span class=\"string\">''</span>)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"return a Dictionary\"\"\"</span></span><br><span class=\"line\">    person = &#123;<span class=\"string\">'first'</span>: first_name, <span class=\"string\">'last'</span>: last_name&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> age:</span><br><span class=\"line\">        person[<span class=\"string\">'age'</span>] = age</span><br><span class=\"line\">    <span class=\"keyword\">return</span> person</span><br><span class=\"line\">    </span><br><span class=\"line\">musician = build_person(<span class=\"string\">'jimi'</span>, <span class=\"string\">'henrix'</span>, age = <span class=\"number\">27</span>)</span><br><span class=\"line\">print(musician)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&apos;first&apos;: &apos;jimi&apos;, &apos;last&apos;: &apos;henrix&apos;, &apos;age&apos;: 27&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-3-4-结合使用函数和-while-循环\"><a href=\"#8-3-4-结合使用函数和-while-循环\" class=\"headerlink\" title=\"8.3.4 结合使用函数和 while 循环\"></a>8.3.4 结合使用函数和 <code>while</code> 循环</h3><p><strong>E.g:</strong><br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_formatted_name</span><span class=\"params\">(first_name, last_name)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Return Formatted Names\"\"\"</span></span><br><span class=\"line\">    full_name = first_name + <span class=\"string\">' '</span> + last_name</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> full_name.title()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Infinite Loop!</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"\\nPlease tell me your name: \"</span>)</span><br><span class=\"line\">    f_name = input(<span class=\"string\">\"First name: \"</span>)</span><br><span class=\"line\">    l_name = input(<span class=\"string\">\"Last name: \"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    formatted_name = get_formatted_name(f_name, l_name)</span><br><span class=\"line\">    print(<span class=\"string\">\"\\nHello, \"</span> + formatted_name.title())</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"8-4-传递列表\"><a href=\"#8-4-传递列表\" class=\"headerlink\" title=\"8.4  传递列表\"></a>8.4  传递列表</h2><p><strong>E.g:</strong> greet_users.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">greet_users</span><span class=\"params\">(names)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Send greetings to everyone in the list\"\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> names:</span><br><span class=\"line\">        print(<span class=\"string\">\"Hello, \"</span> + name.title() + <span class=\"string\">\"!\"</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">usernames = [<span class=\"string\">'hannah'</span>, <span class=\"string\">'ty'</span>, <span class=\"string\">'margot'</span>]</span><br><span class=\"line\">greet_users(usernames)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-6\"><a href=\"#Output-6\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello, Hannah!</span><br><span class=\"line\">Hello, Ty!</span><br><span class=\"line\">Hello, Margot!</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-4-1-在函数中修改列表\"><a href=\"#8-4-1-在函数中修改列表\" class=\"headerlink\" title=\"8.4.1 在函数中修改列表\"></a>8.4.1 在函数中修改列表</h3><p><strong>E.g:</strong> printing_models.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print_models</span><span class=\"params\">(unprinted_designs, completed_models)</span>:</span></span><br><span class=\"line\">\t<span class=\"string\">\"\"\" ... \"\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> unprinted_designs:</span><br><span class=\"line\">\t\tcurrent_design = unprinted_designs.pop()</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tprint(<span class=\"string\">\"Print model: \"</span> + current_design)</span><br><span class=\"line\">\t\tcompleted_models.append(current_design)</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show_completed_models</span><span class=\"params\">(completed_models)</span>:</span></span><br><span class=\"line\">\tprint(<span class=\"string\">\"\\nThe following models have been printed: \"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> completed_model <span class=\"keyword\">in</span> completed_models:</span><br><span class=\"line\">\t\tprint(completed_model)</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">unprinted_designs = [<span class=\"string\">'iphone case'</span>, <span class=\"string\">'rebot pendant'</span>, <span class=\"string\">'dodecahedron'</span>]</span><br><span class=\"line\">completed_models = []</span><br><span class=\"line\">print_models(unprinted_designs, completed_models)</span><br><span class=\"line\">show_completed_models(completed_models)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-7\"><a href=\"#Output-7\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Print model: dodecahedron</span><br><span class=\"line\">Print model: rebot pendant</span><br><span class=\"line\">Print model: iphone case</span><br><span class=\"line\"></span><br><span class=\"line\">The following models have been printed: </span><br><span class=\"line\">dodecahedron</span><br><span class=\"line\">rebot pendant</span><br><span class=\"line\">iphone case</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-4-2-禁止函数修改列表\"><a href=\"#8-4-2-禁止函数修改列表\" class=\"headerlink\" title=\"8.4.2 禁止函数修改列表\"></a>8.4.2 禁止函数修改列表</h3><p>Use <code>function[:]</code> to pass a copy of the list to a sunction<br>切片法表示创建列表副本</p>\n<h2 id=\"8-5-传递任意数量的实参\"><a href=\"#8-5-传递任意数量的实参\" class=\"headerlink\" title=\"8.5 传递任意数量的实参\"></a>8.5 传递任意数量的实参</h2><p><strong>E.g:</strong> pizza.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_pizza</span><span class=\"params\">(*toppings)</span>:</span></span><br><span class=\"line\">    print(toppings)</span><br><span class=\"line\">    </span><br><span class=\"line\">make_pizza(<span class=\"string\">'pepperoni'</span>)</span><br><span class=\"line\">make_pizza(<span class=\"string\">'mushrooms'</span>, <span class=\"string\">'green peppers'</span>, <span class=\"string\">'extra cheese'</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-8\"><a href=\"#Output-8\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(&apos;pepperoni&apos;,)</span><br><span class=\"line\">(&apos;mushrooms&apos;, &apos;green peppers&apos;, &apos;extra cheese&apos;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"Explanation\"><a href=\"#Explanation\" class=\"headerlink\" title=\"Explanation:\"></a>Explanation:</h4><p><code>*toppings</code> 创建了一个名为 <code>toppings</code> 的空元组, 并把所有值封装到元组中</p>\n<h3 id=\"8-5-1-结合使用位置实参和任意数量实参\"><a href=\"#8-5-1-结合使用位置实参和任意数量实参\" class=\"headerlink\" title=\"8.5.1 结合使用位置实参和任意数量实参\"></a>8.5.1 结合使用位置实参和任意数量实参</h3><p><strong>E.g:</strong> new_pizza.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_pizza</span><span class=\"params\">(size, *toppings)</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">\"\\nMaking a \"</span> + str(size) + <span class=\"string\">\"-inch pizza with the following toppings:\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> topping <span class=\"keyword\">in</span> toppings:</span><br><span class=\"line\">        print(<span class=\"string\">\"- \"</span> + topping)</span><br><span class=\"line\">    </span><br><span class=\"line\">make_pizza(<span class=\"number\">16</span>, <span class=\"string\">'pepperoni'</span>)</span><br><span class=\"line\">make_pizza(<span class=\"number\">12</span>, <span class=\"string\">'mushrooms'</span>, <span class=\"string\">'green peppers'</span>, <span class=\"string\">'extra cheese'</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-9\"><a href=\"#Output-9\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Making a 16-inch pizza with the following toppings:</span><br><span class=\"line\">- pepperoni</span><br><span class=\"line\"></span><br><span class=\"line\">Making a 12-inch pizza with the following toppings:</span><br><span class=\"line\">- mushrooms</span><br><span class=\"line\">- green peppers</span><br><span class=\"line\">- extra cheese</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>要执行函数定义的特定任务, 可调用 <code>函数</code></p>\n<h2 id=\"8-1-定义函数\"><a href=\"#8-1-定义函数\" class=\"headerlink\" title=\"8.1 定义函数\"></a>8.1 定义函数</h2><p><strong>E.g:</strong> greeter.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">greet_user</span><span class=\"params\">()</span>:</span>                           <span class=\"comment\"># Line 1</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Show simple greetings\"\"\"</span>             <span class=\"comment\"># Line 2</span></span><br><span class=\"line\">    print(<span class=\"string\">\"Hello!\"</span>)                         <span class=\"comment\"># Line 3</span></span><br><span class=\"line\">    </span><br><span class=\"line\">greet_user()                                <span class=\"comment\"># Line 4</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output\"><a href=\"#Output\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello!</span><br></pre></td></tr></table></figure>\n<h4 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释:\"></a>解释:</h4><p>Line 1: <code>def</code> 表明你要定义一个函数, 后面缩进构成函数体<br>Line 2: 文档字符串, 由三个引号引起<br>Line 3: 函数代码<br>Line 4: 函数调用</p>\n<h3 id=\"8-1-1-向函数传递信息\"><a href=\"#8-1-1-向函数传递信息\" class=\"headerlink\" title=\"8.1.1 向函数传递信息\"></a>8.1.1 向函数传递信息</h3><p><strong>E.g:</strong> improved_greeter.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">greet_user</span><span class=\"params\">(username)</span>:</span>                           <span class=\"comment\"># A - 1</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Show simple greeting message\"\"\"</span></span><br><span class=\"line\">    print(<span class=\"string\">\"Hello, \"</span> + username.title() + <span class=\"string\">\"!\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">greet_user(<span class=\"string\">'jesse'</span>)                                 <span class=\"comment\"># A - 2</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-1\"><a href=\"#Output-1\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello, Jesse!</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-1-2-实参和形参\"><a href=\"#8-1-2-实参和形参\" class=\"headerlink\" title=\"8.1.2 实参和形参\"></a>8.1.2 实参和形参</h3><p>在 <code>A - 1</code> 中, <code>username</code> 是一个形参<br>在 <code>A - 2</code> 中, <code>&#39;jesse&#39;</code> 是一个实参</p>\n<h2 id=\"8-2-传递实参\"><a href=\"#8-2-传递实参\" class=\"headerlink\" title=\"8.2 传递实参\"></a>8.2 传递实参</h2><h3 id=\"8-2-1-位置实参\"><a href=\"#8-2-1-位置实参\" class=\"headerlink\" title=\"8.2.1 位置实参\"></a>8.2.1 位置实参</h3><p>你调用函数时, Python 必须根据调用中的每个实参都关联到函数定义中的一个形参, 为此, 最简单的关联方式是基于实参的顺序<br>这种调用方式被称为 <code>位置实参</code></p>\n<p><strong>E.g:</strong> pets.py<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">describe_pet</span><span class=\"params\">(animal_type, pet_name)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Show pets' information\"\"\"</span></span><br><span class=\"line\">    print(<span class=\"string\">\"\\nI have a \"</span> + animal_type + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"My \"</span> + animal_type + <span class=\"string\">\"'s name is \"</span> + pet_name.title() + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">describe_pet(<span class=\"string\">'hamster'</span>, <span class=\"string\">'harry'</span>)</span><br><span class=\"line\">describe_pet(<span class=\"string\">'dog'</span>, <span class=\"string\">'willie'</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-2\"><a href=\"#Output-2\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">I have a hamster.</span><br><span class=\"line\">My hamster&apos;s name is Harry.</span><br><span class=\"line\"></span><br><span class=\"line\">I have a dog.</span><br><span class=\"line\">My dog&apos;s name is Willie.</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-2-2-关键字实参\"><a href=\"#8-2-2-关键字实参\" class=\"headerlink\" title=\"8.2.2 关键字实参\"></a>8.2.2 关键字实参</h3><p><strong>E.g:</strong> new_pets.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">describe_pet</span><span class=\"params\">(animal_type, pet_name)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Show pets' information\"\"\"</span></span><br><span class=\"line\">    print(<span class=\"string\">\"\\nI have a \"</span> + animal_type + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"My \"</span> + animal_type + <span class=\"string\">\"'s name is \"</span> + pet_name.title() + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">describe_pet(pet_name = <span class=\"string\">'harry'</span>, animal_type = <span class=\"string\">'hamster'</span>)</span><br><span class=\"line\">describe_pet(<span class=\"string\">'dog'</span>, <span class=\"string\">'willie'</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-is-the-same-as-above\"><a href=\"#Output-is-the-same-as-above\" class=\"headerlink\" title=\"Output is the same as above\"></a>Output is the same as <code>above</code></h6><h3 id=\"8-2-3-默认值\"><a href=\"#8-2-3-默认值\" class=\"headerlink\" title=\"8.2.3 默认值\"></a>8.2.3 默认值</h3><p><strong>E.g:</strong> new2_pets.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">describe_pet</span><span class=\"params\">(animal_type = <span class=\"string\">'dog'</span>, pet_name)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Show pets' information\"\"\"</span></span><br><span class=\"line\">    print(<span class=\"string\">\"\\nI have a \"</span> + animal_type + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">\"My \"</span> + animal_type + <span class=\"string\">\"'s name is \"</span> + pet_name.title() + <span class=\"string\">\".\"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">describe_pet(pet_name = <span class=\"string\">'harry'</span>, animal_type = <span class=\"string\">'hamster'</span>)</span><br><span class=\"line\">describe_pet(pet_name = <span class=\"string\">'willie'</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-3\"><a href=\"#Output-3\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">I have a hamster.</span><br><span class=\"line\">My hamster&apos;s name is Harry.</span><br><span class=\"line\"></span><br><span class=\"line\">I have a dog.</span><br><span class=\"line\">My dog&apos;s name is Willie.</span><br></pre></td></tr></table></figure>\n<p>注: 使用默认值时, 在形参列表中必须先列出没有默认值的形参</p>\n<h3 id=\"8-2-4-等效的函数调用\"><a href=\"#8-2-4-等效的函数调用\" class=\"headerlink\" title=\"8.2.4 等效的函数调用\"></a>8.2.4 等效的函数调用</h3><p>注意到在之前的函数定义: <code>def describe_pet(pet_name, animal_type = &#39;dog&#39;)</code> 在任何情况下都必须给 <code>pet_name</code> 提供实参</p>\n<p>略 23333</p>\n<h3 id=\"8-2-5-避免实参错误\"><a href=\"#8-2-5-避免实参错误\" class=\"headerlink\" title=\"8.2.5 避免实参错误\"></a>8.2.5 避免实参错误</h3><h2 id=\"8-3-返回值\"><a href=\"#8-3-返回值\" class=\"headerlink\" title=\"8.3 返回值\"></a>8.3 返回值</h2><h3 id=\"8-3-1-简单返回值\"><a href=\"#8-3-1-简单返回值\" class=\"headerlink\" title=\"8.3.1 简单返回值\"></a>8.3.1 简单返回值</h3><p><strong>E.g:</strong> formatted_name.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_formatted_name</span><span class=\"params\">(first_name, last_name)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Return Formatted Names\"\"\"</span></span><br><span class=\"line\">    full_name = first_name + <span class=\"string\">' '</span> + last_name</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> full_name.title()</span><br><span class=\"line\">    </span><br><span class=\"line\">musician = get_formatted_name(<span class=\"string\">'jimi'</span>, <span class=\"string\">'hendrix'</span>)</span><br><span class=\"line\">print(musician)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-4\"><a href=\"#Output-4\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Jimi Hendrix</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-3-2-使实参可选\"><a href=\"#8-3-2-使实参可选\" class=\"headerlink\" title=\"8.3.2 使实参可选\"></a>8.3.2 使实参可选</h3><p><strong>E.g:</strong><br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_formatted_name</span><span class=\"params\">(first_name, last_name, middle_name = <span class=\"string\">''</span>)</span></span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"8-3-3-返回字典\"><a href=\"#8-3-3-返回字典\" class=\"headerlink\" title=\"8.3.3 返回字典\"></a>8.3.3 返回字典</h3><p><strong>E.g:</strong> person.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">build_person</span><span class=\"params\">(first_name, last_name, age = <span class=\"string\">''</span>)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"return a Dictionary\"\"\"</span></span><br><span class=\"line\">    person = &#123;<span class=\"string\">'first'</span>: first_name, <span class=\"string\">'last'</span>: last_name&#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> age:</span><br><span class=\"line\">        person[<span class=\"string\">'age'</span>] = age</span><br><span class=\"line\">    <span class=\"keyword\">return</span> person</span><br><span class=\"line\">    </span><br><span class=\"line\">musician = build_person(<span class=\"string\">'jimi'</span>, <span class=\"string\">'henrix'</span>, age = <span class=\"number\">27</span>)</span><br><span class=\"line\">print(musician)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-5\"><a href=\"#Output-5\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&apos;first&apos;: &apos;jimi&apos;, &apos;last&apos;: &apos;henrix&apos;, &apos;age&apos;: 27&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-3-4-结合使用函数和-while-循环\"><a href=\"#8-3-4-结合使用函数和-while-循环\" class=\"headerlink\" title=\"8.3.4 结合使用函数和 while 循环\"></a>8.3.4 结合使用函数和 <code>while</code> 循环</h3><p><strong>E.g:</strong><br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_formatted_name</span><span class=\"params\">(first_name, last_name)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Return Formatted Names\"\"\"</span></span><br><span class=\"line\">    full_name = first_name + <span class=\"string\">' '</span> + last_name</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> full_name.title()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Infinite Loop!</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"\\nPlease tell me your name: \"</span>)</span><br><span class=\"line\">    f_name = input(<span class=\"string\">\"First name: \"</span>)</span><br><span class=\"line\">    l_name = input(<span class=\"string\">\"Last name: \"</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    formatted_name = get_formatted_name(f_name, l_name)</span><br><span class=\"line\">    print(<span class=\"string\">\"\\nHello, \"</span> + formatted_name.title())</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"8-4-传递列表\"><a href=\"#8-4-传递列表\" class=\"headerlink\" title=\"8.4  传递列表\"></a>8.4  传递列表</h2><p><strong>E.g:</strong> greet_users.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">greet_users</span><span class=\"params\">(names)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"Send greetings to everyone in the list\"\"\"</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> name <span class=\"keyword\">in</span> names:</span><br><span class=\"line\">        print(<span class=\"string\">\"Hello, \"</span> + name.title() + <span class=\"string\">\"!\"</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\">usernames = [<span class=\"string\">'hannah'</span>, <span class=\"string\">'ty'</span>, <span class=\"string\">'margot'</span>]</span><br><span class=\"line\">greet_users(usernames)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-6\"><a href=\"#Output-6\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello, Hannah!</span><br><span class=\"line\">Hello, Ty!</span><br><span class=\"line\">Hello, Margot!</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-4-1-在函数中修改列表\"><a href=\"#8-4-1-在函数中修改列表\" class=\"headerlink\" title=\"8.4.1 在函数中修改列表\"></a>8.4.1 在函数中修改列表</h3><p><strong>E.g:</strong> printing_models.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print_models</span><span class=\"params\">(unprinted_designs, completed_models)</span>:</span></span><br><span class=\"line\">\t<span class=\"string\">\"\"\" ... \"\"\"</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> unprinted_designs:</span><br><span class=\"line\">\t\tcurrent_design = unprinted_designs.pop()</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tprint(<span class=\"string\">\"Print model: \"</span> + current_design)</span><br><span class=\"line\">\t\tcompleted_models.append(current_design)</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">show_completed_models</span><span class=\"params\">(completed_models)</span>:</span></span><br><span class=\"line\">\tprint(<span class=\"string\">\"\\nThe following models have been printed: \"</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> completed_model <span class=\"keyword\">in</span> completed_models:</span><br><span class=\"line\">\t\tprint(completed_model)</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">unprinted_designs = [<span class=\"string\">'iphone case'</span>, <span class=\"string\">'rebot pendant'</span>, <span class=\"string\">'dodecahedron'</span>]</span><br><span class=\"line\">completed_models = []</span><br><span class=\"line\">print_models(unprinted_designs, completed_models)</span><br><span class=\"line\">show_completed_models(completed_models)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-7\"><a href=\"#Output-7\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Print model: dodecahedron</span><br><span class=\"line\">Print model: rebot pendant</span><br><span class=\"line\">Print model: iphone case</span><br><span class=\"line\"></span><br><span class=\"line\">The following models have been printed: </span><br><span class=\"line\">dodecahedron</span><br><span class=\"line\">rebot pendant</span><br><span class=\"line\">iphone case</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-4-2-禁止函数修改列表\"><a href=\"#8-4-2-禁止函数修改列表\" class=\"headerlink\" title=\"8.4.2 禁止函数修改列表\"></a>8.4.2 禁止函数修改列表</h3><p>Use <code>function[:]</code> to pass a copy of the list to a sunction<br>切片法表示创建列表副本</p>\n<h2 id=\"8-5-传递任意数量的实参\"><a href=\"#8-5-传递任意数量的实参\" class=\"headerlink\" title=\"8.5 传递任意数量的实参\"></a>8.5 传递任意数量的实参</h2><p><strong>E.g:</strong> pizza.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_pizza</span><span class=\"params\">(*toppings)</span>:</span></span><br><span class=\"line\">    print(toppings)</span><br><span class=\"line\">    </span><br><span class=\"line\">make_pizza(<span class=\"string\">'pepperoni'</span>)</span><br><span class=\"line\">make_pizza(<span class=\"string\">'mushrooms'</span>, <span class=\"string\">'green peppers'</span>, <span class=\"string\">'extra cheese'</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-8\"><a href=\"#Output-8\" class=\"headerlink\" title=\"Output:\"></a>Output:</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(&apos;pepperoni&apos;,)</span><br><span class=\"line\">(&apos;mushrooms&apos;, &apos;green peppers&apos;, &apos;extra cheese&apos;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"Explanation\"><a href=\"#Explanation\" class=\"headerlink\" title=\"Explanation:\"></a>Explanation:</h4><p><code>*toppings</code> 创建了一个名为 <code>toppings</code> 的空元组, 并把所有值封装到元组中</p>\n<h3 id=\"8-5-1-结合使用位置实参和任意数量实参\"><a href=\"#8-5-1-结合使用位置实参和任意数量实参\" class=\"headerlink\" title=\"8.5.1 结合使用位置实参和任意数量实参\"></a>8.5.1 结合使用位置实参和任意数量实参</h3><p><strong>E.g:</strong> new_pizza.py<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">make_pizza</span><span class=\"params\">(size, *toppings)</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">\"\\nMaking a \"</span> + str(size) + <span class=\"string\">\"-inch pizza with the following toppings:\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> topping <span class=\"keyword\">in</span> toppings:</span><br><span class=\"line\">        print(<span class=\"string\">\"- \"</span> + topping)</span><br><span class=\"line\">    </span><br><span class=\"line\">make_pizza(<span class=\"number\">16</span>, <span class=\"string\">'pepperoni'</span>)</span><br><span class=\"line\">make_pizza(<span class=\"number\">12</span>, <span class=\"string\">'mushrooms'</span>, <span class=\"string\">'green peppers'</span>, <span class=\"string\">'extra cheese'</span>)</span><br></pre></td></tr></table></figure></p>\n<h6 id=\"Output-9\"><a href=\"#Output-9\" class=\"headerlink\" title=\"Output\"></a>Output</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Making a 16-inch pizza with the following toppings:</span><br><span class=\"line\">- pepperoni</span><br><span class=\"line\"></span><br><span class=\"line\">Making a 12-inch pizza with the following toppings:</span><br><span class=\"line\">- mushrooms</span><br><span class=\"line\">- green peppers</span><br><span class=\"line\">- extra cheese</span><br></pre></td></tr></table></figure>\n"},{"title":"Use Apple Time-Machine on Raspberry Pi with ArchLinux ARM","author":"OCD","date":"2018-11-26T03:32:37.620Z","_content":"\n作为下次设置的备份.\n\n<!-- more -->\n## 1. 要求\n1. A Raspberry \n2. A hard drive \n3. A stable internet connection\n\n## 2. Installation\n 使用 `yaourt` 进行环境设置\n \n### 2.1 Pre-install\n```bash\n # Install required Packages\n yaourt -Syu\n yaourt -S avahi nss-mdns netatalk hfsplus\n```\n__Note:__ \nIn the process you may encounter architecture errors like \n```text\n==> ERROR: xxx is not available for the 'aarch64' architecture.\n```\nthen just edit the PKGBUILD and set the `arch` = `'any'` to silent the warning\n\n### 2.2 Set up device and folder\n#### 2.2.1. We should set up the device (hard drive)\n\n```bash\n# Check if the device is connected \nsudo blkid\n```\n\nHere is the output of my Pi:\n\n```\n➜ sudo blkid\n/dev/mmcblk0p1: SEC_TYPE=\"msdos\" UUID=\"120A-474C\" TYPE=\"vfat\" PARTUUID=\"31203949-01\"\n/dev/mmcblk0p2: UUID=\"66ffe290-de04-4547-b091-82fc1854bd20\" TYPE=\"ext4\" PARTUUID=\"31203949-02\"\n/dev/sda1: LABEL=\"EFI\" UUID=\"67E3-17ED\" TYPE=\"vfat\" PARTLABEL=\"EFI System Partition\" PARTUUID=\"1e03d7c8-468b-40f0-a9f8-dcade8ea43e7\"\n/dev/sda2: LABEL=\"SeagateExpansionMedia\" UUID=\"18E4C435E4C41742\" TYPE=\"ntfs\" PARTUUID=\"f47076b7-b738-4136-aba3-7ce886844070\"\n/dev/sda3: UUID=\"d4394cd9-7e11-38db-95a9-7d781e0cbde0\" LABEL=\"MacOnDisk\" TYPE=\"hfsplus\" PARTUUID=\"4c697e1f-5b89-4c97-8bf3-11c819cb117e\"\n/dev/sda4: UUID=\"74f09d9f-73b2-30d5-9f89-b9ac88490538\" LABEL=\"Recovery HD\" TYPE=\"hfsplus\" PARTUUID=\"9a17bdc7-3761-458f-b000-4a00debeb31b\"\n/dev/sda5: UUID=\"3a161221-c554-3e56-ac93-b30c37087812\" LABEL=\"Time-Machine\" TYPE=\"hfsplus\" PARTUUID=\"2c0ebe1f-1af8-4928-98a3-ce615891e9f0\"\n/dev/mmcblk0: PTUUID=\"31203949\" PTTYPE=\"dos\"\n```\n\nAs you can see here, and I want to backup my Mac to `/dev/sda5` which labelled as `Time-Machine`\n\n#### 2.2.2. Add a user to the machine\nSo that we can separate the account with others\n\n```bash\nsudo useradd timemachine\nsudo passed timemachine\n# Then add the password you like for the user timechine\n```\n#### 2.2.3. Set up a folder\n\n```bash\n# Folder in /media/Time-Machine\nsudo mkdir -p /media/Time-Machine\n\n# Give it permission\nsudo chown -R timemachine:users /media/Time-Machine\n```\n#### 2.2.4 Set fstab\nSo that we can mount it automatically to the folder\n\n```bash\nsudo nano /etc/fstab\n```\n\nand add: \n```fstab\n/dev/sda5 /media/Time-Machine hfsplus force,rw,user,auto 0 0\n```\n\nand use:\n```bash\nsudo mount\n```\nto mount the desired folder.\n\n### 2.3 Configuration\n#### 2.3.1 configure `afp.conf`\n\n```bash\nsudo nano /etc/afp.conf\n``` \nand input the following lines:\n\n```conf\n[global]\nUAM list = uams_guest.so, uams_dhx.so, uams_dhx2.so,\n\n[Time Machine]\npath = /media/Time-Machine\ntime machine = yes\n```\n#### 2.3.2 configure Service\n\n```bash\nsudo nano /etc/avahi/services/afpd.service\n```\n and paste these lines:\n \n ```xml\n<?xml version=\"1.0\" standalone='no'?><!--*-nxml-*-->\n<!DOCTYPE service-group SYSTEM \"avahi-service.dtd\">\n<service-group>\n    <name replace-wildcards=\"yes\">%h</name>\n    <service>\n        <type>_afpovertcp._tcp</type>\n        <port>548</port>\n    </service>\n    <service>\n        <type>_device-info._tcp</type>\n        <port>0</port>\n        <txt-record>model=TimeCapsule</txt-record>\n    </service>\n</service-group>\n ```\n\n## 3. Start\nNow we can start the service\n```bash\nsudo systemctl enable netatalk.service\nsudo systemctl start netatalk.service\nsudo systemctl start avahi-daemon.service\n```\n\n## Done!\nJust Open your Time Machine Preferences and back your things up\n\n__Note:__\nthe `username` is `timemachine` \nthe `password` is the password you entered before\n\n## Credits\n1. [https://github.com/mr-bt/raspberrypi-timemachine]()\n2. [https://www.pihomeserver.fr/en/2013/01/16/raspberry-pi-home-server-arch-linux-sauvegarder-son-mac-avec-time-machine/]()\n\n","source":"_posts/2018-03-29-Use-TM-On-RPi-With-Arch-Linux.md","raw":"---\ntitle: Use Apple Time-Machine on Raspberry Pi with ArchLinux ARM\nauthor: \"OCD\"\ndate: 2018-3-29 1\ncategory:\n    - Computer\n    - Raspberry Pi\ntags:\n    - MacOS\n    - Time Machine\n---\n\n作为下次设置的备份.\n\n<!-- more -->\n## 1. 要求\n1. A Raspberry \n2. A hard drive \n3. A stable internet connection\n\n## 2. Installation\n 使用 `yaourt` 进行环境设置\n \n### 2.1 Pre-install\n```bash\n # Install required Packages\n yaourt -Syu\n yaourt -S avahi nss-mdns netatalk hfsplus\n```\n__Note:__ \nIn the process you may encounter architecture errors like \n```text\n==> ERROR: xxx is not available for the 'aarch64' architecture.\n```\nthen just edit the PKGBUILD and set the `arch` = `'any'` to silent the warning\n\n### 2.2 Set up device and folder\n#### 2.2.1. We should set up the device (hard drive)\n\n```bash\n# Check if the device is connected \nsudo blkid\n```\n\nHere is the output of my Pi:\n\n```\n➜ sudo blkid\n/dev/mmcblk0p1: SEC_TYPE=\"msdos\" UUID=\"120A-474C\" TYPE=\"vfat\" PARTUUID=\"31203949-01\"\n/dev/mmcblk0p2: UUID=\"66ffe290-de04-4547-b091-82fc1854bd20\" TYPE=\"ext4\" PARTUUID=\"31203949-02\"\n/dev/sda1: LABEL=\"EFI\" UUID=\"67E3-17ED\" TYPE=\"vfat\" PARTLABEL=\"EFI System Partition\" PARTUUID=\"1e03d7c8-468b-40f0-a9f8-dcade8ea43e7\"\n/dev/sda2: LABEL=\"SeagateExpansionMedia\" UUID=\"18E4C435E4C41742\" TYPE=\"ntfs\" PARTUUID=\"f47076b7-b738-4136-aba3-7ce886844070\"\n/dev/sda3: UUID=\"d4394cd9-7e11-38db-95a9-7d781e0cbde0\" LABEL=\"MacOnDisk\" TYPE=\"hfsplus\" PARTUUID=\"4c697e1f-5b89-4c97-8bf3-11c819cb117e\"\n/dev/sda4: UUID=\"74f09d9f-73b2-30d5-9f89-b9ac88490538\" LABEL=\"Recovery HD\" TYPE=\"hfsplus\" PARTUUID=\"9a17bdc7-3761-458f-b000-4a00debeb31b\"\n/dev/sda5: UUID=\"3a161221-c554-3e56-ac93-b30c37087812\" LABEL=\"Time-Machine\" TYPE=\"hfsplus\" PARTUUID=\"2c0ebe1f-1af8-4928-98a3-ce615891e9f0\"\n/dev/mmcblk0: PTUUID=\"31203949\" PTTYPE=\"dos\"\n```\n\nAs you can see here, and I want to backup my Mac to `/dev/sda5` which labelled as `Time-Machine`\n\n#### 2.2.2. Add a user to the machine\nSo that we can separate the account with others\n\n```bash\nsudo useradd timemachine\nsudo passed timemachine\n# Then add the password you like for the user timechine\n```\n#### 2.2.3. Set up a folder\n\n```bash\n# Folder in /media/Time-Machine\nsudo mkdir -p /media/Time-Machine\n\n# Give it permission\nsudo chown -R timemachine:users /media/Time-Machine\n```\n#### 2.2.4 Set fstab\nSo that we can mount it automatically to the folder\n\n```bash\nsudo nano /etc/fstab\n```\n\nand add: \n```fstab\n/dev/sda5 /media/Time-Machine hfsplus force,rw,user,auto 0 0\n```\n\nand use:\n```bash\nsudo mount\n```\nto mount the desired folder.\n\n### 2.3 Configuration\n#### 2.3.1 configure `afp.conf`\n\n```bash\nsudo nano /etc/afp.conf\n``` \nand input the following lines:\n\n```conf\n[global]\nUAM list = uams_guest.so, uams_dhx.so, uams_dhx2.so,\n\n[Time Machine]\npath = /media/Time-Machine\ntime machine = yes\n```\n#### 2.3.2 configure Service\n\n```bash\nsudo nano /etc/avahi/services/afpd.service\n```\n and paste these lines:\n \n ```xml\n<?xml version=\"1.0\" standalone='no'?><!--*-nxml-*-->\n<!DOCTYPE service-group SYSTEM \"avahi-service.dtd\">\n<service-group>\n    <name replace-wildcards=\"yes\">%h</name>\n    <service>\n        <type>_afpovertcp._tcp</type>\n        <port>548</port>\n    </service>\n    <service>\n        <type>_device-info._tcp</type>\n        <port>0</port>\n        <txt-record>model=TimeCapsule</txt-record>\n    </service>\n</service-group>\n ```\n\n## 3. Start\nNow we can start the service\n```bash\nsudo systemctl enable netatalk.service\nsudo systemctl start netatalk.service\nsudo systemctl start avahi-daemon.service\n```\n\n## Done!\nJust Open your Time Machine Preferences and back your things up\n\n__Note:__\nthe `username` is `timemachine` \nthe `password` is the password you entered before\n\n## Credits\n1. [https://github.com/mr-bt/raspberrypi-timemachine]()\n2. [https://www.pihomeserver.fr/en/2013/01/16/raspberry-pi-home-server-arch-linux-sauvegarder-son-mac-avec-time-machine/]()\n\n","slug":"2018-03-29-Use-TM-On-RPi-With-Arch-Linux","published":1,"updated":"2018-11-26T03:32:37.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wj000lrmtujflh5700","content":"<p>作为下次设置的备份.</p>\n<a id=\"more\"></a>\n<h2 id=\"1-要求\"><a href=\"#1-要求\" class=\"headerlink\" title=\"1. 要求\"></a>1. 要求</h2><ol>\n<li>A Raspberry </li>\n<li>A hard drive </li>\n<li>A stable internet connection</li>\n</ol>\n<h2 id=\"2-Installation\"><a href=\"#2-Installation\" class=\"headerlink\" title=\"2. Installation\"></a>2. Installation</h2><p> 使用 <code>yaourt</code> 进行环境设置</p>\n<h3 id=\"2-1-Pre-install\"><a href=\"#2-1-Pre-install\" class=\"headerlink\" title=\"2.1 Pre-install\"></a>2.1 Pre-install</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Install required Packages</span></span><br><span class=\"line\">yaourt -Syu</span><br><span class=\"line\">yaourt -S avahi nss-mdns netatalk hfsplus</span><br></pre></td></tr></table></figure>\n<p><strong>Note:</strong><br>In the process you may encounter architecture errors like<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">==&gt; ERROR: xxx is not available for the &apos;aarch64&apos; architecture.</span><br></pre></td></tr></table></figure></p>\n<p>then just edit the PKGBUILD and set the <code>arch</code> = <code>&#39;any&#39;</code> to silent the warning</p>\n<h3 id=\"2-2-Set-up-device-and-folder\"><a href=\"#2-2-Set-up-device-and-folder\" class=\"headerlink\" title=\"2.2 Set up device and folder\"></a>2.2 Set up device and folder</h3><h4 id=\"2-2-1-We-should-set-up-the-device-hard-drive\"><a href=\"#2-2-1-We-should-set-up-the-device-hard-drive\" class=\"headerlink\" title=\"2.2.1. We should set up the device (hard drive)\"></a>2.2.1. We should set up the device (hard drive)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Check if the device is connected </span></span><br><span class=\"line\">sudo blkid</span><br></pre></td></tr></table></figure>\n<p>Here is the output of my Pi:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜ sudo blkid</span><br><span class=\"line\">/dev/mmcblk0p1: SEC_TYPE=&quot;msdos&quot; UUID=&quot;120A-474C&quot; TYPE=&quot;vfat&quot; PARTUUID=&quot;31203949-01&quot;</span><br><span class=\"line\">/dev/mmcblk0p2: UUID=&quot;66ffe290-de04-4547-b091-82fc1854bd20&quot; TYPE=&quot;ext4&quot; PARTUUID=&quot;31203949-02&quot;</span><br><span class=\"line\">/dev/sda1: LABEL=&quot;EFI&quot; UUID=&quot;67E3-17ED&quot; TYPE=&quot;vfat&quot; PARTLABEL=&quot;EFI System Partition&quot; PARTUUID=&quot;1e03d7c8-468b-40f0-a9f8-dcade8ea43e7&quot;</span><br><span class=\"line\">/dev/sda2: LABEL=&quot;SeagateExpansionMedia&quot; UUID=&quot;18E4C435E4C41742&quot; TYPE=&quot;ntfs&quot; PARTUUID=&quot;f47076b7-b738-4136-aba3-7ce886844070&quot;</span><br><span class=\"line\">/dev/sda3: UUID=&quot;d4394cd9-7e11-38db-95a9-7d781e0cbde0&quot; LABEL=&quot;MacOnDisk&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;4c697e1f-5b89-4c97-8bf3-11c819cb117e&quot;</span><br><span class=\"line\">/dev/sda4: UUID=&quot;74f09d9f-73b2-30d5-9f89-b9ac88490538&quot; LABEL=&quot;Recovery HD&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;9a17bdc7-3761-458f-b000-4a00debeb31b&quot;</span><br><span class=\"line\">/dev/sda5: UUID=&quot;3a161221-c554-3e56-ac93-b30c37087812&quot; LABEL=&quot;Time-Machine&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;2c0ebe1f-1af8-4928-98a3-ce615891e9f0&quot;</span><br><span class=\"line\">/dev/mmcblk0: PTUUID=&quot;31203949&quot; PTTYPE=&quot;dos&quot;</span><br></pre></td></tr></table></figure>\n<p>As you can see here, and I want to backup my Mac to <code>/dev/sda5</code> which labelled as <code>Time-Machine</code></p>\n<h4 id=\"2-2-2-Add-a-user-to-the-machine\"><a href=\"#2-2-2-Add-a-user-to-the-machine\" class=\"headerlink\" title=\"2.2.2. Add a user to the machine\"></a>2.2.2. Add a user to the machine</h4><p>So that we can separate the account with others</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo useradd timemachine</span><br><span class=\"line\">sudo passed timemachine</span><br><span class=\"line\"><span class=\"comment\"># Then add the password you like for the user timechine</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-3-Set-up-a-folder\"><a href=\"#2-2-3-Set-up-a-folder\" class=\"headerlink\" title=\"2.2.3. Set up a folder\"></a>2.2.3. Set up a folder</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Folder in /media/Time-Machine</span></span><br><span class=\"line\">sudo mkdir -p /media/Time-Machine</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Give it permission</span></span><br><span class=\"line\">sudo chown -R timemachine:users /media/Time-Machine</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-4-Set-fstab\"><a href=\"#2-2-4-Set-fstab\" class=\"headerlink\" title=\"2.2.4 Set fstab\"></a>2.2.4 Set fstab</h4><p>So that we can mount it automatically to the folder</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/fstab</span><br></pre></td></tr></table></figure>\n<p>and add:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dev/sda5 /media/Time-Machine hfsplus force,rw,user,auto 0 0</span><br></pre></td></tr></table></figure></p>\n<p>and use:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount</span><br></pre></td></tr></table></figure></p>\n<p>to mount the desired folder.</p>\n<h3 id=\"2-3-Configuration\"><a href=\"#2-3-Configuration\" class=\"headerlink\" title=\"2.3 Configuration\"></a>2.3 Configuration</h3><h4 id=\"2-3-1-configure-afp-conf\"><a href=\"#2-3-1-configure-afp-conf\" class=\"headerlink\" title=\"2.3.1 configure afp.conf\"></a>2.3.1 configure <code>afp.conf</code></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/afp.conf</span><br><span class=\"line\">``` </span><br><span class=\"line\">and input the following lines:</span><br><span class=\"line\"></span><br><span class=\"line\">```conf</span><br><span class=\"line\">[global]</span><br><span class=\"line\">UAM list = uams_guest.so, uams_dhx.so, uams_dhx2.so,</span><br><span class=\"line\"></span><br><span class=\"line\">[Time Machine]</span><br><span class=\"line\">path = /media/Time-Machine</span><br><span class=\"line\">time machine = yes</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-3-2-configure-Service\"><a href=\"#2-3-2-configure-Service\" class=\"headerlink\" title=\"2.3.2 configure Service\"></a>2.3.2 configure Service</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/avahi/services/afpd.service</span><br></pre></td></tr></table></figure>\n<p> and paste these lines:</p>\n <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" standalone='no'?&gt;</span><span class=\"comment\">&lt;!--*-nxml-*--&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE service-group SYSTEM \"avahi-service.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">service-group</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span> <span class=\"attr\">replace-wildcards</span>=<span class=\"string\">\"yes\"</span>&gt;</span>%h<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">service</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>_afpovertcp._tcp<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>548<span class=\"tag\">&lt;/<span class=\"name\">port</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">service</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>_device-info._tcp<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">port</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">txt-record</span>&gt;</span>model=TimeCapsule<span class=\"tag\">&lt;/<span class=\"name\">txt-record</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">service-group</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-Start\"><a href=\"#3-Start\" class=\"headerlink\" title=\"3. Start\"></a>3. Start</h2><p>Now we can start the service<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> netatalk.service</span><br><span class=\"line\">sudo systemctl start netatalk.service</span><br><span class=\"line\">sudo systemctl start avahi-daemon.service</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Done\"><a href=\"#Done\" class=\"headerlink\" title=\"Done!\"></a>Done!</h2><p>Just Open your Time Machine Preferences and back your things up</p>\n<p><strong>Note:</strong><br>the <code>username</code> is <code>timemachine</code><br>the <code>password</code> is the password you entered before</p>\n<h2 id=\"Credits\"><a href=\"#Credits\" class=\"headerlink\" title=\"Credits\"></a>Credits</h2><ol>\n<li><a href=\"\">https://github.com/mr-bt/raspberrypi-timemachine</a></li>\n<li><a href=\"\">https://www.pihomeserver.fr/en/2013/01/16/raspberry-pi-home-server-arch-linux-sauvegarder-son-mac-avec-time-machine/</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>作为下次设置的备份.</p>","more":"<h2 id=\"1-要求\"><a href=\"#1-要求\" class=\"headerlink\" title=\"1. 要求\"></a>1. 要求</h2><ol>\n<li>A Raspberry </li>\n<li>A hard drive </li>\n<li>A stable internet connection</li>\n</ol>\n<h2 id=\"2-Installation\"><a href=\"#2-Installation\" class=\"headerlink\" title=\"2. Installation\"></a>2. Installation</h2><p> 使用 <code>yaourt</code> 进行环境设置</p>\n<h3 id=\"2-1-Pre-install\"><a href=\"#2-1-Pre-install\" class=\"headerlink\" title=\"2.1 Pre-install\"></a>2.1 Pre-install</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Install required Packages</span></span><br><span class=\"line\">yaourt -Syu</span><br><span class=\"line\">yaourt -S avahi nss-mdns netatalk hfsplus</span><br></pre></td></tr></table></figure>\n<p><strong>Note:</strong><br>In the process you may encounter architecture errors like<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">==&gt; ERROR: xxx is not available for the &apos;aarch64&apos; architecture.</span><br></pre></td></tr></table></figure></p>\n<p>then just edit the PKGBUILD and set the <code>arch</code> = <code>&#39;any&#39;</code> to silent the warning</p>\n<h3 id=\"2-2-Set-up-device-and-folder\"><a href=\"#2-2-Set-up-device-and-folder\" class=\"headerlink\" title=\"2.2 Set up device and folder\"></a>2.2 Set up device and folder</h3><h4 id=\"2-2-1-We-should-set-up-the-device-hard-drive\"><a href=\"#2-2-1-We-should-set-up-the-device-hard-drive\" class=\"headerlink\" title=\"2.2.1. We should set up the device (hard drive)\"></a>2.2.1. We should set up the device (hard drive)</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Check if the device is connected </span></span><br><span class=\"line\">sudo blkid</span><br></pre></td></tr></table></figure>\n<p>Here is the output of my Pi:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜ sudo blkid</span><br><span class=\"line\">/dev/mmcblk0p1: SEC_TYPE=&quot;msdos&quot; UUID=&quot;120A-474C&quot; TYPE=&quot;vfat&quot; PARTUUID=&quot;31203949-01&quot;</span><br><span class=\"line\">/dev/mmcblk0p2: UUID=&quot;66ffe290-de04-4547-b091-82fc1854bd20&quot; TYPE=&quot;ext4&quot; PARTUUID=&quot;31203949-02&quot;</span><br><span class=\"line\">/dev/sda1: LABEL=&quot;EFI&quot; UUID=&quot;67E3-17ED&quot; TYPE=&quot;vfat&quot; PARTLABEL=&quot;EFI System Partition&quot; PARTUUID=&quot;1e03d7c8-468b-40f0-a9f8-dcade8ea43e7&quot;</span><br><span class=\"line\">/dev/sda2: LABEL=&quot;SeagateExpansionMedia&quot; UUID=&quot;18E4C435E4C41742&quot; TYPE=&quot;ntfs&quot; PARTUUID=&quot;f47076b7-b738-4136-aba3-7ce886844070&quot;</span><br><span class=\"line\">/dev/sda3: UUID=&quot;d4394cd9-7e11-38db-95a9-7d781e0cbde0&quot; LABEL=&quot;MacOnDisk&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;4c697e1f-5b89-4c97-8bf3-11c819cb117e&quot;</span><br><span class=\"line\">/dev/sda4: UUID=&quot;74f09d9f-73b2-30d5-9f89-b9ac88490538&quot; LABEL=&quot;Recovery HD&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;9a17bdc7-3761-458f-b000-4a00debeb31b&quot;</span><br><span class=\"line\">/dev/sda5: UUID=&quot;3a161221-c554-3e56-ac93-b30c37087812&quot; LABEL=&quot;Time-Machine&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;2c0ebe1f-1af8-4928-98a3-ce615891e9f0&quot;</span><br><span class=\"line\">/dev/mmcblk0: PTUUID=&quot;31203949&quot; PTTYPE=&quot;dos&quot;</span><br></pre></td></tr></table></figure>\n<p>As you can see here, and I want to backup my Mac to <code>/dev/sda5</code> which labelled as <code>Time-Machine</code></p>\n<h4 id=\"2-2-2-Add-a-user-to-the-machine\"><a href=\"#2-2-2-Add-a-user-to-the-machine\" class=\"headerlink\" title=\"2.2.2. Add a user to the machine\"></a>2.2.2. Add a user to the machine</h4><p>So that we can separate the account with others</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo useradd timemachine</span><br><span class=\"line\">sudo passed timemachine</span><br><span class=\"line\"><span class=\"comment\"># Then add the password you like for the user timechine</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-3-Set-up-a-folder\"><a href=\"#2-2-3-Set-up-a-folder\" class=\"headerlink\" title=\"2.2.3. Set up a folder\"></a>2.2.3. Set up a folder</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Folder in /media/Time-Machine</span></span><br><span class=\"line\">sudo mkdir -p /media/Time-Machine</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Give it permission</span></span><br><span class=\"line\">sudo chown -R timemachine:users /media/Time-Machine</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-2-4-Set-fstab\"><a href=\"#2-2-4-Set-fstab\" class=\"headerlink\" title=\"2.2.4 Set fstab\"></a>2.2.4 Set fstab</h4><p>So that we can mount it automatically to the folder</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/fstab</span><br></pre></td></tr></table></figure>\n<p>and add:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dev/sda5 /media/Time-Machine hfsplus force,rw,user,auto 0 0</span><br></pre></td></tr></table></figure></p>\n<p>and use:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount</span><br></pre></td></tr></table></figure></p>\n<p>to mount the desired folder.</p>\n<h3 id=\"2-3-Configuration\"><a href=\"#2-3-Configuration\" class=\"headerlink\" title=\"2.3 Configuration\"></a>2.3 Configuration</h3><h4 id=\"2-3-1-configure-afp-conf\"><a href=\"#2-3-1-configure-afp-conf\" class=\"headerlink\" title=\"2.3.1 configure afp.conf\"></a>2.3.1 configure <code>afp.conf</code></h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/afp.conf</span><br><span class=\"line\">``` </span><br><span class=\"line\">and input the following lines:</span><br><span class=\"line\"></span><br><span class=\"line\">```conf</span><br><span class=\"line\">[global]</span><br><span class=\"line\">UAM list = uams_guest.so, uams_dhx.so, uams_dhx2.so,</span><br><span class=\"line\"></span><br><span class=\"line\">[Time Machine]</span><br><span class=\"line\">path = /media/Time-Machine</span><br><span class=\"line\">time machine = yes</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-3-2-configure-Service\"><a href=\"#2-3-2-configure-Service\" class=\"headerlink\" title=\"2.3.2 configure Service\"></a>2.3.2 configure Service</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/avahi/services/afpd.service</span><br></pre></td></tr></table></figure>\n<p> and paste these lines:</p>\n <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" standalone='no'?&gt;</span><span class=\"comment\">&lt;!--*-nxml-*--&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE service-group SYSTEM \"avahi-service.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">service-group</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span> <span class=\"attr\">replace-wildcards</span>=<span class=\"string\">\"yes\"</span>&gt;</span>%h<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">service</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>_afpovertcp._tcp<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>548<span class=\"tag\">&lt;/<span class=\"name\">port</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">service</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>_device-info._tcp<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">port</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">port</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">txt-record</span>&gt;</span>model=TimeCapsule<span class=\"tag\">&lt;/<span class=\"name\">txt-record</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">service</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">service-group</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-Start\"><a href=\"#3-Start\" class=\"headerlink\" title=\"3. Start\"></a>3. Start</h2><p>Now we can start the service<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> netatalk.service</span><br><span class=\"line\">sudo systemctl start netatalk.service</span><br><span class=\"line\">sudo systemctl start avahi-daemon.service</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Done\"><a href=\"#Done\" class=\"headerlink\" title=\"Done!\"></a>Done!</h2><p>Just Open your Time Machine Preferences and back your things up</p>\n<p><strong>Note:</strong><br>the <code>username</code> is <code>timemachine</code><br>the <code>password</code> is the password you entered before</p>\n<h2 id=\"Credits\"><a href=\"#Credits\" class=\"headerlink\" title=\"Credits\"></a>Credits</h2><ol>\n<li><a href=\"\">https://github.com/mr-bt/raspberrypi-timemachine</a></li>\n<li><a href=\"\">https://www.pihomeserver.fr/en/2013/01/16/raspberry-pi-home-server-arch-linux-sauvegarder-son-mac-avec-time-machine/</a></li>\n</ol>"},{"title":"2018-2019杂记","author":"OCD","date":"2018-12-15T07:21:17.000Z","_content":"\n2018年要过去了...提前预定一篇,慢慢写,想到啥写啥\n","source":"_posts/2018-2019.md","raw":"---\ntitle: 2018-2019杂记\nauthor: \"OCD\"\ndate: 2018-12-15 15:21:17\ncategory:\n    - miscellanea\ntags:\n    - Senior Year\n    - New Year\n---\n\n2018年要过去了...提前预定一篇,慢慢写,想到啥写啥\n","slug":"2018-2019","published":1,"updated":"2018-12-15T07:26:43.883Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wk000prmtu90oyypo4","content":"<p>2018年要过去了…提前预定一篇,慢慢写,想到啥写啥</p>\n","site":{"data":{}},"excerpt":"","more":"<p>2018年要过去了…提前预定一篇,慢慢写,想到啥写啥</p>\n"},{"title":"Trees","author":"OCD","mathjax":true,"date":"2018-11-26T03:32:37.620Z","_content":"In a `Tree`, the running time for most operations is __O(logN)__\n\n<!-- more -->\n\n## 4.1 Preliminaries\n - A `tree` can be defined in several ways. One natural way to define a tree is __recursively__.\n- A `tree` is a collection of _nodes_.\n- If not empty, a `tree` consists of a distinguished node _r_, called the __root__, and zero or more nonempty (sub)trees _T1_, _T2_, .... , _Tk_, each of whose roots are connected by a directed _edge_ from _r_\n- The _root_ of each subtree is said to be a __child__ of _r_, and _r_ is the parent of each subtree root.\n\n![tree](/images/tree.svg) \n\n__Figure 4.1__ A tree\n\n### 4.1.1 Implementation of Trees\nThe solution is simple:\n    Keep the children of each node in a linked list of tree nodes.\n```c\n#define ElementType int\ntypedef struct TreeNode* PtrToNode;\n\nstruct TreeNode\n{\n\tElementType Element;\n\tPtrToNode FirstChild;\n\tPtrToNode NextSibling;\n};\n``` \n`FirstChild` points to the head of its child \n`NextSibling` points to its brother in the linked list\n\n### 4.1.2 Tree Traversals with an Application\nThe structure of a Unix file system.\n`/usr`\n__Codes to imply this idea:__\n```c\nstatic void ListDir( DirectoryOrFile D, int Depth )\n{\n\tif (D is a legitimate entry)\n\t{\n\t\tPrintName(D, Depth);\n\t\tif (D is an directory )\n\t\t{\n\t\t\tfor each child, C of D\n\t\t\t\tListDir(C, Depth+1);\n\t\t}\n\t}\n}\n\nvoid ListDirectory( DirectoryOrFile D )\n{\n\tListDir(D, 0);\n}\n\nstatic void SizeOfDirectory( DirectoryOrFile D )\n{\n    int TotalSize;\n    \n    TotalSize = 0;\n    if( D is a legitimate entry )\n    {\n        TotalSize = FileSize( D );\n        if( D is a directory )\n            for each child C of D\n                TotalSize += SizeOfDirectory( C );\n    }\n    return TotalSize;\n}\n```\n\n## 4.2 Binary Trees \nA binary tree is a tree in which no node can have more than two children.\n### 4.2.1 Implementation\n- Because a binary tree has most two children, we can keep direct pointers to them.\n- In that a node is a structure consists of the _Key_ information plus two pointers (`left` and `right`) to other nodes.\n\n```c\ntypedef struct TreeNode* PtrToNode;\ntypedef struct PtrToNode Tree;\n\nstruct TreeNode\n{\n\tElementType Element;\n\tTree Left;\n\tTree Right;\n};\n```\n\n### 4.2.2 Expression Trees\n![tree](/images/exp-tree.svg)\nWe can produce an (overly parenthesized) infix expression by recursively producing a parenthesized left expression, then print out the operator at the root, and finally recursively producing a right parenthesized expression.\n\nThis general strategy is known as an _inorder_ traversal; it is easy to remember because of the type of expression it produces.\n\nThere are two alternative strategies. See the book for more examples.\n\n#### Constructing an Expression Tree\nWe now give an algorithm to convert a postfix expression into an expression tree.\nAs an example, suppose the input is:\n    `a b + c d e + * *`\nCodes can be found [here](https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-8).\n\n## 4.3 AVL Tree\nAn `AVL` tree is a search tree with a *balance* condition.\n- Require the left and right subtrees have the same height \n- Every node must have left and right trees with the same height.\n\nAn `AVL` tree is identical to a binary search tree, except that for every node in the tree, the height of the left and right subtrees can differ at most 1. (The height of a empty tree is defined to be `-1`)\n![AVL-Tree-1](/images/AVL-Tree-1.svg.png)\n__Figure: A AVL tree__\n\n__Note: Balanced factor__ (Wikipedia)\nIn a binary tree the balance factor of a node N is defined to be the height difference\n\n    BalanceFactor(N) := Height(RightSubtree(N)) – Height(LeftSubtree(N))\n\nof its two child subtrees. A binary tree is defined to be an AVL tree if the invariant\n\n    BalanceFactor(N) ∈ {–1,0,+1}\n\nholds for every node N in the tree.\n\nA node N with BalanceFactor(N) < 0 is called \"left-heavy\", one with BalanceFactor(N) > 0 is called \"right-heavy\", and one with BalanceFactor(N) = 0 is sometimes simply called \"balanced\".\n             \n              \n               \n               \nThe minimum number of nodes, _S(h)_ , in an `AVL` tree of height __h__ is given by\n\n    S(h) = S(h-1) + S(h-2) + 1 \n\n\n- Thus, all the tree operations can be performed in __O($$log(N)$$)__ time, except possibly insertion( we will assume lazy deletion ). When we do a insertion, we need to update all the balancing information for the nodes on the path back to the `root`, but the reason that insertion is potentially difficult is that inserting a node could violate the `AVL` Tree property.\n- If this is the case, then the property has to be resorted before the insertion step is considered over. It turns out that this can always be done with a simple modification to the tree, known as a __rotation__\n- After insertion, only nodes that are on the path from the insertion point to the root might have their balance altered because only those nodes have their subtrees altered. \n- As we follow the path up to the root and update the balancing information, we may find a node whose new balance violates the `AVL` condition.\n\nLets call the node that must be rebalanced $${\\alpha}$$. Since any node has at most two children, and a height imbalance requires that $${\\alpha}$$'s two subtrees' height differ by two, it is easy to see that a violation might occur in four cases:\n1. An insertion into the left subtree of the left child of $${\\alpha}$$;\n2. An insertion into the right subtree of the left child of $${\\alpha}$$.\n3. An insertion into the left subtree of the right child of $${\\alpha}$$.\n4. An insertion into the left subtree of the right child of $${\\alpha}$$.\n\nThe first case (`left-left` `right-right`) is fixed by a _single rotation_ of the tree and the second case (`left-right` `right-left`) is handled by a more complex _double rotation_.\n\n![AVL rotation](/images/AVL-Tree-2.gif)","source":"_posts/2017-12-08-Trees.md","raw":"title: Trees\nauthor: OCD\nmathjax: true\ncategory:\n  - Programming\ntags:\n  - C\n  - Data Structure\n  - Develop\ndate: NaN-NaN-NaN NaN:NaN:NaN\n---\nIn a `Tree`, the running time for most operations is __O(logN)__\n\n<!-- more -->\n\n## 4.1 Preliminaries\n - A `tree` can be defined in several ways. One natural way to define a tree is __recursively__.\n- A `tree` is a collection of _nodes_.\n- If not empty, a `tree` consists of a distinguished node _r_, called the __root__, and zero or more nonempty (sub)trees _T1_, _T2_, .... , _Tk_, each of whose roots are connected by a directed _edge_ from _r_\n- The _root_ of each subtree is said to be a __child__ of _r_, and _r_ is the parent of each subtree root.\n\n![tree](/images/tree.svg) \n\n__Figure 4.1__ A tree\n\n### 4.1.1 Implementation of Trees\nThe solution is simple:\n    Keep the children of each node in a linked list of tree nodes.\n```c\n#define ElementType int\ntypedef struct TreeNode* PtrToNode;\n\nstruct TreeNode\n{\n\tElementType Element;\n\tPtrToNode FirstChild;\n\tPtrToNode NextSibling;\n};\n``` \n`FirstChild` points to the head of its child \n`NextSibling` points to its brother in the linked list\n\n### 4.1.2 Tree Traversals with an Application\nThe structure of a Unix file system.\n`/usr`\n__Codes to imply this idea:__\n```c\nstatic void ListDir( DirectoryOrFile D, int Depth )\n{\n\tif (D is a legitimate entry)\n\t{\n\t\tPrintName(D, Depth);\n\t\tif (D is an directory )\n\t\t{\n\t\t\tfor each child, C of D\n\t\t\t\tListDir(C, Depth+1);\n\t\t}\n\t}\n}\n\nvoid ListDirectory( DirectoryOrFile D )\n{\n\tListDir(D, 0);\n}\n\nstatic void SizeOfDirectory( DirectoryOrFile D )\n{\n    int TotalSize;\n    \n    TotalSize = 0;\n    if( D is a legitimate entry )\n    {\n        TotalSize = FileSize( D );\n        if( D is a directory )\n            for each child C of D\n                TotalSize += SizeOfDirectory( C );\n    }\n    return TotalSize;\n}\n```\n\n## 4.2 Binary Trees \nA binary tree is a tree in which no node can have more than two children.\n### 4.2.1 Implementation\n- Because a binary tree has most two children, we can keep direct pointers to them.\n- In that a node is a structure consists of the _Key_ information plus two pointers (`left` and `right`) to other nodes.\n\n```c\ntypedef struct TreeNode* PtrToNode;\ntypedef struct PtrToNode Tree;\n\nstruct TreeNode\n{\n\tElementType Element;\n\tTree Left;\n\tTree Right;\n};\n```\n\n### 4.2.2 Expression Trees\n![tree](/images/exp-tree.svg)\nWe can produce an (overly parenthesized) infix expression by recursively producing a parenthesized left expression, then print out the operator at the root, and finally recursively producing a right parenthesized expression.\n\nThis general strategy is known as an _inorder_ traversal; it is easy to remember because of the type of expression it produces.\n\nThere are two alternative strategies. See the book for more examples.\n\n#### Constructing an Expression Tree\nWe now give an algorithm to convert a postfix expression into an expression tree.\nAs an example, suppose the input is:\n    `a b + c d e + * *`\nCodes can be found [here](https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-8).\n\n## 4.3 AVL Tree\nAn `AVL` tree is a search tree with a *balance* condition.\n- Require the left and right subtrees have the same height \n- Every node must have left and right trees with the same height.\n\nAn `AVL` tree is identical to a binary search tree, except that for every node in the tree, the height of the left and right subtrees can differ at most 1. (The height of a empty tree is defined to be `-1`)\n![AVL-Tree-1](/images/AVL-Tree-1.svg.png)\n__Figure: A AVL tree__\n\n__Note: Balanced factor__ (Wikipedia)\nIn a binary tree the balance factor of a node N is defined to be the height difference\n\n    BalanceFactor(N) := Height(RightSubtree(N)) – Height(LeftSubtree(N))\n\nof its two child subtrees. A binary tree is defined to be an AVL tree if the invariant\n\n    BalanceFactor(N) ∈ {–1,0,+1}\n\nholds for every node N in the tree.\n\nA node N with BalanceFactor(N) < 0 is called \"left-heavy\", one with BalanceFactor(N) > 0 is called \"right-heavy\", and one with BalanceFactor(N) = 0 is sometimes simply called \"balanced\".\n             \n              \n               \n               \nThe minimum number of nodes, _S(h)_ , in an `AVL` tree of height __h__ is given by\n\n    S(h) = S(h-1) + S(h-2) + 1 \n\n\n- Thus, all the tree operations can be performed in __O($$log(N)$$)__ time, except possibly insertion( we will assume lazy deletion ). When we do a insertion, we need to update all the balancing information for the nodes on the path back to the `root`, but the reason that insertion is potentially difficult is that inserting a node could violate the `AVL` Tree property.\n- If this is the case, then the property has to be resorted before the insertion step is considered over. It turns out that this can always be done with a simple modification to the tree, known as a __rotation__\n- After insertion, only nodes that are on the path from the insertion point to the root might have their balance altered because only those nodes have their subtrees altered. \n- As we follow the path up to the root and update the balancing information, we may find a node whose new balance violates the `AVL` condition.\n\nLets call the node that must be rebalanced $${\\alpha}$$. Since any node has at most two children, and a height imbalance requires that $${\\alpha}$$'s two subtrees' height differ by two, it is easy to see that a violation might occur in four cases:\n1. An insertion into the left subtree of the left child of $${\\alpha}$$;\n2. An insertion into the right subtree of the left child of $${\\alpha}$$.\n3. An insertion into the left subtree of the right child of $${\\alpha}$$.\n4. An insertion into the left subtree of the right child of $${\\alpha}$$.\n\nThe first case (`left-left` `right-right`) is fixed by a _single rotation_ of the tree and the second case (`left-right` `right-left`) is handled by a more complex _double rotation_.\n\n![AVL rotation](/images/AVL-Tree-2.gif)","slug":"2017-12-08-Trees","published":1,"updated":"2018-11-26T03:32:37.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wl000trmtuhvbh8lk4","content":"<p>In a <code>Tree</code>, the running time for most operations is <strong>O(logN)</strong></p>\n<a id=\"more\"></a>\n<h2 id=\"4-1-Preliminaries\"><a href=\"#4-1-Preliminaries\" class=\"headerlink\" title=\"4.1 Preliminaries\"></a>4.1 Preliminaries</h2><ul>\n<li>A <code>tree</code> can be defined in several ways. One natural way to define a tree is <strong>recursively</strong>.<ul>\n<li>A <code>tree</code> is a collection of <em>nodes</em>.</li>\n<li>If not empty, a <code>tree</code> consists of a distinguished node _r_, called the <strong>root</strong>, and zero or more nonempty (sub)trees _T1_, _T2_, …. , _Tk_, each of whose roots are connected by a directed <em>edge</em> from _r_</li>\n<li>The <em>root</em> of each subtree is said to be a <strong>child</strong> of _r_, and _r_ is the parent of each subtree root.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/tree.svg\" alt=\"tree\"> </p>\n<p><strong>Figure 4.1</strong> A tree</p>\n<h3 id=\"4-1-1-Implementation-of-Trees\"><a href=\"#4-1-1-Implementation-of-Trees\" class=\"headerlink\" title=\"4.1.1 Implementation of Trees\"></a>4.1.1 Implementation of Trees</h3><p>The solution is simple:<br>    Keep the children of each node in a linked list of tree nodes.<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ElementType int</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">TreeNode</span>* <span class=\"title\">PtrToNode</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">TreeNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElementType Element;</span><br><span class=\"line\">\tPtrToNode FirstChild;</span><br><span class=\"line\">\tPtrToNode NextSibling;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">``` </span><br><span class=\"line\">`FirstChild` points to the head of its child </span><br><span class=\"line\">`NextSibling` points to its brother in the linked <span class=\"built_in\">list</span></span><br><span class=\"line\"></span><br><span class=\"line\">### <span class=\"number\">4.1</span><span class=\"number\">.2</span> Tree Traversals with an Application</span><br><span class=\"line\">The structure of a Unix file system.</span><br><span class=\"line\">`/usr`</span><br><span class=\"line\">__Codes to imply <span class=\"keyword\">this</span> idea:__</span><br><span class=\"line\">```c</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ListDir</span><span class=\"params\">( DirectoryOrFile D, <span class=\"keyword\">int</span> Depth )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (D is a legitimate entry)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tPrintName(D, Depth);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (D is an directory )</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> each child, C of D</span><br><span class=\"line\">\t\t\t\tListDir(C, Depth+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ListDirectory</span><span class=\"params\">( DirectoryOrFile D )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tListDir(D, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SizeOfDirectory</span><span class=\"params\">( DirectoryOrFile D )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> TotalSize;</span><br><span class=\"line\">    </span><br><span class=\"line\">    TotalSize = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( D is a legitimate entry )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        TotalSize = FileSize( D );</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( D is a directory )</span><br><span class=\"line\">            <span class=\"keyword\">for</span> each child C of D</span><br><span class=\"line\">                TotalSize += SizeOfDirectory( C );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> TotalSize;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-2-Binary-Trees\"><a href=\"#4-2-Binary-Trees\" class=\"headerlink\" title=\"4.2 Binary Trees\"></a>4.2 Binary Trees</h2><p>A binary tree is a tree in which no node can have more than two children.</p>\n<h3 id=\"4-2-1-Implementation\"><a href=\"#4-2-1-Implementation\" class=\"headerlink\" title=\"4.2.1 Implementation\"></a>4.2.1 Implementation</h3><ul>\n<li>Because a binary tree has most two children, we can keep direct pointers to them.</li>\n<li>In that a node is a structure consists of the <em>Key</em> information plus two pointers (<code>left</code> and <code>right</code>) to other nodes.</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">TreeNode</span>* <span class=\"title\">PtrToNode</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">PtrToNode</span> <span class=\"title\">Tree</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">TreeNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElementType Element;</span><br><span class=\"line\">\tTree Left;</span><br><span class=\"line\">\tTree Right;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-2-Expression-Trees\"><a href=\"#4-2-2-Expression-Trees\" class=\"headerlink\" title=\"4.2.2 Expression Trees\"></a>4.2.2 Expression Trees</h3><p><img src=\"/images/exp-tree.svg\" alt=\"tree\"><br>We can produce an (overly parenthesized) infix expression by recursively producing a parenthesized left expression, then print out the operator at the root, and finally recursively producing a right parenthesized expression.</p>\n<p>This general strategy is known as an <em>inorder</em> traversal; it is easy to remember because of the type of expression it produces.</p>\n<p>There are two alternative strategies. See the book for more examples.</p>\n<h4 id=\"Constructing-an-Expression-Tree\"><a href=\"#Constructing-an-Expression-Tree\" class=\"headerlink\" title=\"Constructing an Expression Tree\"></a>Constructing an Expression Tree</h4><p>We now give an algorithm to convert a postfix expression into an expression tree.<br>As an example, suppose the input is:<br>    <code>a b + c d e + * *</code><br>Codes can be found <a href=\"https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-8\" target=\"_blank\" rel=\"noopener\">here</a>.</p>\n<h2 id=\"4-3-AVL-Tree\"><a href=\"#4-3-AVL-Tree\" class=\"headerlink\" title=\"4.3 AVL Tree\"></a>4.3 AVL Tree</h2><p>An <code>AVL</code> tree is a search tree with a <em>balance</em> condition.</p>\n<ul>\n<li>Require the left and right subtrees have the same height </li>\n<li>Every node must have left and right trees with the same height.</li>\n</ul>\n<p>An <code>AVL</code> tree is identical to a binary search tree, except that for every node in the tree, the height of the left and right subtrees can differ at most 1. (The height of a empty tree is defined to be <code>-1</code>)<br><img src=\"/images/AVL-Tree-1.svg.png\" alt=\"AVL-Tree-1\"><br><strong>Figure: A AVL tree</strong></p>\n<p><strong>Note: Balanced factor</strong> (Wikipedia)<br>In a binary tree the balance factor of a node N is defined to be the height difference</p>\n<pre><code>BalanceFactor(N) := Height(RightSubtree(N)) – Height(LeftSubtree(N))\n</code></pre><p>of its two child subtrees. A binary tree is defined to be an AVL tree if the invariant</p>\n<pre><code>BalanceFactor(N) ∈ {–1,0,+1}\n</code></pre><p>holds for every node N in the tree.</p>\n<p>A node N with BalanceFactor(N) &lt; 0 is called “left-heavy”, one with BalanceFactor(N) &gt; 0 is called “right-heavy”, and one with BalanceFactor(N) = 0 is sometimes simply called “balanced”.</p>\n<p>The minimum number of nodes, <em>S(h)</em> , in an <code>AVL</code> tree of height <strong>h</strong> is given by</p>\n<pre><code>S(h) = S(h-1) + S(h-2) + 1 \n</code></pre><ul>\n<li>Thus, all the tree operations can be performed in <strong>O($$log(N)$$)</strong> time, except possibly insertion( we will assume lazy deletion ). When we do a insertion, we need to update all the balancing information for the nodes on the path back to the <code>root</code>, but the reason that insertion is potentially difficult is that inserting a node could violate the <code>AVL</code> Tree property.</li>\n<li>If this is the case, then the property has to be resorted before the insertion step is considered over. It turns out that this can always be done with a simple modification to the tree, known as a <strong>rotation</strong></li>\n<li>After insertion, only nodes that are on the path from the insertion point to the root might have their balance altered because only those nodes have their subtrees altered. </li>\n<li>As we follow the path up to the root and update the balancing information, we may find a node whose new balance violates the <code>AVL</code> condition.</li>\n</ul>\n<p>Lets call the node that must be rebalanced $${\\alpha}$$. Since any node has at most two children, and a height imbalance requires that $${\\alpha}$$’s two subtrees’ height differ by two, it is easy to see that a violation might occur in four cases:</p>\n<ol>\n<li>An insertion into the left subtree of the left child of $${\\alpha}$$;</li>\n<li>An insertion into the right subtree of the left child of $${\\alpha}$$.</li>\n<li>An insertion into the left subtree of the right child of $${\\alpha}$$.</li>\n<li>An insertion into the left subtree of the right child of $${\\alpha}$$.</li>\n</ol>\n<p>The first case (<code>left-left</code> <code>right-right</code>) is fixed by a <em>single rotation</em> of the tree and the second case (<code>left-right</code> <code>right-left</code>) is handled by a more complex <em>double rotation</em>.</p>\n<p><img src=\"/images/AVL-Tree-2.gif\" alt=\"AVL rotation\"></p>\n","site":{"data":{}},"excerpt":"<p>In a <code>Tree</code>, the running time for most operations is <strong>O(logN)</strong></p>","more":"<h2 id=\"4-1-Preliminaries\"><a href=\"#4-1-Preliminaries\" class=\"headerlink\" title=\"4.1 Preliminaries\"></a>4.1 Preliminaries</h2><ul>\n<li>A <code>tree</code> can be defined in several ways. One natural way to define a tree is <strong>recursively</strong>.<ul>\n<li>A <code>tree</code> is a collection of <em>nodes</em>.</li>\n<li>If not empty, a <code>tree</code> consists of a distinguished node _r_, called the <strong>root</strong>, and zero or more nonempty (sub)trees _T1_, _T2_, …. , _Tk_, each of whose roots are connected by a directed <em>edge</em> from _r_</li>\n<li>The <em>root</em> of each subtree is said to be a <strong>child</strong> of _r_, and _r_ is the parent of each subtree root.</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/images/tree.svg\" alt=\"tree\"> </p>\n<p><strong>Figure 4.1</strong> A tree</p>\n<h3 id=\"4-1-1-Implementation-of-Trees\"><a href=\"#4-1-1-Implementation-of-Trees\" class=\"headerlink\" title=\"4.1.1 Implementation of Trees\"></a>4.1.1 Implementation of Trees</h3><p>The solution is simple:<br>    Keep the children of each node in a linked list of tree nodes.<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ElementType int</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">TreeNode</span>* <span class=\"title\">PtrToNode</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">TreeNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElementType Element;</span><br><span class=\"line\">\tPtrToNode FirstChild;</span><br><span class=\"line\">\tPtrToNode NextSibling;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">``` </span><br><span class=\"line\">`FirstChild` points to the head of its child </span><br><span class=\"line\">`NextSibling` points to its brother in the linked <span class=\"built_in\">list</span></span><br><span class=\"line\"></span><br><span class=\"line\">### <span class=\"number\">4.1</span><span class=\"number\">.2</span> Tree Traversals with an Application</span><br><span class=\"line\">The structure of a Unix file system.</span><br><span class=\"line\">`/usr`</span><br><span class=\"line\">__Codes to imply <span class=\"keyword\">this</span> idea:__</span><br><span class=\"line\">```c</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ListDir</span><span class=\"params\">( DirectoryOrFile D, <span class=\"keyword\">int</span> Depth )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (D is a legitimate entry)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tPrintName(D, Depth);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (D is an directory )</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> each child, C of D</span><br><span class=\"line\">\t\t\t\tListDir(C, Depth+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">ListDirectory</span><span class=\"params\">( DirectoryOrFile D )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tListDir(D, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SizeOfDirectory</span><span class=\"params\">( DirectoryOrFile D )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> TotalSize;</span><br><span class=\"line\">    </span><br><span class=\"line\">    TotalSize = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( D is a legitimate entry )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        TotalSize = FileSize( D );</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( D is a directory )</span><br><span class=\"line\">            <span class=\"keyword\">for</span> each child C of D</span><br><span class=\"line\">                TotalSize += SizeOfDirectory( C );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> TotalSize;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"4-2-Binary-Trees\"><a href=\"#4-2-Binary-Trees\" class=\"headerlink\" title=\"4.2 Binary Trees\"></a>4.2 Binary Trees</h2><p>A binary tree is a tree in which no node can have more than two children.</p>\n<h3 id=\"4-2-1-Implementation\"><a href=\"#4-2-1-Implementation\" class=\"headerlink\" title=\"4.2.1 Implementation\"></a>4.2.1 Implementation</h3><ul>\n<li>Because a binary tree has most two children, we can keep direct pointers to them.</li>\n<li>In that a node is a structure consists of the <em>Key</em> information plus two pointers (<code>left</code> and <code>right</code>) to other nodes.</li>\n</ul>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">TreeNode</span>* <span class=\"title\">PtrToNode</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">PtrToNode</span> <span class=\"title\">Tree</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">TreeNode</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\tElementType Element;</span><br><span class=\"line\">\tTree Left;</span><br><span class=\"line\">\tTree Right;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-2-2-Expression-Trees\"><a href=\"#4-2-2-Expression-Trees\" class=\"headerlink\" title=\"4.2.2 Expression Trees\"></a>4.2.2 Expression Trees</h3><p><img src=\"/images/exp-tree.svg\" alt=\"tree\"><br>We can produce an (overly parenthesized) infix expression by recursively producing a parenthesized left expression, then print out the operator at the root, and finally recursively producing a right parenthesized expression.</p>\n<p>This general strategy is known as an <em>inorder</em> traversal; it is easy to remember because of the type of expression it produces.</p>\n<p>There are two alternative strategies. See the book for more examples.</p>\n<h4 id=\"Constructing-an-Expression-Tree\"><a href=\"#Constructing-an-Expression-Tree\" class=\"headerlink\" title=\"Constructing an Expression Tree\"></a>Constructing an Expression Tree</h4><p>We now give an algorithm to convert a postfix expression into an expression tree.<br>As an example, suppose the input is:<br>    <code>a b + c d e + * *</code><br>Codes can be found <a href=\"https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-8\" target=\"_blank\" rel=\"noopener\">here</a>.</p>\n<h2 id=\"4-3-AVL-Tree\"><a href=\"#4-3-AVL-Tree\" class=\"headerlink\" title=\"4.3 AVL Tree\"></a>4.3 AVL Tree</h2><p>An <code>AVL</code> tree is a search tree with a <em>balance</em> condition.</p>\n<ul>\n<li>Require the left and right subtrees have the same height </li>\n<li>Every node must have left and right trees with the same height.</li>\n</ul>\n<p>An <code>AVL</code> tree is identical to a binary search tree, except that for every node in the tree, the height of the left and right subtrees can differ at most 1. (The height of a empty tree is defined to be <code>-1</code>)<br><img src=\"/images/AVL-Tree-1.svg.png\" alt=\"AVL-Tree-1\"><br><strong>Figure: A AVL tree</strong></p>\n<p><strong>Note: Balanced factor</strong> (Wikipedia)<br>In a binary tree the balance factor of a node N is defined to be the height difference</p>\n<pre><code>BalanceFactor(N) := Height(RightSubtree(N)) – Height(LeftSubtree(N))\n</code></pre><p>of its two child subtrees. A binary tree is defined to be an AVL tree if the invariant</p>\n<pre><code>BalanceFactor(N) ∈ {–1,0,+1}\n</code></pre><p>holds for every node N in the tree.</p>\n<p>A node N with BalanceFactor(N) &lt; 0 is called “left-heavy”, one with BalanceFactor(N) &gt; 0 is called “right-heavy”, and one with BalanceFactor(N) = 0 is sometimes simply called “balanced”.</p>\n<p>The minimum number of nodes, <em>S(h)</em> , in an <code>AVL</code> tree of height <strong>h</strong> is given by</p>\n<pre><code>S(h) = S(h-1) + S(h-2) + 1 \n</code></pre><ul>\n<li>Thus, all the tree operations can be performed in <strong>O($$log(N)$$)</strong> time, except possibly insertion( we will assume lazy deletion ). When we do a insertion, we need to update all the balancing information for the nodes on the path back to the <code>root</code>, but the reason that insertion is potentially difficult is that inserting a node could violate the <code>AVL</code> Tree property.</li>\n<li>If this is the case, then the property has to be resorted before the insertion step is considered over. It turns out that this can always be done with a simple modification to the tree, known as a <strong>rotation</strong></li>\n<li>After insertion, only nodes that are on the path from the insertion point to the root might have their balance altered because only those nodes have their subtrees altered. </li>\n<li>As we follow the path up to the root and update the balancing information, we may find a node whose new balance violates the <code>AVL</code> condition.</li>\n</ul>\n<p>Lets call the node that must be rebalanced $${\\alpha}$$. Since any node has at most two children, and a height imbalance requires that $${\\alpha}$$’s two subtrees’ height differ by two, it is easy to see that a violation might occur in four cases:</p>\n<ol>\n<li>An insertion into the left subtree of the left child of $${\\alpha}$$;</li>\n<li>An insertion into the right subtree of the left child of $${\\alpha}$$.</li>\n<li>An insertion into the left subtree of the right child of $${\\alpha}$$.</li>\n<li>An insertion into the left subtree of the right child of $${\\alpha}$$.</li>\n</ol>\n<p>The first case (<code>left-left</code> <code>right-right</code>) is fixed by a <em>single rotation</em> of the tree and the second case (<code>left-right</code> <code>right-left</code>) is handled by a more complex <em>double rotation</em>.</p>\n<p><img src=\"/images/AVL-Tree-2.gif\" alt=\"AVL rotation\"></p>"},{"title":"Install ArchLinux on MacBook 2016 and later","author":"OCD","date":"2018-11-26T03:32:37.620Z","_content":"\nThis passage introduces a way to install Arch Linux on MacBook that releases in 2016 and 2017\n\n<!-- more -->\n\n__Caution__: You should be aware that some functions may not work properly. Do it on your own risk!\n\n## 1. Overview\n__What works__:\n\n__1. On booting__\n\n- [x] Booting\n- [x] Disks\n- [x] HiDPI\n- [x] Accelerated Video\n- [x] Keyboard Backlight\n- [x] USB\n- [x] Screen Brightness Control\n- [x] Sensors\n- [x] Bluetooth\n\n__2. Require modules installed__\n\n- [x] Keyboard, touchbar and trackpad\n\n__3. Partly Working__\n\n- [ ] WiFi (Has some improving method)\n\n__4. Not work__\n\n- [ ] Suspend/Resume\n- [ ] Audio (two cards show up, and intel driver is loaded, but no sound)\n\n__Notice__: You may refer to [roadrunner's Gist](https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7) for a more accurate list.\n\n## 2. Preparation\n\n### 2.1 Hardware \nIn this installation, you  need a __USB Stick more than 2 GB__, a __Keybord__, A stable internet connection through tethering, and also, USB Hubs.\n\n__Notice__: This guide uses phone USB tethering and you had better not directly connect to WiFi as it is unstable.\n\n### 2.2 Software\n1. Download the latest **ArchLinux iso**\n2. Burn it to your **USB sticker** - Use the command `dd` to achieve this.\n3. **rEFInd Boot Manager** - Used to boot your MacBook to ArchLinux\n\n__Notice__: Refer to `dd` and `rEFInd`'s manual for more information!\n\n## 3. Basic Installation\n\n### 3.1 Booting & Setting up\n1. Insert USB Sticker and reboot your MacBook, in the rEFInd menu, select the efi option for booting ArchLinux, and enter the Installation Environment.\n2. Connect your keyboard and your phone to MacBook (your phone may need to connect to WiFi in order to not result in high Cellar fee.) \n3. Set up tethering: In your phone, click **Settings** > **Network & Internet** > **Hotspot & tethering** > **USB Tethering** and turn it on.\n4. In the computer, type `dhcpcd` to set up the carrier interface and use `ping archlinux.org` to test your connection.\n\n### 3.2 Partitioning\n__Warning__: Do it carefully!\n\n1. Use `fdisk -l` to check your partition table.\n2. Look for the disk you want to install ArchLinux (`sda` `sdb` ...)\n3. If you could see a `EFI Partition` then please ignore the section with the mark `*`\n4. Use `fdisk sdX` to dig into your disk. Enter `p` for a table.\n5. Partition your Disk. ( \\* You should create a partition of about **500M** at the start the partition table)\n6. \\* Set EFI Partition\n   ```bash\n   parted sdX\n   set 1 boot on\n   ```\n7. Format\n   ```bash\n   mkfs.ext4 /dev/sdXy\n   mkfs.vfat /dev/sda1*\n   ```\n8. Mount\n   ```bash\n   mount /dev/sdXy /mnt\n   mkdir -p /mnt/boot\n   mount /dev/sda /mnt/boot\n   ```\n\n### 3.3 Install\n   __Notice__: You may need to edit `/etc/pacman.d/mirrorlist` to choose a mirror\n   ```bash\n   pacstrap /mnt base base-devel grub efibootmgr wireless_tools vim\n   genfstab -U /mnt >> /mnt/etc/fstab\n   ```\n   \n### 3.4 Chroot\nChroot into the system\n\n```bash\narch-chroot /mnt\n```\n\nand follow the official [ArchLinux Instruction](https://wiki.archlinux.org/index.php/installation_guide) set up your `hostname` `timezone` etc.\n    \n#### 3.4.1 Install GRUB ( Loader )\nStay in the chroot mode and use the following command:\n\n```bash\ngrub-install --efi-directory=/boot\ngrub-mkconfig -o /boot/grub/grub.cfg\n```\n\n## 4. MacBook Specified Configurations\n### 4.1 Make Keyboard Work\nInstall the Driver:\n\n```bash\npacman -S linux-headers\ngit clone https://github.com/roadrunner2/macbook12-spi-driver.git\npushd macbook12-spi-driver\ngit checkout touchbar-driver-hid-driver\nsudo ln -s `pwd` /usr/src/applespi-0.1\nsudo dkms install applespi/0.1\npopd\n```\n\nConfigure mkinitcpio.conf\n\n```bash\nsudo nano /etc/mkinitcpio.conf\n```\nand in the `modules` section add :\n\n```conf\nModules = (applespi intel_lpss_pci spi_pxa2xx_platform appletb)\n```\nThen use `mkinitcpio -p linux` to load them on next boot.\n\nChange sensitivity:\nSave the two following two files to `/etc/udev/hwdb.d/`:\n\n[61-evdev-local.hwdb](https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#file-61-evdev-local-hwdb) \n[61-libinput-local.hwdb](https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb) \n\n __Note__: You can also see them in the appendix.\n \n Reboot and enjoy.\n \n### 4.2 WiFi improvements\nThere are two ways to change the bad WiFi condition and the discussion is [here](https://bugzilla.kernel.org/show_bug.cgi?id=193121).\n\n#### 4.2.1 Edit the driver\nAs [here](https://bugzilla.kernel.org/show_bug.cgi?id=193121#c25) suggests:\nUse hex editor to change the `/lib/firmware/brcm/brcmfmac43602-pcie.bin`\n```\n/lib/firmware/brcm/brcmfmac43602-pcie.bin\n  offset     0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF    0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF\n0x00000000  80f140b882f1a4b982f1b0b982f1bcb9 ..@.............   80f140b882f1a4b982f1b0b982f1bcb9 ..@.............\n0x00000010  82f1cbb982f1dab982f1e9b982f1f8b9 ................   82f1cbb982f1dab982f1e9b982f1f8b9 ................\n...\n0x0007c820! 30643a66343a33650063636f64653d58 0d:f4:3e.ccode=X   30643a66343a33650063636f64653d30 0d:f4:3e.ccode=0\n0x0007c830! 30007265677265763d31350061613267 0.regrev=15.aa2g   00007265677265763d30000061613267 ..regrev=0..aa2g\n0x0007c840  3d3700616135673d370061676267303d =7.aa5g=7.agbg0=   3d3700616135673d370061676267303d =7.aa5g=7.agbg0=\n0x0007c850  37310061676267313d37310061676267 71.agbg1=71.agbg   37310061676267313d37310061676267 71.agbg1=71.agbg\n...\n```\n**Note**: As I changed the file, I cannot connect to any WiFi networks. More Investigation required.\n\n#### 4.2.2 Change the txpower\nThis is simple (see [#10](https://bugzilla.kernel.org/show_bug.cgi?id=193121#c28))\n\n```bash\nip link set wlp2s0 up   # if not already up\niwconfig wlp2s0 txpower 10dBm\n```\n\n## 5. Appendix\n__61-evdev-local.hwdb__\n\n```\n# MacBook8,1 (2015), MacBook9,1 (2016), MacBook10,1 (2017)\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook8,1:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook9,1:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook10,1:*\n EVDEV_ABS_00=::95\n EVDEV_ABS_01=::90\n EVDEV_ABS_35=::95\n EVDEV_ABS_36=::90\n\n# MacBookPro13,* (Late 2016), MacBookPro14,* (Mid 2017)\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,1:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,2:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,1:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,2:*\n EVDEV_ABS_00=::96\n EVDEV_ABS_01=::94\n EVDEV_ABS_35=::96\n EVDEV_ABS_36=::94\n\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,3:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,3:*\n EVDEV_ABS_00=::96\n EVDEV_ABS_01=::95\n EVDEV_ABS_35=::96\n EVDEV_ABS_36=::95\n ```\n \n __61-libinput-local.hwdb__\n \n ```\n libinput:name:*Apple SPI Touchpad*:dmi:*\n LIBINPUT_MODEL_APPLE_TOUCHPAD=1\n LIBINPUT_ATTR_KEYBOARD_INTEGRATION=internal\n LIBINPUT_ATTR_TOUCH_SIZE_RANGE=200:150\n LIBINPUT_ATTR_PALM_SIZE_THRESHOLD=1200\n```\n## 6. Credits\n\n1. [Roadrunner's gist](https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb)\n2. [Many awesome people in bugzilla](https://bugzilla.kernel.org/show_bug.cgi?id=193121)\n\n\n","source":"_posts/2018-06-08-Install-Arch-Linux-Macbook-13.md","raw":"---\ntitle: Install ArchLinux on MacBook 2016 and later\nauthor: \"OCD\"\ndate: 2018-6-8 1\ncategory:\n    - Computer\ntags:\n    - ArchLinux\n---\n\nThis passage introduces a way to install Arch Linux on MacBook that releases in 2016 and 2017\n\n<!-- more -->\n\n__Caution__: You should be aware that some functions may not work properly. Do it on your own risk!\n\n## 1. Overview\n__What works__:\n\n__1. On booting__\n\n- [x] Booting\n- [x] Disks\n- [x] HiDPI\n- [x] Accelerated Video\n- [x] Keyboard Backlight\n- [x] USB\n- [x] Screen Brightness Control\n- [x] Sensors\n- [x] Bluetooth\n\n__2. Require modules installed__\n\n- [x] Keyboard, touchbar and trackpad\n\n__3. Partly Working__\n\n- [ ] WiFi (Has some improving method)\n\n__4. Not work__\n\n- [ ] Suspend/Resume\n- [ ] Audio (two cards show up, and intel driver is loaded, but no sound)\n\n__Notice__: You may refer to [roadrunner's Gist](https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7) for a more accurate list.\n\n## 2. Preparation\n\n### 2.1 Hardware \nIn this installation, you  need a __USB Stick more than 2 GB__, a __Keybord__, A stable internet connection through tethering, and also, USB Hubs.\n\n__Notice__: This guide uses phone USB tethering and you had better not directly connect to WiFi as it is unstable.\n\n### 2.2 Software\n1. Download the latest **ArchLinux iso**\n2. Burn it to your **USB sticker** - Use the command `dd` to achieve this.\n3. **rEFInd Boot Manager** - Used to boot your MacBook to ArchLinux\n\n__Notice__: Refer to `dd` and `rEFInd`'s manual for more information!\n\n## 3. Basic Installation\n\n### 3.1 Booting & Setting up\n1. Insert USB Sticker and reboot your MacBook, in the rEFInd menu, select the efi option for booting ArchLinux, and enter the Installation Environment.\n2. Connect your keyboard and your phone to MacBook (your phone may need to connect to WiFi in order to not result in high Cellar fee.) \n3. Set up tethering: In your phone, click **Settings** > **Network & Internet** > **Hotspot & tethering** > **USB Tethering** and turn it on.\n4. In the computer, type `dhcpcd` to set up the carrier interface and use `ping archlinux.org` to test your connection.\n\n### 3.2 Partitioning\n__Warning__: Do it carefully!\n\n1. Use `fdisk -l` to check your partition table.\n2. Look for the disk you want to install ArchLinux (`sda` `sdb` ...)\n3. If you could see a `EFI Partition` then please ignore the section with the mark `*`\n4. Use `fdisk sdX` to dig into your disk. Enter `p` for a table.\n5. Partition your Disk. ( \\* You should create a partition of about **500M** at the start the partition table)\n6. \\* Set EFI Partition\n   ```bash\n   parted sdX\n   set 1 boot on\n   ```\n7. Format\n   ```bash\n   mkfs.ext4 /dev/sdXy\n   mkfs.vfat /dev/sda1*\n   ```\n8. Mount\n   ```bash\n   mount /dev/sdXy /mnt\n   mkdir -p /mnt/boot\n   mount /dev/sda /mnt/boot\n   ```\n\n### 3.3 Install\n   __Notice__: You may need to edit `/etc/pacman.d/mirrorlist` to choose a mirror\n   ```bash\n   pacstrap /mnt base base-devel grub efibootmgr wireless_tools vim\n   genfstab -U /mnt >> /mnt/etc/fstab\n   ```\n   \n### 3.4 Chroot\nChroot into the system\n\n```bash\narch-chroot /mnt\n```\n\nand follow the official [ArchLinux Instruction](https://wiki.archlinux.org/index.php/installation_guide) set up your `hostname` `timezone` etc.\n    \n#### 3.4.1 Install GRUB ( Loader )\nStay in the chroot mode and use the following command:\n\n```bash\ngrub-install --efi-directory=/boot\ngrub-mkconfig -o /boot/grub/grub.cfg\n```\n\n## 4. MacBook Specified Configurations\n### 4.1 Make Keyboard Work\nInstall the Driver:\n\n```bash\npacman -S linux-headers\ngit clone https://github.com/roadrunner2/macbook12-spi-driver.git\npushd macbook12-spi-driver\ngit checkout touchbar-driver-hid-driver\nsudo ln -s `pwd` /usr/src/applespi-0.1\nsudo dkms install applespi/0.1\npopd\n```\n\nConfigure mkinitcpio.conf\n\n```bash\nsudo nano /etc/mkinitcpio.conf\n```\nand in the `modules` section add :\n\n```conf\nModules = (applespi intel_lpss_pci spi_pxa2xx_platform appletb)\n```\nThen use `mkinitcpio -p linux` to load them on next boot.\n\nChange sensitivity:\nSave the two following two files to `/etc/udev/hwdb.d/`:\n\n[61-evdev-local.hwdb](https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#file-61-evdev-local-hwdb) \n[61-libinput-local.hwdb](https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb) \n\n __Note__: You can also see them in the appendix.\n \n Reboot and enjoy.\n \n### 4.2 WiFi improvements\nThere are two ways to change the bad WiFi condition and the discussion is [here](https://bugzilla.kernel.org/show_bug.cgi?id=193121).\n\n#### 4.2.1 Edit the driver\nAs [here](https://bugzilla.kernel.org/show_bug.cgi?id=193121#c25) suggests:\nUse hex editor to change the `/lib/firmware/brcm/brcmfmac43602-pcie.bin`\n```\n/lib/firmware/brcm/brcmfmac43602-pcie.bin\n  offset     0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF    0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF\n0x00000000  80f140b882f1a4b982f1b0b982f1bcb9 ..@.............   80f140b882f1a4b982f1b0b982f1bcb9 ..@.............\n0x00000010  82f1cbb982f1dab982f1e9b982f1f8b9 ................   82f1cbb982f1dab982f1e9b982f1f8b9 ................\n...\n0x0007c820! 30643a66343a33650063636f64653d58 0d:f4:3e.ccode=X   30643a66343a33650063636f64653d30 0d:f4:3e.ccode=0\n0x0007c830! 30007265677265763d31350061613267 0.regrev=15.aa2g   00007265677265763d30000061613267 ..regrev=0..aa2g\n0x0007c840  3d3700616135673d370061676267303d =7.aa5g=7.agbg0=   3d3700616135673d370061676267303d =7.aa5g=7.agbg0=\n0x0007c850  37310061676267313d37310061676267 71.agbg1=71.agbg   37310061676267313d37310061676267 71.agbg1=71.agbg\n...\n```\n**Note**: As I changed the file, I cannot connect to any WiFi networks. More Investigation required.\n\n#### 4.2.2 Change the txpower\nThis is simple (see [#10](https://bugzilla.kernel.org/show_bug.cgi?id=193121#c28))\n\n```bash\nip link set wlp2s0 up   # if not already up\niwconfig wlp2s0 txpower 10dBm\n```\n\n## 5. Appendix\n__61-evdev-local.hwdb__\n\n```\n# MacBook8,1 (2015), MacBook9,1 (2016), MacBook10,1 (2017)\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook8,1:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook9,1:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook10,1:*\n EVDEV_ABS_00=::95\n EVDEV_ABS_01=::90\n EVDEV_ABS_35=::95\n EVDEV_ABS_36=::90\n\n# MacBookPro13,* (Late 2016), MacBookPro14,* (Mid 2017)\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,1:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,2:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,1:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,2:*\n EVDEV_ABS_00=::96\n EVDEV_ABS_01=::94\n EVDEV_ABS_35=::96\n EVDEV_ABS_36=::94\n\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,3:*\nevdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,3:*\n EVDEV_ABS_00=::96\n EVDEV_ABS_01=::95\n EVDEV_ABS_35=::96\n EVDEV_ABS_36=::95\n ```\n \n __61-libinput-local.hwdb__\n \n ```\n libinput:name:*Apple SPI Touchpad*:dmi:*\n LIBINPUT_MODEL_APPLE_TOUCHPAD=1\n LIBINPUT_ATTR_KEYBOARD_INTEGRATION=internal\n LIBINPUT_ATTR_TOUCH_SIZE_RANGE=200:150\n LIBINPUT_ATTR_PALM_SIZE_THRESHOLD=1200\n```\n## 6. Credits\n\n1. [Roadrunner's gist](https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb)\n2. [Many awesome people in bugzilla](https://bugzilla.kernel.org/show_bug.cgi?id=193121)\n\n\n","slug":"2018-06-08-Install-Arch-Linux-Macbook-13","published":1,"updated":"2018-11-26T03:32:37.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wm000xrmtun7lqt5eg","content":"<p>This passage introduces a way to install Arch Linux on MacBook that releases in 2016 and 2017</p>\n<a id=\"more\"></a>\n<p><strong>Caution</strong>: You should be aware that some functions may not work properly. Do it on your own risk!</p>\n<h2 id=\"1-Overview\"><a href=\"#1-Overview\" class=\"headerlink\" title=\"1. Overview\"></a>1. Overview</h2><p><strong>What works</strong>:</p>\n<p><strong>1. On booting</strong></p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Booting</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Disks</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> HiDPI</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Accelerated Video</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Keyboard Backlight</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> USB</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Screen Brightness Control</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Sensors</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Bluetooth</li>\n</ul>\n<p><strong>2. Require modules installed</strong></p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Keyboard, touchbar and trackpad</li>\n</ul>\n<p><strong>3. Partly Working</strong></p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> WiFi (Has some improving method)</li>\n</ul>\n<p><strong>4. Not work</strong></p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Suspend/Resume</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Audio (two cards show up, and intel driver is loaded, but no sound)</li>\n</ul>\n<p><strong>Notice</strong>: You may refer to <a href=\"https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7\" target=\"_blank\" rel=\"noopener\">roadrunner’s Gist</a> for a more accurate list.</p>\n<h2 id=\"2-Preparation\"><a href=\"#2-Preparation\" class=\"headerlink\" title=\"2. Preparation\"></a>2. Preparation</h2><h3 id=\"2-1-Hardware\"><a href=\"#2-1-Hardware\" class=\"headerlink\" title=\"2.1 Hardware\"></a>2.1 Hardware</h3><p>In this installation, you  need a <strong>USB Stick more than 2 GB</strong>, a <strong>Keybord</strong>, A stable internet connection through tethering, and also, USB Hubs.</p>\n<p><strong>Notice</strong>: This guide uses phone USB tethering and you had better not directly connect to WiFi as it is unstable.</p>\n<h3 id=\"2-2-Software\"><a href=\"#2-2-Software\" class=\"headerlink\" title=\"2.2 Software\"></a>2.2 Software</h3><ol>\n<li>Download the latest <strong>ArchLinux iso</strong></li>\n<li>Burn it to your <strong>USB sticker</strong> - Use the command <code>dd</code> to achieve this.</li>\n<li><strong>rEFInd Boot Manager</strong> - Used to boot your MacBook to ArchLinux</li>\n</ol>\n<p><strong>Notice</strong>: Refer to <code>dd</code> and <code>rEFInd</code>‘s manual for more information!</p>\n<h2 id=\"3-Basic-Installation\"><a href=\"#3-Basic-Installation\" class=\"headerlink\" title=\"3. Basic Installation\"></a>3. Basic Installation</h2><h3 id=\"3-1-Booting-amp-Setting-up\"><a href=\"#3-1-Booting-amp-Setting-up\" class=\"headerlink\" title=\"3.1 Booting &amp; Setting up\"></a>3.1 Booting &amp; Setting up</h3><ol>\n<li>Insert USB Sticker and reboot your MacBook, in the rEFInd menu, select the efi option for booting ArchLinux, and enter the Installation Environment.</li>\n<li>Connect your keyboard and your phone to MacBook (your phone may need to connect to WiFi in order to not result in high Cellar fee.) </li>\n<li>Set up tethering: In your phone, click <strong>Settings</strong> &gt; <strong>Network &amp; Internet</strong> &gt; <strong>Hotspot &amp; tethering</strong> &gt; <strong>USB Tethering</strong> and turn it on.</li>\n<li>In the computer, type <code>dhcpcd</code> to set up the carrier interface and use <code>ping archlinux.org</code> to test your connection.</li>\n</ol>\n<h3 id=\"3-2-Partitioning\"><a href=\"#3-2-Partitioning\" class=\"headerlink\" title=\"3.2 Partitioning\"></a>3.2 Partitioning</h3><p><strong>Warning</strong>: Do it carefully!</p>\n<ol>\n<li>Use <code>fdisk -l</code> to check your partition table.</li>\n<li>Look for the disk you want to install ArchLinux (<code>sda</code> <code>sdb</code> …)</li>\n<li>If you could see a <code>EFI Partition</code> then please ignore the section with the mark <code>*</code></li>\n<li>Use <code>fdisk sdX</code> to dig into your disk. Enter <code>p</code> for a table.</li>\n<li>Partition your Disk. ( * You should create a partition of about <strong>500M</strong> at the start the partition table)</li>\n<li><p>* Set EFI Partition</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parted sdX</span><br><span class=\"line\"><span class=\"built_in\">set</span> 1 boot on</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Format</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfs.ext4 /dev/sdXy</span><br><span class=\"line\">mkfs.vfat /dev/sda1*</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Mount</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount /dev/sdXy /mnt</span><br><span class=\"line\">mkdir -p /mnt/boot</span><br><span class=\"line\">mount /dev/sda /mnt/boot</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"3-3-Install\"><a href=\"#3-3-Install\" class=\"headerlink\" title=\"3.3 Install\"></a>3.3 Install</h3><p>   <strong>Notice</strong>: You may need to edit <code>/etc/pacman.d/mirrorlist</code> to choose a mirror<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacstrap /mnt base base-devel grub efibootmgr wireless_tools vim</span><br><span class=\"line\">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-4-Chroot\"><a href=\"#3-4-Chroot\" class=\"headerlink\" title=\"3.4 Chroot\"></a>3.4 Chroot</h3><p>Chroot into the system</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arch-chroot /mnt</span><br></pre></td></tr></table></figure>\n<p>and follow the official <a href=\"https://wiki.archlinux.org/index.php/installation_guide\" target=\"_blank\" rel=\"noopener\">ArchLinux Instruction</a> set up your <code>hostname</code> <code>timezone</code> etc.</p>\n<h4 id=\"3-4-1-Install-GRUB-Loader\"><a href=\"#3-4-1-Install-GRUB-Loader\" class=\"headerlink\" title=\"3.4.1 Install GRUB ( Loader )\"></a>3.4.1 Install GRUB ( Loader )</h4><p>Stay in the chroot mode and use the following command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grub-install --efi-directory=/boot</span><br><span class=\"line\">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-MacBook-Specified-Configurations\"><a href=\"#4-MacBook-Specified-Configurations\" class=\"headerlink\" title=\"4. MacBook Specified Configurations\"></a>4. MacBook Specified Configurations</h2><h3 id=\"4-1-Make-Keyboard-Work\"><a href=\"#4-1-Make-Keyboard-Work\" class=\"headerlink\" title=\"4.1 Make Keyboard Work\"></a>4.1 Make Keyboard Work</h3><p>Install the Driver:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S linux-headers</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/roadrunner2/macbook12-spi-driver.git</span><br><span class=\"line\"><span class=\"built_in\">pushd</span> macbook12-spi-driver</span><br><span class=\"line\">git checkout touchbar-driver-hid-driver</span><br><span class=\"line\">sudo ln -s `<span class=\"built_in\">pwd</span>` /usr/src/applespi-0.1</span><br><span class=\"line\">sudo dkms install applespi/0.1</span><br><span class=\"line\"><span class=\"built_in\">popd</span></span><br></pre></td></tr></table></figure>\n<p>Configure mkinitcpio.conf</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/mkinitcpio.conf</span><br></pre></td></tr></table></figure>\n<p>and in the <code>modules</code> section add :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Modules = (applespi intel_lpss_pci spi_pxa2xx_platform appletb)</span><br></pre></td></tr></table></figure>\n<p>Then use <code>mkinitcpio -p linux</code> to load them on next boot.</p>\n<p>Change sensitivity:<br>Save the two following two files to <code>/etc/udev/hwdb.d/</code>:</p>\n<p><a href=\"https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#file-61-evdev-local-hwdb\" target=\"_blank\" rel=\"noopener\">61-evdev-local.hwdb</a><br><a href=\"https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb\" target=\"_blank\" rel=\"noopener\">61-libinput-local.hwdb</a> </p>\n<p> <strong>Note</strong>: You can also see them in the appendix.</p>\n<p> Reboot and enjoy.</p>\n<h3 id=\"4-2-WiFi-improvements\"><a href=\"#4-2-WiFi-improvements\" class=\"headerlink\" title=\"4.2 WiFi improvements\"></a>4.2 WiFi improvements</h3><p>There are two ways to change the bad WiFi condition and the discussion is <a href=\"https://bugzilla.kernel.org/show_bug.cgi?id=193121\" target=\"_blank\" rel=\"noopener\">here</a>.</p>\n<h4 id=\"4-2-1-Edit-the-driver\"><a href=\"#4-2-1-Edit-the-driver\" class=\"headerlink\" title=\"4.2.1 Edit the driver\"></a>4.2.1 Edit the driver</h4><p>As <a href=\"https://bugzilla.kernel.org/show_bug.cgi?id=193121#c25\" target=\"_blank\" rel=\"noopener\">here</a> suggests:<br>Use hex editor to change the <code>/lib/firmware/brcm/brcmfmac43602-pcie.bin</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/lib/firmware/brcm/brcmfmac43602-pcie.bin</span><br><span class=\"line\">  offset     0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF    0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF</span><br><span class=\"line\">0x00000000  80f140b882f1a4b982f1b0b982f1bcb9 ..@.............   80f140b882f1a4b982f1b0b982f1bcb9 ..@.............</span><br><span class=\"line\">0x00000010  82f1cbb982f1dab982f1e9b982f1f8b9 ................   82f1cbb982f1dab982f1e9b982f1f8b9 ................</span><br><span class=\"line\">...</span><br><span class=\"line\">0x0007c820! 30643a66343a33650063636f64653d58 0d:f4:3e.ccode=X   30643a66343a33650063636f64653d30 0d:f4:3e.ccode=0</span><br><span class=\"line\">0x0007c830! 30007265677265763d31350061613267 0.regrev=15.aa2g   00007265677265763d30000061613267 ..regrev=0..aa2g</span><br><span class=\"line\">0x0007c840  3d3700616135673d370061676267303d =7.aa5g=7.agbg0=   3d3700616135673d370061676267303d =7.aa5g=7.agbg0=</span><br><span class=\"line\">0x0007c850  37310061676267313d37310061676267 71.agbg1=71.agbg   37310061676267313d37310061676267 71.agbg1=71.agbg</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<p><strong>Note</strong>: As I changed the file, I cannot connect to any WiFi networks. More Investigation required.</p>\n<h4 id=\"4-2-2-Change-the-txpower\"><a href=\"#4-2-2-Change-the-txpower\" class=\"headerlink\" title=\"4.2.2 Change the txpower\"></a>4.2.2 Change the txpower</h4><p>This is simple (see <a href=\"https://bugzilla.kernel.org/show_bug.cgi?id=193121#c28\" target=\"_blank\" rel=\"noopener\">#10</a>)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip link <span class=\"built_in\">set</span> wlp2s0 up   <span class=\"comment\"># if not already up</span></span><br><span class=\"line\">iwconfig wlp2s0 txpower 10dBm</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Appendix\"><a href=\"#5-Appendix\" class=\"headerlink\" title=\"5. Appendix\"></a>5. Appendix</h2><p><strong>61-evdev-local.hwdb</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># MacBook8,1 (2015), MacBook9,1 (2016), MacBook10,1 (2017)</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook8,1:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook9,1:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook10,1:*</span><br><span class=\"line\"> EVDEV_ABS_00=::95</span><br><span class=\"line\"> EVDEV_ABS_01=::90</span><br><span class=\"line\"> EVDEV_ABS_35=::95</span><br><span class=\"line\"> EVDEV_ABS_36=::90</span><br><span class=\"line\"></span><br><span class=\"line\"># MacBookPro13,* (Late 2016), MacBookPro14,* (Mid 2017)</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,1:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,2:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,1:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,2:*</span><br><span class=\"line\"> EVDEV_ABS_00=::96</span><br><span class=\"line\"> EVDEV_ABS_01=::94</span><br><span class=\"line\"> EVDEV_ABS_35=::96</span><br><span class=\"line\"> EVDEV_ABS_36=::94</span><br><span class=\"line\"></span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,3:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,3:*</span><br><span class=\"line\"> EVDEV_ABS_00=::96</span><br><span class=\"line\"> EVDEV_ABS_01=::95</span><br><span class=\"line\"> EVDEV_ABS_35=::96</span><br><span class=\"line\"> EVDEV_ABS_36=::95</span><br></pre></td></tr></table></figure>\n<p> <strong>61-libinput-local.hwdb</strong></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">libinput:name:*Apple SPI Touchpad*:dmi:*</span><br><span class=\"line\">LIBINPUT_MODEL_APPLE_TOUCHPAD=1</span><br><span class=\"line\">LIBINPUT_ATTR_KEYBOARD_INTEGRATION=internal</span><br><span class=\"line\">LIBINPUT_ATTR_TOUCH_SIZE_RANGE=200:150</span><br><span class=\"line\">LIBINPUT_ATTR_PALM_SIZE_THRESHOLD=1200</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-Credits\"><a href=\"#6-Credits\" class=\"headerlink\" title=\"6. Credits\"></a>6. Credits</h2><ol>\n<li><a href=\"https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb\" target=\"_blank\" rel=\"noopener\">Roadrunner’s gist</a></li>\n<li><a href=\"https://bugzilla.kernel.org/show_bug.cgi?id=193121\" target=\"_blank\" rel=\"noopener\">Many awesome people in bugzilla</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>This passage introduces a way to install Arch Linux on MacBook that releases in 2016 and 2017</p>","more":"<p><strong>Caution</strong>: You should be aware that some functions may not work properly. Do it on your own risk!</p>\n<h2 id=\"1-Overview\"><a href=\"#1-Overview\" class=\"headerlink\" title=\"1. Overview\"></a>1. Overview</h2><p><strong>What works</strong>:</p>\n<p><strong>1. On booting</strong></p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Booting</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Disks</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> HiDPI</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Accelerated Video</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Keyboard Backlight</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> USB</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Screen Brightness Control</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Sensors</li>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Bluetooth</li>\n</ul>\n<p><strong>2. Require modules installed</strong></p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\" checked> Keyboard, touchbar and trackpad</li>\n</ul>\n<p><strong>3. Partly Working</strong></p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> WiFi (Has some improving method)</li>\n</ul>\n<p><strong>4. Not work</strong></p>\n<ul>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Suspend/Resume</li>\n<li style=\"list-style: none\"><input type=\"checkbox\"> Audio (two cards show up, and intel driver is loaded, but no sound)</li>\n</ul>\n<p><strong>Notice</strong>: You may refer to <a href=\"https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7\" target=\"_blank\" rel=\"noopener\">roadrunner’s Gist</a> for a more accurate list.</p>\n<h2 id=\"2-Preparation\"><a href=\"#2-Preparation\" class=\"headerlink\" title=\"2. Preparation\"></a>2. Preparation</h2><h3 id=\"2-1-Hardware\"><a href=\"#2-1-Hardware\" class=\"headerlink\" title=\"2.1 Hardware\"></a>2.1 Hardware</h3><p>In this installation, you  need a <strong>USB Stick more than 2 GB</strong>, a <strong>Keybord</strong>, A stable internet connection through tethering, and also, USB Hubs.</p>\n<p><strong>Notice</strong>: This guide uses phone USB tethering and you had better not directly connect to WiFi as it is unstable.</p>\n<h3 id=\"2-2-Software\"><a href=\"#2-2-Software\" class=\"headerlink\" title=\"2.2 Software\"></a>2.2 Software</h3><ol>\n<li>Download the latest <strong>ArchLinux iso</strong></li>\n<li>Burn it to your <strong>USB sticker</strong> - Use the command <code>dd</code> to achieve this.</li>\n<li><strong>rEFInd Boot Manager</strong> - Used to boot your MacBook to ArchLinux</li>\n</ol>\n<p><strong>Notice</strong>: Refer to <code>dd</code> and <code>rEFInd</code>‘s manual for more information!</p>\n<h2 id=\"3-Basic-Installation\"><a href=\"#3-Basic-Installation\" class=\"headerlink\" title=\"3. Basic Installation\"></a>3. Basic Installation</h2><h3 id=\"3-1-Booting-amp-Setting-up\"><a href=\"#3-1-Booting-amp-Setting-up\" class=\"headerlink\" title=\"3.1 Booting &amp; Setting up\"></a>3.1 Booting &amp; Setting up</h3><ol>\n<li>Insert USB Sticker and reboot your MacBook, in the rEFInd menu, select the efi option for booting ArchLinux, and enter the Installation Environment.</li>\n<li>Connect your keyboard and your phone to MacBook (your phone may need to connect to WiFi in order to not result in high Cellar fee.) </li>\n<li>Set up tethering: In your phone, click <strong>Settings</strong> &gt; <strong>Network &amp; Internet</strong> &gt; <strong>Hotspot &amp; tethering</strong> &gt; <strong>USB Tethering</strong> and turn it on.</li>\n<li>In the computer, type <code>dhcpcd</code> to set up the carrier interface and use <code>ping archlinux.org</code> to test your connection.</li>\n</ol>\n<h3 id=\"3-2-Partitioning\"><a href=\"#3-2-Partitioning\" class=\"headerlink\" title=\"3.2 Partitioning\"></a>3.2 Partitioning</h3><p><strong>Warning</strong>: Do it carefully!</p>\n<ol>\n<li>Use <code>fdisk -l</code> to check your partition table.</li>\n<li>Look for the disk you want to install ArchLinux (<code>sda</code> <code>sdb</code> …)</li>\n<li>If you could see a <code>EFI Partition</code> then please ignore the section with the mark <code>*</code></li>\n<li>Use <code>fdisk sdX</code> to dig into your disk. Enter <code>p</code> for a table.</li>\n<li>Partition your Disk. ( * You should create a partition of about <strong>500M</strong> at the start the partition table)</li>\n<li><p>* Set EFI Partition</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parted sdX</span><br><span class=\"line\"><span class=\"built_in\">set</span> 1 boot on</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Format</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkfs.ext4 /dev/sdXy</span><br><span class=\"line\">mkfs.vfat /dev/sda1*</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Mount</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount /dev/sdXy /mnt</span><br><span class=\"line\">mkdir -p /mnt/boot</span><br><span class=\"line\">mount /dev/sda /mnt/boot</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"3-3-Install\"><a href=\"#3-3-Install\" class=\"headerlink\" title=\"3.3 Install\"></a>3.3 Install</h3><p>   <strong>Notice</strong>: You may need to edit <code>/etc/pacman.d/mirrorlist</code> to choose a mirror<br>   <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacstrap /mnt base base-devel grub efibootmgr wireless_tools vim</span><br><span class=\"line\">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-4-Chroot\"><a href=\"#3-4-Chroot\" class=\"headerlink\" title=\"3.4 Chroot\"></a>3.4 Chroot</h3><p>Chroot into the system</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arch-chroot /mnt</span><br></pre></td></tr></table></figure>\n<p>and follow the official <a href=\"https://wiki.archlinux.org/index.php/installation_guide\" target=\"_blank\" rel=\"noopener\">ArchLinux Instruction</a> set up your <code>hostname</code> <code>timezone</code> etc.</p>\n<h4 id=\"3-4-1-Install-GRUB-Loader\"><a href=\"#3-4-1-Install-GRUB-Loader\" class=\"headerlink\" title=\"3.4.1 Install GRUB ( Loader )\"></a>3.4.1 Install GRUB ( Loader )</h4><p>Stay in the chroot mode and use the following command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grub-install --efi-directory=/boot</span><br><span class=\"line\">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-MacBook-Specified-Configurations\"><a href=\"#4-MacBook-Specified-Configurations\" class=\"headerlink\" title=\"4. MacBook Specified Configurations\"></a>4. MacBook Specified Configurations</h2><h3 id=\"4-1-Make-Keyboard-Work\"><a href=\"#4-1-Make-Keyboard-Work\" class=\"headerlink\" title=\"4.1 Make Keyboard Work\"></a>4.1 Make Keyboard Work</h3><p>Install the Driver:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S linux-headers</span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/roadrunner2/macbook12-spi-driver.git</span><br><span class=\"line\"><span class=\"built_in\">pushd</span> macbook12-spi-driver</span><br><span class=\"line\">git checkout touchbar-driver-hid-driver</span><br><span class=\"line\">sudo ln -s `<span class=\"built_in\">pwd</span>` /usr/src/applespi-0.1</span><br><span class=\"line\">sudo dkms install applespi/0.1</span><br><span class=\"line\"><span class=\"built_in\">popd</span></span><br></pre></td></tr></table></figure>\n<p>Configure mkinitcpio.conf</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nano /etc/mkinitcpio.conf</span><br></pre></td></tr></table></figure>\n<p>and in the <code>modules</code> section add :</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Modules = (applespi intel_lpss_pci spi_pxa2xx_platform appletb)</span><br></pre></td></tr></table></figure>\n<p>Then use <code>mkinitcpio -p linux</code> to load them on next boot.</p>\n<p>Change sensitivity:<br>Save the two following two files to <code>/etc/udev/hwdb.d/</code>:</p>\n<p><a href=\"https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#file-61-evdev-local-hwdb\" target=\"_blank\" rel=\"noopener\">61-evdev-local.hwdb</a><br><a href=\"https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb\" target=\"_blank\" rel=\"noopener\">61-libinput-local.hwdb</a> </p>\n<p> <strong>Note</strong>: You can also see them in the appendix.</p>\n<p> Reboot and enjoy.</p>\n<h3 id=\"4-2-WiFi-improvements\"><a href=\"#4-2-WiFi-improvements\" class=\"headerlink\" title=\"4.2 WiFi improvements\"></a>4.2 WiFi improvements</h3><p>There are two ways to change the bad WiFi condition and the discussion is <a href=\"https://bugzilla.kernel.org/show_bug.cgi?id=193121\" target=\"_blank\" rel=\"noopener\">here</a>.</p>\n<h4 id=\"4-2-1-Edit-the-driver\"><a href=\"#4-2-1-Edit-the-driver\" class=\"headerlink\" title=\"4.2.1 Edit the driver\"></a>4.2.1 Edit the driver</h4><p>As <a href=\"https://bugzilla.kernel.org/show_bug.cgi?id=193121#c25\" target=\"_blank\" rel=\"noopener\">here</a> suggests:<br>Use hex editor to change the <code>/lib/firmware/brcm/brcmfmac43602-pcie.bin</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/lib/firmware/brcm/brcmfmac43602-pcie.bin</span><br><span class=\"line\">  offset     0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF    0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF</span><br><span class=\"line\">0x00000000  80f140b882f1a4b982f1b0b982f1bcb9 ..@.............   80f140b882f1a4b982f1b0b982f1bcb9 ..@.............</span><br><span class=\"line\">0x00000010  82f1cbb982f1dab982f1e9b982f1f8b9 ................   82f1cbb982f1dab982f1e9b982f1f8b9 ................</span><br><span class=\"line\">...</span><br><span class=\"line\">0x0007c820! 30643a66343a33650063636f64653d58 0d:f4:3e.ccode=X   30643a66343a33650063636f64653d30 0d:f4:3e.ccode=0</span><br><span class=\"line\">0x0007c830! 30007265677265763d31350061613267 0.regrev=15.aa2g   00007265677265763d30000061613267 ..regrev=0..aa2g</span><br><span class=\"line\">0x0007c840  3d3700616135673d370061676267303d =7.aa5g=7.agbg0=   3d3700616135673d370061676267303d =7.aa5g=7.agbg0=</span><br><span class=\"line\">0x0007c850  37310061676267313d37310061676267 71.agbg1=71.agbg   37310061676267313d37310061676267 71.agbg1=71.agbg</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure></p>\n<p><strong>Note</strong>: As I changed the file, I cannot connect to any WiFi networks. More Investigation required.</p>\n<h4 id=\"4-2-2-Change-the-txpower\"><a href=\"#4-2-2-Change-the-txpower\" class=\"headerlink\" title=\"4.2.2 Change the txpower\"></a>4.2.2 Change the txpower</h4><p>This is simple (see <a href=\"https://bugzilla.kernel.org/show_bug.cgi?id=193121#c28\" target=\"_blank\" rel=\"noopener\">#10</a>)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip link <span class=\"built_in\">set</span> wlp2s0 up   <span class=\"comment\"># if not already up</span></span><br><span class=\"line\">iwconfig wlp2s0 txpower 10dBm</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Appendix\"><a href=\"#5-Appendix\" class=\"headerlink\" title=\"5. Appendix\"></a>5. Appendix</h2><p><strong>61-evdev-local.hwdb</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># MacBook8,1 (2015), MacBook9,1 (2016), MacBook10,1 (2017)</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook8,1:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook9,1:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook10,1:*</span><br><span class=\"line\"> EVDEV_ABS_00=::95</span><br><span class=\"line\"> EVDEV_ABS_01=::90</span><br><span class=\"line\"> EVDEV_ABS_35=::95</span><br><span class=\"line\"> EVDEV_ABS_36=::90</span><br><span class=\"line\"></span><br><span class=\"line\"># MacBookPro13,* (Late 2016), MacBookPro14,* (Mid 2017)</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,1:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,2:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,1:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,2:*</span><br><span class=\"line\"> EVDEV_ABS_00=::96</span><br><span class=\"line\"> EVDEV_ABS_01=::94</span><br><span class=\"line\"> EVDEV_ABS_35=::96</span><br><span class=\"line\"> EVDEV_ABS_36=::94</span><br><span class=\"line\"></span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,3:*</span><br><span class=\"line\">evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,3:*</span><br><span class=\"line\"> EVDEV_ABS_00=::96</span><br><span class=\"line\"> EVDEV_ABS_01=::95</span><br><span class=\"line\"> EVDEV_ABS_35=::96</span><br><span class=\"line\"> EVDEV_ABS_36=::95</span><br></pre></td></tr></table></figure>\n<p> <strong>61-libinput-local.hwdb</strong></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">libinput:name:*Apple SPI Touchpad*:dmi:*</span><br><span class=\"line\">LIBINPUT_MODEL_APPLE_TOUCHPAD=1</span><br><span class=\"line\">LIBINPUT_ATTR_KEYBOARD_INTEGRATION=internal</span><br><span class=\"line\">LIBINPUT_ATTR_TOUCH_SIZE_RANGE=200:150</span><br><span class=\"line\">LIBINPUT_ATTR_PALM_SIZE_THRESHOLD=1200</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-Credits\"><a href=\"#6-Credits\" class=\"headerlink\" title=\"6. Credits\"></a>6. Credits</h2><ol>\n<li><a href=\"https://gist.github.com/roadrunner2/1289542a748d9a104e7baec6a92f9cd7#61-libinput-local.hwdb\" target=\"_blank\" rel=\"noopener\">Roadrunner’s gist</a></li>\n<li><a href=\"https://bugzilla.kernel.org/show_bug.cgi?id=193121\" target=\"_blank\" rel=\"noopener\">Many awesome people in bugzilla</a></li>\n</ol>"},{"title":"OpenWrt 自动更新设置和屏蔽广告","author":"OCD","date":"2018-09-22T07:55:00.000Z","_content":"\n## OpenWrt 路由器自动更新国内重要网站名单\n****\n\n登陆路由器后:\n\n```\nroot@OpenWrt:~# cd /usr/bin\nroot@OpenWrt:~# touch chinalist\nroot@OpenWrt:~# chmod +x chinalist\nroot@OpenWrt:~# vi chinalist\n```\n\n/usr/bin/chinalist:\n\n```\n#!/bin/sh                                                                                                                                                               \n\nwget -4 --no-check-certificate -O /etc/dnsmasq.d/accelerated-domains.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/accelerated-domains.china.conf\nwget -4 --no-check-certificate -O /etc/dnsmasq.d/bogus-nxdomain.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/bogus-nxdomain.china.conf\n```\n\n## OpenWrt 路由器自动屏蔽广告\n****\n\n/etc/dnsmasq.d 下有个 blockad.conf 文件, 内容如下:\n\n```\nserver=/.mobads.baidu.com/127.0.0.0\nserver=/.mobads-logs.baidu.com/127.0.0.0\nserver=/.media.admob.com/127.0.0.0\n...\n```\n\n意思是 /mobads.baidu.com 的域名解析转发到 127.0.0.0, 这个地址不具备域名解析的功能, 于是就达到了屏蔽广告的功能.\n\n运行命令:\n\n```\nroot@OpenWrt:~# cd /usr/bin\nroot@OpenWrt:~# touch blockad\nroot@OpenWrt:~# chmod +x blockad\nroot@OpenWrt:~# vi blockad\n```\n\n/usr/bin/blockad:\n\n```\n#!/bin/sh\n\n# Author:    https://github.com/softwaredownload/openwrt-fanqiang\n# Date:        2016-01-09\n\nTMP_HOSTS=/tmp/block.hosts.unsorted\nHOSTS=/etc/dnsmasq.d/blockad.conf\n\n# remove any old TMP_HOSTS that might have stuck around\nrm ${TMP_HOSTS} 2> /dev/null\n\nfor URL in \\\n    \"https://raw.githubusercontent.com/vokins/simpleu/master/hosts\" \\\n    \"http://adaway.org/hosts.txt\"\ndo\n    # filter out comment lines, empty lines, localhost... \n    # remove trailing comments, space( ,tab), empty line\n    # replace line to dnsmasq format\n    # remove carriage returns\n    # append the results to TMP_HOSTS\n    wget -4 --no-check-certificate -qO- \"${URL}\" | grep -v -e \"^#\" -e \"^\\s*$\" -e \"localhost\" -e \"^;\" -e \"^@\" -e \"^:\" -e \"^[a-zA-Z]\" \\\n    | sed -E -e \"s/#.*$//\" -e \"s/[[:space:]]*//g\" -e \"/^$/d\" \\\n    -e \"s/^127.0.0.1/server=\\/./\" -e \"s/0.0.0.0/server=\\/./\" -e \"/^[0-9].*$/d\" -e \"s/$/\\/127.0.0.0/\" \\\n    | tr -d \"\\r\" >> ${TMP_HOSTS}\n\ndone\n\n# remove duplicate hosts and save the real hosts file\nsort ${TMP_HOSTS} | uniq > ${HOSTS}\n\nrm ${TMP_HOSTS} 2> /dev/null\n```\n\nOpenWrt 自动生成广告屏蔽列表说明:\n\n第一个 URL 主要用于国内, 下面几个 URL 是屏蔽国外广告\n运行上面命令产生的广告屏蔽列表比较长, 如果路由器性能较差, dnsmasq 匹配域名负荷会太大, 可以用下面这个简化版的文件, 不要用上面的脚本:\n\n> https://github.com/softwaredownload/openwrt-fanqiang/blob/master/openwrt/dir505/etc/dnsmasq.d/blockad.conf\n\n如果dnsmasq超负荷工作，可能会失去响应，导致打不开网页，这时需要登录路由器运行命令：\n\n`/etc/init.d/dnsmasq restart`\n\n所以，还是尽量用性能好点的路由器吧\n路由器性能比电脑差很多，如果屏蔽列表很长，那么短时间内快速打开数个网页就可能导致dnsmasq失去响应。最好是看完一个网页就关闭一个，再打开新的网页。\n在路由器里屏蔽的好处是所有接入路由器的设备都全部起作用。\n通常的做法，在路由器里屏蔽部分域名，然后在电脑里设置更广泛、精确的屏蔽，主要是设置host文件屏蔽和浏览器插件屏蔽。\n浏览器插件屏蔽，可以装这些Chrome浏览器插件：uBlock Origin，ADfree.Player.Online。其中uBlock Origin的作用和Adblock Plus类似，但是设置更加丰富。\n\n## 计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks\n***\n\n```\nroot@OpenWrt:~# crontab -e\n```\n\n输入以下内容:\n\n```\n*/30 * * * * isfound=$(ps | grep \"ss-redir\" | grep -v \"grep\"); if [ -z \"$isfound\" ]; then echo \"$(date): restart ss-redir...\">>/tmp/log/ss-monitor.log && /etc/init.d/shadowsocks restart; fi\n* 12 * * * /usr/bin/chinalist\n* 12 * * * /usr/bin/blockad\n```\n\nOpenWrt计划任务说明：\n\n* 每半小时检查shadowsocks-libev 客户端，如果退出就自动重启\n* 每天中午12点运行chinalist\n* 每天中午12点运行blockad\n\n2014-09-24版的dir505, wr2543预编译固件是启用了计划任务的，这会有潜在的不确定性，如果更新时下载的文件如accelerated-domains.china.conf存在错误，导致dnsmasq无法启动，翻墙功能自然失效。\n\n如果你启用了计划任务，某一天突然不能翻墙了，这时设置客户端的IP地址为和路由器同网段，登录路由器，用ps命令查看dnsmasq进程是否启动了，如果没有启动，就重刷固件或者用[点击跳转](https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d “https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d”)\n下面的文件代替 路由器里/etc/dnsmasq.d/下的文件。\n\n## 附录：计划任务定时关闭路由器OpenWrt\n***\n\n人类的本性是目光短浅，玩得一时兴趣就会忘记定时休息的重要性。解决办法是在路由器里设置计划任务，禁止夜里某个时间段里使用路由器。下面的例子中，每20分钟检测一次，如果迟于20点30或者早于7点就自动关闭OpenWrt。这对小孩子特别有用，现在很多孩子使用电子设备上瘾，一个人睡的话甚至半夜在被窝里偷偷上网，现在好了，除非孩子强大到会登陆路由器修改设置，否则半夜重启路由器都无法上网了。\n\n```\n*/20 * * * * TIME=$(date +\"%H%M\"); if [ $TIME -ge 2030 ] || [ $TIME -le 700 ]; then poweroff; fi\n```\n\n## 参考:\n\n> https://github.com/vokins/simpleu\n> https://github.com/jjack/openwrt-adblock\n> https://github.com/felixonmars/dnsmasq-china-list\n> install-shadowsocks-on-hg255d-openwrt-and-config-nat\n> https://pcjetzt.com/vpn-test-besten-vpn-anbieter-im-vergleich/\n","source":"_posts/2018-9-22-OpenWrt-auto-update-and-adblock.md","raw":"---\ntitle: OpenWrt 自动更新设置和屏蔽广告\nauthor: OCD\ntags:\n  - 广告过滤\ncategories:\n  - 路由器\ndate: 2018-09-22 15:55:00\n---\n\n## OpenWrt 路由器自动更新国内重要网站名单\n****\n\n登陆路由器后:\n\n```\nroot@OpenWrt:~# cd /usr/bin\nroot@OpenWrt:~# touch chinalist\nroot@OpenWrt:~# chmod +x chinalist\nroot@OpenWrt:~# vi chinalist\n```\n\n/usr/bin/chinalist:\n\n```\n#!/bin/sh                                                                                                                                                               \n\nwget -4 --no-check-certificate -O /etc/dnsmasq.d/accelerated-domains.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/accelerated-domains.china.conf\nwget -4 --no-check-certificate -O /etc/dnsmasq.d/bogus-nxdomain.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/bogus-nxdomain.china.conf\n```\n\n## OpenWrt 路由器自动屏蔽广告\n****\n\n/etc/dnsmasq.d 下有个 blockad.conf 文件, 内容如下:\n\n```\nserver=/.mobads.baidu.com/127.0.0.0\nserver=/.mobads-logs.baidu.com/127.0.0.0\nserver=/.media.admob.com/127.0.0.0\n...\n```\n\n意思是 /mobads.baidu.com 的域名解析转发到 127.0.0.0, 这个地址不具备域名解析的功能, 于是就达到了屏蔽广告的功能.\n\n运行命令:\n\n```\nroot@OpenWrt:~# cd /usr/bin\nroot@OpenWrt:~# touch blockad\nroot@OpenWrt:~# chmod +x blockad\nroot@OpenWrt:~# vi blockad\n```\n\n/usr/bin/blockad:\n\n```\n#!/bin/sh\n\n# Author:    https://github.com/softwaredownload/openwrt-fanqiang\n# Date:        2016-01-09\n\nTMP_HOSTS=/tmp/block.hosts.unsorted\nHOSTS=/etc/dnsmasq.d/blockad.conf\n\n# remove any old TMP_HOSTS that might have stuck around\nrm ${TMP_HOSTS} 2> /dev/null\n\nfor URL in \\\n    \"https://raw.githubusercontent.com/vokins/simpleu/master/hosts\" \\\n    \"http://adaway.org/hosts.txt\"\ndo\n    # filter out comment lines, empty lines, localhost... \n    # remove trailing comments, space( ,tab), empty line\n    # replace line to dnsmasq format\n    # remove carriage returns\n    # append the results to TMP_HOSTS\n    wget -4 --no-check-certificate -qO- \"${URL}\" | grep -v -e \"^#\" -e \"^\\s*$\" -e \"localhost\" -e \"^;\" -e \"^@\" -e \"^:\" -e \"^[a-zA-Z]\" \\\n    | sed -E -e \"s/#.*$//\" -e \"s/[[:space:]]*//g\" -e \"/^$/d\" \\\n    -e \"s/^127.0.0.1/server=\\/./\" -e \"s/0.0.0.0/server=\\/./\" -e \"/^[0-9].*$/d\" -e \"s/$/\\/127.0.0.0/\" \\\n    | tr -d \"\\r\" >> ${TMP_HOSTS}\n\ndone\n\n# remove duplicate hosts and save the real hosts file\nsort ${TMP_HOSTS} | uniq > ${HOSTS}\n\nrm ${TMP_HOSTS} 2> /dev/null\n```\n\nOpenWrt 自动生成广告屏蔽列表说明:\n\n第一个 URL 主要用于国内, 下面几个 URL 是屏蔽国外广告\n运行上面命令产生的广告屏蔽列表比较长, 如果路由器性能较差, dnsmasq 匹配域名负荷会太大, 可以用下面这个简化版的文件, 不要用上面的脚本:\n\n> https://github.com/softwaredownload/openwrt-fanqiang/blob/master/openwrt/dir505/etc/dnsmasq.d/blockad.conf\n\n如果dnsmasq超负荷工作，可能会失去响应，导致打不开网页，这时需要登录路由器运行命令：\n\n`/etc/init.d/dnsmasq restart`\n\n所以，还是尽量用性能好点的路由器吧\n路由器性能比电脑差很多，如果屏蔽列表很长，那么短时间内快速打开数个网页就可能导致dnsmasq失去响应。最好是看完一个网页就关闭一个，再打开新的网页。\n在路由器里屏蔽的好处是所有接入路由器的设备都全部起作用。\n通常的做法，在路由器里屏蔽部分域名，然后在电脑里设置更广泛、精确的屏蔽，主要是设置host文件屏蔽和浏览器插件屏蔽。\n浏览器插件屏蔽，可以装这些Chrome浏览器插件：uBlock Origin，ADfree.Player.Online。其中uBlock Origin的作用和Adblock Plus类似，但是设置更加丰富。\n\n## 计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks\n***\n\n```\nroot@OpenWrt:~# crontab -e\n```\n\n输入以下内容:\n\n```\n*/30 * * * * isfound=$(ps | grep \"ss-redir\" | grep -v \"grep\"); if [ -z \"$isfound\" ]; then echo \"$(date): restart ss-redir...\">>/tmp/log/ss-monitor.log && /etc/init.d/shadowsocks restart; fi\n* 12 * * * /usr/bin/chinalist\n* 12 * * * /usr/bin/blockad\n```\n\nOpenWrt计划任务说明：\n\n* 每半小时检查shadowsocks-libev 客户端，如果退出就自动重启\n* 每天中午12点运行chinalist\n* 每天中午12点运行blockad\n\n2014-09-24版的dir505, wr2543预编译固件是启用了计划任务的，这会有潜在的不确定性，如果更新时下载的文件如accelerated-domains.china.conf存在错误，导致dnsmasq无法启动，翻墙功能自然失效。\n\n如果你启用了计划任务，某一天突然不能翻墙了，这时设置客户端的IP地址为和路由器同网段，登录路由器，用ps命令查看dnsmasq进程是否启动了，如果没有启动，就重刷固件或者用[点击跳转](https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d “https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d”)\n下面的文件代替 路由器里/etc/dnsmasq.d/下的文件。\n\n## 附录：计划任务定时关闭路由器OpenWrt\n***\n\n人类的本性是目光短浅，玩得一时兴趣就会忘记定时休息的重要性。解决办法是在路由器里设置计划任务，禁止夜里某个时间段里使用路由器。下面的例子中，每20分钟检测一次，如果迟于20点30或者早于7点就自动关闭OpenWrt。这对小孩子特别有用，现在很多孩子使用电子设备上瘾，一个人睡的话甚至半夜在被窝里偷偷上网，现在好了，除非孩子强大到会登陆路由器修改设置，否则半夜重启路由器都无法上网了。\n\n```\n*/20 * * * * TIME=$(date +\"%H%M\"); if [ $TIME -ge 2030 ] || [ $TIME -le 700 ]; then poweroff; fi\n```\n\n## 参考:\n\n> https://github.com/vokins/simpleu\n> https://github.com/jjack/openwrt-adblock\n> https://github.com/felixonmars/dnsmasq-china-list\n> install-shadowsocks-on-hg255d-openwrt-and-config-nat\n> https://pcjetzt.com/vpn-test-besten-vpn-anbieter-im-vergleich/\n","slug":"2018-9-22-OpenWrt-auto-update-and-adblock","published":1,"updated":"2018-11-26T03:32:37.621Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wn0010rmtu4922c2f9","content":"<h2 id=\"OpenWrt-路由器自动更新国内重要网站名单\"><a href=\"#OpenWrt-路由器自动更新国内重要网站名单\" class=\"headerlink\" title=\"OpenWrt 路由器自动更新国内重要网站名单\"></a>OpenWrt 路由器自动更新国内重要网站名单</h2><hr>\n<p>登陆路由器后:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@OpenWrt:~# cd /usr/bin</span><br><span class=\"line\">root@OpenWrt:~# touch chinalist</span><br><span class=\"line\">root@OpenWrt:~# chmod +x chinalist</span><br><span class=\"line\">root@OpenWrt:~# vi chinalist</span><br></pre></td></tr></table></figure>\n<p>/usr/bin/chinalist:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh                                                                                                                                                               </span><br><span class=\"line\"></span><br><span class=\"line\">wget -4 --no-check-certificate -O /etc/dnsmasq.d/accelerated-domains.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/accelerated-domains.china.conf</span><br><span class=\"line\">wget -4 --no-check-certificate -O /etc/dnsmasq.d/bogus-nxdomain.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/bogus-nxdomain.china.conf</span><br></pre></td></tr></table></figure>\n<h2 id=\"OpenWrt-路由器自动屏蔽广告\"><a href=\"#OpenWrt-路由器自动屏蔽广告\" class=\"headerlink\" title=\"OpenWrt 路由器自动屏蔽广告\"></a>OpenWrt 路由器自动屏蔽广告</h2><hr>\n<p>/etc/dnsmasq.d 下有个 blockad.conf 文件, 内容如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server=/.mobads.baidu.com/127.0.0.0</span><br><span class=\"line\">server=/.mobads-logs.baidu.com/127.0.0.0</span><br><span class=\"line\">server=/.media.admob.com/127.0.0.0</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>意思是 /mobads.baidu.com 的域名解析转发到 127.0.0.0, 这个地址不具备域名解析的功能, 于是就达到了屏蔽广告的功能.</p>\n<p>运行命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@OpenWrt:~# cd /usr/bin</span><br><span class=\"line\">root@OpenWrt:~# touch blockad</span><br><span class=\"line\">root@OpenWrt:~# chmod +x blockad</span><br><span class=\"line\">root@OpenWrt:~# vi blockad</span><br></pre></td></tr></table></figure>\n<p>/usr/bin/blockad:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\"># Author:    https://github.com/softwaredownload/openwrt-fanqiang</span><br><span class=\"line\"># Date:        2016-01-09</span><br><span class=\"line\"></span><br><span class=\"line\">TMP_HOSTS=/tmp/block.hosts.unsorted</span><br><span class=\"line\">HOSTS=/etc/dnsmasq.d/blockad.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># remove any old TMP_HOSTS that might have stuck around</span><br><span class=\"line\">rm $&#123;TMP_HOSTS&#125; 2&gt; /dev/null</span><br><span class=\"line\"></span><br><span class=\"line\">for URL in \\</span><br><span class=\"line\">    &quot;https://raw.githubusercontent.com/vokins/simpleu/master/hosts&quot; \\</span><br><span class=\"line\">    &quot;http://adaway.org/hosts.txt&quot;</span><br><span class=\"line\">do</span><br><span class=\"line\">    # filter out comment lines, empty lines, localhost... </span><br><span class=\"line\">    # remove trailing comments, space( ,tab), empty line</span><br><span class=\"line\">    # replace line to dnsmasq format</span><br><span class=\"line\">    # remove carriage returns</span><br><span class=\"line\">    # append the results to TMP_HOSTS</span><br><span class=\"line\">    wget -4 --no-check-certificate -qO- &quot;$&#123;URL&#125;&quot; | grep -v -e &quot;^#&quot; -e &quot;^\\s*$&quot; -e &quot;localhost&quot; -e &quot;^;&quot; -e &quot;^@&quot; -e &quot;^:&quot; -e &quot;^[a-zA-Z]&quot; \\</span><br><span class=\"line\">    | sed -E -e &quot;s/#.*$//&quot; -e &quot;s/[[:space:]]*//g&quot; -e &quot;/^$/d&quot; \\</span><br><span class=\"line\">    -e &quot;s/^127.0.0.1/server=\\/./&quot; -e &quot;s/0.0.0.0/server=\\/./&quot; -e &quot;/^[0-9].*$/d&quot; -e &quot;s/$/\\/127.0.0.0/&quot; \\</span><br><span class=\"line\">    | tr -d &quot;\\r&quot; &gt;&gt; $&#123;TMP_HOSTS&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\"># remove duplicate hosts and save the real hosts file</span><br><span class=\"line\">sort $&#123;TMP_HOSTS&#125; | uniq &gt; $&#123;HOSTS&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">rm $&#123;TMP_HOSTS&#125; 2&gt; /dev/null</span><br></pre></td></tr></table></figure>\n<p>OpenWrt 自动生成广告屏蔽列表说明:</p>\n<p>第一个 URL 主要用于国内, 下面几个 URL 是屏蔽国外广告<br>运行上面命令产生的广告屏蔽列表比较长, 如果路由器性能较差, dnsmasq 匹配域名负荷会太大, 可以用下面这个简化版的文件, 不要用上面的脚本:</p>\n<blockquote>\n<p><a href=\"https://github.com/softwaredownload/openwrt-fanqiang/blob/master/openwrt/dir505/etc/dnsmasq.d/blockad.conf\" target=\"_blank\" rel=\"noopener\">https://github.com/softwaredownload/openwrt-fanqiang/blob/master/openwrt/dir505/etc/dnsmasq.d/blockad.conf</a></p>\n</blockquote>\n<p>如果dnsmasq超负荷工作，可能会失去响应，导致打不开网页，这时需要登录路由器运行命令：</p>\n<p><code>/etc/init.d/dnsmasq restart</code></p>\n<p>所以，还是尽量用性能好点的路由器吧<br>路由器性能比电脑差很多，如果屏蔽列表很长，那么短时间内快速打开数个网页就可能导致dnsmasq失去响应。最好是看完一个网页就关闭一个，再打开新的网页。<br>在路由器里屏蔽的好处是所有接入路由器的设备都全部起作用。<br>通常的做法，在路由器里屏蔽部分域名，然后在电脑里设置更广泛、精确的屏蔽，主要是设置host文件屏蔽和浏览器插件屏蔽。<br>浏览器插件屏蔽，可以装这些Chrome浏览器插件：uBlock Origin，ADfree.Player.Online。其中uBlock Origin的作用和Adblock Plus类似，但是设置更加丰富。</p>\n<h2 id=\"计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks\"><a href=\"#计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks\" class=\"headerlink\" title=\"计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks\"></a>计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks</h2><hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@OpenWrt:~# crontab -e</span><br></pre></td></tr></table></figure>\n<p>输入以下内容:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/30 * * * * isfound=$(ps | grep &quot;ss-redir&quot; | grep -v &quot;grep&quot;); if [ -z &quot;$isfound&quot; ]; then echo &quot;$(date): restart ss-redir...&quot;&gt;&gt;/tmp/log/ss-monitor.log &amp;&amp; /etc/init.d/shadowsocks restart; fi</span><br><span class=\"line\">* 12 * * * /usr/bin/chinalist</span><br><span class=\"line\">* 12 * * * /usr/bin/blockad</span><br></pre></td></tr></table></figure>\n<p>OpenWrt计划任务说明：</p>\n<ul>\n<li>每半小时检查shadowsocks-libev 客户端，如果退出就自动重启</li>\n<li>每天中午12点运行chinalist</li>\n<li>每天中午12点运行blockad</li>\n</ul>\n<p>2014-09-24版的dir505, wr2543预编译固件是启用了计划任务的，这会有潜在的不确定性，如果更新时下载的文件如accelerated-domains.china.conf存在错误，导致dnsmasq无法启动，翻墙功能自然失效。</p>\n<p>如果你启用了计划任务，某一天突然不能翻墙了，这时设置客户端的IP地址为和路由器同网段，登录路由器，用ps命令查看dnsmasq进程是否启动了，如果没有启动，就重刷固件或者用<a href=\"https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d “https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d”\" target=\"_blank\" rel=\"noopener\">点击跳转</a><br>下面的文件代替 路由器里/etc/dnsmasq.d/下的文件。</p>\n<h2 id=\"附录：计划任务定时关闭路由器OpenWrt\"><a href=\"#附录：计划任务定时关闭路由器OpenWrt\" class=\"headerlink\" title=\"附录：计划任务定时关闭路由器OpenWrt\"></a>附录：计划任务定时关闭路由器OpenWrt</h2><hr>\n<p>人类的本性是目光短浅，玩得一时兴趣就会忘记定时休息的重要性。解决办法是在路由器里设置计划任务，禁止夜里某个时间段里使用路由器。下面的例子中，每20分钟检测一次，如果迟于20点30或者早于7点就自动关闭OpenWrt。这对小孩子特别有用，现在很多孩子使用电子设备上瘾，一个人睡的话甚至半夜在被窝里偷偷上网，现在好了，除非孩子强大到会登陆路由器修改设置，否则半夜重启路由器都无法上网了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/20 * * * * TIME=$(date +&quot;%H%M&quot;); if [ $TIME -ge 2030 ] || [ $TIME -le 700 ]; then poweroff; fi</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考:\"></a>参考:</h2><blockquote>\n<p><a href=\"https://github.com/vokins/simpleu\" target=\"_blank\" rel=\"noopener\">https://github.com/vokins/simpleu</a><br><a href=\"https://github.com/jjack/openwrt-adblock\" target=\"_blank\" rel=\"noopener\">https://github.com/jjack/openwrt-adblock</a><br><a href=\"https://github.com/felixonmars/dnsmasq-china-list\" target=\"_blank\" rel=\"noopener\">https://github.com/felixonmars/dnsmasq-china-list</a><br>install-shadowsocks-on-hg255d-openwrt-and-config-nat<br><a href=\"https://pcjetzt.com/vpn-test-besten-vpn-anbieter-im-vergleich/\" target=\"_blank\" rel=\"noopener\">https://pcjetzt.com/vpn-test-besten-vpn-anbieter-im-vergleich/</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"OpenWrt-路由器自动更新国内重要网站名单\"><a href=\"#OpenWrt-路由器自动更新国内重要网站名单\" class=\"headerlink\" title=\"OpenWrt 路由器自动更新国内重要网站名单\"></a>OpenWrt 路由器自动更新国内重要网站名单</h2><hr>\n<p>登陆路由器后:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@OpenWrt:~# cd /usr/bin</span><br><span class=\"line\">root@OpenWrt:~# touch chinalist</span><br><span class=\"line\">root@OpenWrt:~# chmod +x chinalist</span><br><span class=\"line\">root@OpenWrt:~# vi chinalist</span><br></pre></td></tr></table></figure>\n<p>/usr/bin/chinalist:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh                                                                                                                                                               </span><br><span class=\"line\"></span><br><span class=\"line\">wget -4 --no-check-certificate -O /etc/dnsmasq.d/accelerated-domains.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/accelerated-domains.china.conf</span><br><span class=\"line\">wget -4 --no-check-certificate -O /etc/dnsmasq.d/bogus-nxdomain.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/bogus-nxdomain.china.conf</span><br></pre></td></tr></table></figure>\n<h2 id=\"OpenWrt-路由器自动屏蔽广告\"><a href=\"#OpenWrt-路由器自动屏蔽广告\" class=\"headerlink\" title=\"OpenWrt 路由器自动屏蔽广告\"></a>OpenWrt 路由器自动屏蔽广告</h2><hr>\n<p>/etc/dnsmasq.d 下有个 blockad.conf 文件, 内容如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server=/.mobads.baidu.com/127.0.0.0</span><br><span class=\"line\">server=/.mobads-logs.baidu.com/127.0.0.0</span><br><span class=\"line\">server=/.media.admob.com/127.0.0.0</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>意思是 /mobads.baidu.com 的域名解析转发到 127.0.0.0, 这个地址不具备域名解析的功能, 于是就达到了屏蔽广告的功能.</p>\n<p>运行命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@OpenWrt:~# cd /usr/bin</span><br><span class=\"line\">root@OpenWrt:~# touch blockad</span><br><span class=\"line\">root@OpenWrt:~# chmod +x blockad</span><br><span class=\"line\">root@OpenWrt:~# vi blockad</span><br></pre></td></tr></table></figure>\n<p>/usr/bin/blockad:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\"># Author:    https://github.com/softwaredownload/openwrt-fanqiang</span><br><span class=\"line\"># Date:        2016-01-09</span><br><span class=\"line\"></span><br><span class=\"line\">TMP_HOSTS=/tmp/block.hosts.unsorted</span><br><span class=\"line\">HOSTS=/etc/dnsmasq.d/blockad.conf</span><br><span class=\"line\"></span><br><span class=\"line\"># remove any old TMP_HOSTS that might have stuck around</span><br><span class=\"line\">rm $&#123;TMP_HOSTS&#125; 2&gt; /dev/null</span><br><span class=\"line\"></span><br><span class=\"line\">for URL in \\</span><br><span class=\"line\">    &quot;https://raw.githubusercontent.com/vokins/simpleu/master/hosts&quot; \\</span><br><span class=\"line\">    &quot;http://adaway.org/hosts.txt&quot;</span><br><span class=\"line\">do</span><br><span class=\"line\">    # filter out comment lines, empty lines, localhost... </span><br><span class=\"line\">    # remove trailing comments, space( ,tab), empty line</span><br><span class=\"line\">    # replace line to dnsmasq format</span><br><span class=\"line\">    # remove carriage returns</span><br><span class=\"line\">    # append the results to TMP_HOSTS</span><br><span class=\"line\">    wget -4 --no-check-certificate -qO- &quot;$&#123;URL&#125;&quot; | grep -v -e &quot;^#&quot; -e &quot;^\\s*$&quot; -e &quot;localhost&quot; -e &quot;^;&quot; -e &quot;^@&quot; -e &quot;^:&quot; -e &quot;^[a-zA-Z]&quot; \\</span><br><span class=\"line\">    | sed -E -e &quot;s/#.*$//&quot; -e &quot;s/[[:space:]]*//g&quot; -e &quot;/^$/d&quot; \\</span><br><span class=\"line\">    -e &quot;s/^127.0.0.1/server=\\/./&quot; -e &quot;s/0.0.0.0/server=\\/./&quot; -e &quot;/^[0-9].*$/d&quot; -e &quot;s/$/\\/127.0.0.0/&quot; \\</span><br><span class=\"line\">    | tr -d &quot;\\r&quot; &gt;&gt; $&#123;TMP_HOSTS&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\"># remove duplicate hosts and save the real hosts file</span><br><span class=\"line\">sort $&#123;TMP_HOSTS&#125; | uniq &gt; $&#123;HOSTS&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">rm $&#123;TMP_HOSTS&#125; 2&gt; /dev/null</span><br></pre></td></tr></table></figure>\n<p>OpenWrt 自动生成广告屏蔽列表说明:</p>\n<p>第一个 URL 主要用于国内, 下面几个 URL 是屏蔽国外广告<br>运行上面命令产生的广告屏蔽列表比较长, 如果路由器性能较差, dnsmasq 匹配域名负荷会太大, 可以用下面这个简化版的文件, 不要用上面的脚本:</p>\n<blockquote>\n<p><a href=\"https://github.com/softwaredownload/openwrt-fanqiang/blob/master/openwrt/dir505/etc/dnsmasq.d/blockad.conf\" target=\"_blank\" rel=\"noopener\">https://github.com/softwaredownload/openwrt-fanqiang/blob/master/openwrt/dir505/etc/dnsmasq.d/blockad.conf</a></p>\n</blockquote>\n<p>如果dnsmasq超负荷工作，可能会失去响应，导致打不开网页，这时需要登录路由器运行命令：</p>\n<p><code>/etc/init.d/dnsmasq restart</code></p>\n<p>所以，还是尽量用性能好点的路由器吧<br>路由器性能比电脑差很多，如果屏蔽列表很长，那么短时间内快速打开数个网页就可能导致dnsmasq失去响应。最好是看完一个网页就关闭一个，再打开新的网页。<br>在路由器里屏蔽的好处是所有接入路由器的设备都全部起作用。<br>通常的做法，在路由器里屏蔽部分域名，然后在电脑里设置更广泛、精确的屏蔽，主要是设置host文件屏蔽和浏览器插件屏蔽。<br>浏览器插件屏蔽，可以装这些Chrome浏览器插件：uBlock Origin，ADfree.Player.Online。其中uBlock Origin的作用和Adblock Plus类似，但是设置更加丰富。</p>\n<h2 id=\"计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks\"><a href=\"#计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks\" class=\"headerlink\" title=\"计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks\"></a>计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks</h2><hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@OpenWrt:~# crontab -e</span><br></pre></td></tr></table></figure>\n<p>输入以下内容:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/30 * * * * isfound=$(ps | grep &quot;ss-redir&quot; | grep -v &quot;grep&quot;); if [ -z &quot;$isfound&quot; ]; then echo &quot;$(date): restart ss-redir...&quot;&gt;&gt;/tmp/log/ss-monitor.log &amp;&amp; /etc/init.d/shadowsocks restart; fi</span><br><span class=\"line\">* 12 * * * /usr/bin/chinalist</span><br><span class=\"line\">* 12 * * * /usr/bin/blockad</span><br></pre></td></tr></table></figure>\n<p>OpenWrt计划任务说明：</p>\n<ul>\n<li>每半小时检查shadowsocks-libev 客户端，如果退出就自动重启</li>\n<li>每天中午12点运行chinalist</li>\n<li>每天中午12点运行blockad</li>\n</ul>\n<p>2014-09-24版的dir505, wr2543预编译固件是启用了计划任务的，这会有潜在的不确定性，如果更新时下载的文件如accelerated-domains.china.conf存在错误，导致dnsmasq无法启动，翻墙功能自然失效。</p>\n<p>如果你启用了计划任务，某一天突然不能翻墙了，这时设置客户端的IP地址为和路由器同网段，登录路由器，用ps命令查看dnsmasq进程是否启动了，如果没有启动，就重刷固件或者用<a href=\"https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d “https://github.com/softwaredownload/openwrt-fanqiang/tree/master/openwrt/default/etc/dnsmasq.d”\" target=\"_blank\" rel=\"noopener\">点击跳转</a><br>下面的文件代替 路由器里/etc/dnsmasq.d/下的文件。</p>\n<h2 id=\"附录：计划任务定时关闭路由器OpenWrt\"><a href=\"#附录：计划任务定时关闭路由器OpenWrt\" class=\"headerlink\" title=\"附录：计划任务定时关闭路由器OpenWrt\"></a>附录：计划任务定时关闭路由器OpenWrt</h2><hr>\n<p>人类的本性是目光短浅，玩得一时兴趣就会忘记定时休息的重要性。解决办法是在路由器里设置计划任务，禁止夜里某个时间段里使用路由器。下面的例子中，每20分钟检测一次，如果迟于20点30或者早于7点就自动关闭OpenWrt。这对小孩子特别有用，现在很多孩子使用电子设备上瘾，一个人睡的话甚至半夜在被窝里偷偷上网，现在好了，除非孩子强大到会登陆路由器修改设置，否则半夜重启路由器都无法上网了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/20 * * * * TIME=$(date +&quot;%H%M&quot;); if [ $TIME -ge 2030 ] || [ $TIME -le 700 ]; then poweroff; fi</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考:\"></a>参考:</h2><blockquote>\n<p><a href=\"https://github.com/vokins/simpleu\" target=\"_blank\" rel=\"noopener\">https://github.com/vokins/simpleu</a><br><a href=\"https://github.com/jjack/openwrt-adblock\" target=\"_blank\" rel=\"noopener\">https://github.com/jjack/openwrt-adblock</a><br><a href=\"https://github.com/felixonmars/dnsmasq-china-list\" target=\"_blank\" rel=\"noopener\">https://github.com/felixonmars/dnsmasq-china-list</a><br>install-shadowsocks-on-hg255d-openwrt-and-config-nat<br><a href=\"https://pcjetzt.com/vpn-test-besten-vpn-anbieter-im-vergleich/\" target=\"_blank\" rel=\"noopener\">https://pcjetzt.com/vpn-test-besten-vpn-anbieter-im-vergleich/</a></p>\n</blockquote>\n"},{"title":"Hexo-NexT 主题修改页面透明度及页面颜色","author":"OCD","date":"2018-09-26T08:33:00.000Z","_content":"由于NexT主题默认的背景是不透明的，如果我们设置的有canvas_nest和canvas_three等3D动画效果，则会被文章界面遮住，本文主要讲述如何修改Hexo站点的页面透明度。\n\n主要是通过修改CSS样式来实现\n\n## 文章部分\n****\n\n> 文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style\n```\n// Post & Comments blocks.\n.post-block {\n  padding: $content-desktop-padding;\n- background: white;\n+ background: rgba(255,255,255,0.7);\n  box-shadow: $box-shadow-inner;\n  border-radius: $border-radius-inner;\n}\n```\n\n## 阅读全文按钮\n****\n\n> 文件位置 ~Hexo根目录/themes/next/source/css/_variables/Pisces.style\n```\n// Button\n  $btn-default-radius           = 2px\n- $btn-default-bg               = white\n+ $btn-default-bg               = rgba(255,255,255,0.5)\n  $btn-default-color            = $text-color\n  $btn-default-border-color     = $text-color\n  $btn-default-hover-color      = white\n  $btn-default-hover-bg         = $black-deep\n```\n\n## 分页部分\n****\n\n> 文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style\n```\n// Pagination.\n.pagination {\n  .prev, .next, .page-number {\n    margin-bottom: initial;\n    top: initial;\n  }\n  margin: sboffset 0 0;\n- background: white;\n+ background: rgba(255,255,255,0.7);\n  box-shadow: $box-shadow;\n  border-radius: $border-radius;\n  padding: 10px 0 10px;\n}\n```\n\n## 评论区部分\n****\n\n> ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style\n```\n// Comments blocks.\n.comments {\n  padding: $content-desktop-padding;\n  margin: initial;\n  margin-top: sboffset;\n- background: white;\n+ background: rgba(255,255,255,0.7);\n  box-shadow: $box-shadow;\n  border-radius: $border-radius;\n}\n```\n\n## 侧栏菜单界面\n****\n\n>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_layout.style\n```\n.header-inner {\n  position: absolute;\n  top: 0;\n  overflow: hidden;\n  padding: 0;\n  width: $sidebar-desktop;\n- background: white;\n+ background: rgba(255,255,255,0.7);\n  box-shadow: $box-shadow-inner;\n  border-radius: $border-radius-inner;\n\n  +desktop-large() {\n    .container & { width: $sidebar-desktop; }\n  }\n  +tablet() {\n    position: relative;\n    width: auto;\n    border-radius: initial;\n  }\n  +mobile() {\n    position: relative;\n    width: auto;\n    border-radius: initial;\n  }\n}\n```\n\n## 个人资料界面\n****\n\n> 文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_sidebar.style\n```\n.sidebar-inner {\n//padding: 20px 10px 0;\n  box-sizing: border-box;\n  width: $sidebar-desktop;\n  color: $text-color;\n- background: white;\n+ background: rgba(255,255,255,0.7);\n  box-shadow: $box-shadow;\n  border-radius: $border-radius;\n  if (hexo-config('motion.enable') and hexo-config('motion.transition.sidebar')) { opacity: 0; }\n\n  &.affix {\n    position: fixed;\n    top: $sidebar-offset;\n  }\n```","source":"_posts/2018-9-26-NexT-theme-Page-transparency-color.md","raw":"---\ntitle: Hexo-NexT 主题修改页面透明度及页面颜色\nauthor: OCD\ntags:\n  - NexT\ncategories:\n  - Hexo\ndate: 2018-09-26 16:33:00\n---\n由于NexT主题默认的背景是不透明的，如果我们设置的有canvas_nest和canvas_three等3D动画效果，则会被文章界面遮住，本文主要讲述如何修改Hexo站点的页面透明度。\n\n主要是通过修改CSS样式来实现\n\n## 文章部分\n****\n\n> 文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style\n```\n// Post & Comments blocks.\n.post-block {\n  padding: $content-desktop-padding;\n- background: white;\n+ background: rgba(255,255,255,0.7);\n  box-shadow: $box-shadow-inner;\n  border-radius: $border-radius-inner;\n}\n```\n\n## 阅读全文按钮\n****\n\n> 文件位置 ~Hexo根目录/themes/next/source/css/_variables/Pisces.style\n```\n// Button\n  $btn-default-radius           = 2px\n- $btn-default-bg               = white\n+ $btn-default-bg               = rgba(255,255,255,0.5)\n  $btn-default-color            = $text-color\n  $btn-default-border-color     = $text-color\n  $btn-default-hover-color      = white\n  $btn-default-hover-bg         = $black-deep\n```\n\n## 分页部分\n****\n\n> 文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style\n```\n// Pagination.\n.pagination {\n  .prev, .next, .page-number {\n    margin-bottom: initial;\n    top: initial;\n  }\n  margin: sboffset 0 0;\n- background: white;\n+ background: rgba(255,255,255,0.7);\n  box-shadow: $box-shadow;\n  border-radius: $border-radius;\n  padding: 10px 0 10px;\n}\n```\n\n## 评论区部分\n****\n\n> ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style\n```\n// Comments blocks.\n.comments {\n  padding: $content-desktop-padding;\n  margin: initial;\n  margin-top: sboffset;\n- background: white;\n+ background: rgba(255,255,255,0.7);\n  box-shadow: $box-shadow;\n  border-radius: $border-radius;\n}\n```\n\n## 侧栏菜单界面\n****\n\n>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_layout.style\n```\n.header-inner {\n  position: absolute;\n  top: 0;\n  overflow: hidden;\n  padding: 0;\n  width: $sidebar-desktop;\n- background: white;\n+ background: rgba(255,255,255,0.7);\n  box-shadow: $box-shadow-inner;\n  border-radius: $border-radius-inner;\n\n  +desktop-large() {\n    .container & { width: $sidebar-desktop; }\n  }\n  +tablet() {\n    position: relative;\n    width: auto;\n    border-radius: initial;\n  }\n  +mobile() {\n    position: relative;\n    width: auto;\n    border-radius: initial;\n  }\n}\n```\n\n## 个人资料界面\n****\n\n> 文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_sidebar.style\n```\n.sidebar-inner {\n//padding: 20px 10px 0;\n  box-sizing: border-box;\n  width: $sidebar-desktop;\n  color: $text-color;\n- background: white;\n+ background: rgba(255,255,255,0.7);\n  box-shadow: $box-shadow;\n  border-radius: $border-radius;\n  if (hexo-config('motion.enable') and hexo-config('motion.transition.sidebar')) { opacity: 0; }\n\n  &.affix {\n    position: fixed;\n    top: $sidebar-offset;\n  }\n```","slug":"2018-9-26-NexT-theme-Page-transparency-color","published":1,"updated":"2018-11-26T03:32:37.621Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wo0015rmtuqhxfan2k","content":"<p>由于NexT主题默认的背景是不透明的，如果我们设置的有canvas_nest和canvas_three等3D动画效果，则会被文章界面遮住，本文主要讲述如何修改Hexo站点的页面透明度。</p>\n<p>主要是通过修改CSS样式来实现</p>\n<h2 id=\"文章部分\"><a href=\"#文章部分\" class=\"headerlink\" title=\"文章部分\"></a>文章部分</h2><hr>\n<blockquote>\n<p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Post &amp; Comments blocks.</span><br><span class=\"line\">.post-block &#123;</span><br><span class=\"line\">  padding: $content-desktop-padding;</span><br><span class=\"line\">- background: white;</span><br><span class=\"line\">+ background: rgba(255,255,255,0.7);</span><br><span class=\"line\">  box-shadow: $box-shadow-inner;</span><br><span class=\"line\">  border-radius: $border-radius-inner;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"阅读全文按钮\"><a href=\"#阅读全文按钮\" class=\"headerlink\" title=\"阅读全文按钮\"></a>阅读全文按钮</h2><hr>\n<blockquote>\n<p>文件位置 ~Hexo根目录/themes/next/source/css/_variables/Pisces.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Button</span><br><span class=\"line\">  $btn-default-radius           = 2px</span><br><span class=\"line\">- $btn-default-bg               = white</span><br><span class=\"line\">+ $btn-default-bg               = rgba(255,255,255,0.5)</span><br><span class=\"line\">  $btn-default-color            = $text-color</span><br><span class=\"line\">  $btn-default-border-color     = $text-color</span><br><span class=\"line\">  $btn-default-hover-color      = white</span><br><span class=\"line\">  $btn-default-hover-bg         = $black-deep</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"分页部分\"><a href=\"#分页部分\" class=\"headerlink\" title=\"分页部分\"></a>分页部分</h2><hr>\n<blockquote>\n<p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Pagination.</span><br><span class=\"line\">.pagination &#123;</span><br><span class=\"line\">  .prev, .next, .page-number &#123;</span><br><span class=\"line\">    margin-bottom: initial;</span><br><span class=\"line\">    top: initial;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  margin: sboffset 0 0;</span><br><span class=\"line\">- background: white;</span><br><span class=\"line\">+ background: rgba(255,255,255,0.7);</span><br><span class=\"line\">  box-shadow: $box-shadow;</span><br><span class=\"line\">  border-radius: $border-radius;</span><br><span class=\"line\">  padding: 10px 0 10px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"评论区部分\"><a href=\"#评论区部分\" class=\"headerlink\" title=\"评论区部分\"></a>评论区部分</h2><hr>\n<blockquote>\n<p>~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Comments blocks.</span><br><span class=\"line\">.comments &#123;</span><br><span class=\"line\">  padding: $content-desktop-padding;</span><br><span class=\"line\">  margin: initial;</span><br><span class=\"line\">  margin-top: sboffset;</span><br><span class=\"line\">- background: white;</span><br><span class=\"line\">+ background: rgba(255,255,255,0.7);</span><br><span class=\"line\">  box-shadow: $box-shadow;</span><br><span class=\"line\">  border-radius: $border-radius;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"侧栏菜单界面\"><a href=\"#侧栏菜单界面\" class=\"headerlink\" title=\"侧栏菜单界面\"></a>侧栏菜单界面</h2><hr>\n<blockquote>\n<p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_layout.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.header-inner &#123;</span><br><span class=\"line\">  position: absolute;</span><br><span class=\"line\">  top: 0;</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">  padding: 0;</span><br><span class=\"line\">  width: $sidebar-desktop;</span><br><span class=\"line\">- background: white;</span><br><span class=\"line\">+ background: rgba(255,255,255,0.7);</span><br><span class=\"line\">  box-shadow: $box-shadow-inner;</span><br><span class=\"line\">  border-radius: $border-radius-inner;</span><br><span class=\"line\"></span><br><span class=\"line\">  +desktop-large() &#123;</span><br><span class=\"line\">    .container &amp; &#123; width: $sidebar-desktop; &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  +tablet() &#123;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    width: auto;</span><br><span class=\"line\">    border-radius: initial;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  +mobile() &#123;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    width: auto;</span><br><span class=\"line\">    border-radius: initial;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"个人资料界面\"><a href=\"#个人资料界面\" class=\"headerlink\" title=\"个人资料界面\"></a>个人资料界面</h2><hr>\n<blockquote>\n<p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_sidebar.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.sidebar-inner &#123;</span><br><span class=\"line\">//padding: 20px 10px 0;</span><br><span class=\"line\">  box-sizing: border-box;</span><br><span class=\"line\">  width: $sidebar-desktop;</span><br><span class=\"line\">  color: $text-color;</span><br><span class=\"line\">- background: white;</span><br><span class=\"line\">+ background: rgba(255,255,255,0.7);</span><br><span class=\"line\">  box-shadow: $box-shadow;</span><br><span class=\"line\">  border-radius: $border-radius;</span><br><span class=\"line\">  if (hexo-config(&apos;motion.enable&apos;) and hexo-config(&apos;motion.transition.sidebar&apos;)) &#123; opacity: 0; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &amp;.affix &#123;</span><br><span class=\"line\">    position: fixed;</span><br><span class=\"line\">    top: $sidebar-offset;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>由于NexT主题默认的背景是不透明的，如果我们设置的有canvas_nest和canvas_three等3D动画效果，则会被文章界面遮住，本文主要讲述如何修改Hexo站点的页面透明度。</p>\n<p>主要是通过修改CSS样式来实现</p>\n<h2 id=\"文章部分\"><a href=\"#文章部分\" class=\"headerlink\" title=\"文章部分\"></a>文章部分</h2><hr>\n<blockquote>\n<p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Post &amp; Comments blocks.</span><br><span class=\"line\">.post-block &#123;</span><br><span class=\"line\">  padding: $content-desktop-padding;</span><br><span class=\"line\">- background: white;</span><br><span class=\"line\">+ background: rgba(255,255,255,0.7);</span><br><span class=\"line\">  box-shadow: $box-shadow-inner;</span><br><span class=\"line\">  border-radius: $border-radius-inner;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"阅读全文按钮\"><a href=\"#阅读全文按钮\" class=\"headerlink\" title=\"阅读全文按钮\"></a>阅读全文按钮</h2><hr>\n<blockquote>\n<p>文件位置 ~Hexo根目录/themes/next/source/css/_variables/Pisces.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Button</span><br><span class=\"line\">  $btn-default-radius           = 2px</span><br><span class=\"line\">- $btn-default-bg               = white</span><br><span class=\"line\">+ $btn-default-bg               = rgba(255,255,255,0.5)</span><br><span class=\"line\">  $btn-default-color            = $text-color</span><br><span class=\"line\">  $btn-default-border-color     = $text-color</span><br><span class=\"line\">  $btn-default-hover-color      = white</span><br><span class=\"line\">  $btn-default-hover-bg         = $black-deep</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"分页部分\"><a href=\"#分页部分\" class=\"headerlink\" title=\"分页部分\"></a>分页部分</h2><hr>\n<blockquote>\n<p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Pagination.</span><br><span class=\"line\">.pagination &#123;</span><br><span class=\"line\">  .prev, .next, .page-number &#123;</span><br><span class=\"line\">    margin-bottom: initial;</span><br><span class=\"line\">    top: initial;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  margin: sboffset 0 0;</span><br><span class=\"line\">- background: white;</span><br><span class=\"line\">+ background: rgba(255,255,255,0.7);</span><br><span class=\"line\">  box-shadow: $box-shadow;</span><br><span class=\"line\">  border-radius: $border-radius;</span><br><span class=\"line\">  padding: 10px 0 10px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"评论区部分\"><a href=\"#评论区部分\" class=\"headerlink\" title=\"评论区部分\"></a>评论区部分</h2><hr>\n<blockquote>\n<p>~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// Comments blocks.</span><br><span class=\"line\">.comments &#123;</span><br><span class=\"line\">  padding: $content-desktop-padding;</span><br><span class=\"line\">  margin: initial;</span><br><span class=\"line\">  margin-top: sboffset;</span><br><span class=\"line\">- background: white;</span><br><span class=\"line\">+ background: rgba(255,255,255,0.7);</span><br><span class=\"line\">  box-shadow: $box-shadow;</span><br><span class=\"line\">  border-radius: $border-radius;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"侧栏菜单界面\"><a href=\"#侧栏菜单界面\" class=\"headerlink\" title=\"侧栏菜单界面\"></a>侧栏菜单界面</h2><hr>\n<blockquote>\n<p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_layout.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.header-inner &#123;</span><br><span class=\"line\">  position: absolute;</span><br><span class=\"line\">  top: 0;</span><br><span class=\"line\">  overflow: hidden;</span><br><span class=\"line\">  padding: 0;</span><br><span class=\"line\">  width: $sidebar-desktop;</span><br><span class=\"line\">- background: white;</span><br><span class=\"line\">+ background: rgba(255,255,255,0.7);</span><br><span class=\"line\">  box-shadow: $box-shadow-inner;</span><br><span class=\"line\">  border-radius: $border-radius-inner;</span><br><span class=\"line\"></span><br><span class=\"line\">  +desktop-large() &#123;</span><br><span class=\"line\">    .container &amp; &#123; width: $sidebar-desktop; &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  +tablet() &#123;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    width: auto;</span><br><span class=\"line\">    border-radius: initial;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  +mobile() &#123;</span><br><span class=\"line\">    position: relative;</span><br><span class=\"line\">    width: auto;</span><br><span class=\"line\">    border-radius: initial;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"个人资料界面\"><a href=\"#个人资料界面\" class=\"headerlink\" title=\"个人资料界面\"></a>个人资料界面</h2><hr>\n<blockquote>\n<p>文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_sidebar.style<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.sidebar-inner &#123;</span><br><span class=\"line\">//padding: 20px 10px 0;</span><br><span class=\"line\">  box-sizing: border-box;</span><br><span class=\"line\">  width: $sidebar-desktop;</span><br><span class=\"line\">  color: $text-color;</span><br><span class=\"line\">- background: white;</span><br><span class=\"line\">+ background: rgba(255,255,255,0.7);</span><br><span class=\"line\">  box-shadow: $box-shadow;</span><br><span class=\"line\">  border-radius: $border-radius;</span><br><span class=\"line\">  if (hexo-config(&apos;motion.enable&apos;) and hexo-config(&apos;motion.transition.sidebar&apos;)) &#123; opacity: 0; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &amp;.affix &#123;</span><br><span class=\"line\">    position: fixed;</span><br><span class=\"line\">    top: $sidebar-offset;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n"},{"title":"OSX 和 windows 时间不同步解决方法","author":"OCD","date":"2018-09-28T05:19:00.000Z","_content":"OSX 和 windows 时间不同步解决方法\n<!-- more -->\n\n\n## 教程正文\n****\n\n很多同学都是 mac osx 和 windows 双系统,但是有个问题,进入mac osx再进windows 时间就不对了这个是因为\n\n__Windows 与 Mac缺省看待系统硬件时间的方式是不一样的：__\n\nWindows把系统硬件时间当作本地时间(local time)，即操作系统中显示的时间跟BIOS中显示的时间是一样的。\n\nMac把硬件时间当作 UTC，操作系统中显示的时间是硬件时间经过换算得来的，比如说北京时间是GMT+8，则系统中显示时间是硬件时间+8这样，当PC中同时有多系统共存时，就出现了问题。\n\n假如你的mac设置的时区都为北京时间东八区，当前系统时间为9：00AM。则此时硬件中存储的实际是UTC 时间1:00AM。这时你重启进入Windows后，你会发现windows系统中显示的时间是 1:00AM，比mac中慢了八个小时。\n\n同理，你在Windows中更改或用网络同步了系统时间后，再到mac中去看，系统就会快了8小时。\n\n解决这个问题的方法很简单：\n修改 Windows 对硬件时间的对待方式，这样只在 Windows 上修改后就无需在mac上设置了。\n让 Windows 把硬件时间当作 UTC\n\nwindow7用户开始->运行->输入CMD\n\nwindow8/10用户 WIN+x 选择管理员模式进入CMD\n\n输入下面命令并回车\n代码:\n```\nReg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1\n```\n\n这样一来就不用在osx下安装时间补丁了.","source":"_posts/2018-9-27-OSX-windows-Fixed-time-out-of-sync-issue.md","raw":"---\ntitle: OSX 和 windows 时间不同步解决方法\nauthor: OCD\ntags:\n  - windows\ncategories:\n  - 黑苹果\ndate: 2018-09-28 13:19:00\n---\nOSX 和 windows 时间不同步解决方法\n<!-- more -->\n\n\n## 教程正文\n****\n\n很多同学都是 mac osx 和 windows 双系统,但是有个问题,进入mac osx再进windows 时间就不对了这个是因为\n\n__Windows 与 Mac缺省看待系统硬件时间的方式是不一样的：__\n\nWindows把系统硬件时间当作本地时间(local time)，即操作系统中显示的时间跟BIOS中显示的时间是一样的。\n\nMac把硬件时间当作 UTC，操作系统中显示的时间是硬件时间经过换算得来的，比如说北京时间是GMT+8，则系统中显示时间是硬件时间+8这样，当PC中同时有多系统共存时，就出现了问题。\n\n假如你的mac设置的时区都为北京时间东八区，当前系统时间为9：00AM。则此时硬件中存储的实际是UTC 时间1:00AM。这时你重启进入Windows后，你会发现windows系统中显示的时间是 1:00AM，比mac中慢了八个小时。\n\n同理，你在Windows中更改或用网络同步了系统时间后，再到mac中去看，系统就会快了8小时。\n\n解决这个问题的方法很简单：\n修改 Windows 对硬件时间的对待方式，这样只在 Windows 上修改后就无需在mac上设置了。\n让 Windows 把硬件时间当作 UTC\n\nwindow7用户开始->运行->输入CMD\n\nwindow8/10用户 WIN+x 选择管理员模式进入CMD\n\n输入下面命令并回车\n代码:\n```\nReg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1\n```\n\n这样一来就不用在osx下安装时间补丁了.","slug":"2018-9-27-OSX-windows-Fixed-time-out-of-sync-issue","published":1,"updated":"2018-11-26T03:32:37.621Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wq0018rmtu5ps3qxyr","content":"<p>OSX 和 windows 时间不同步解决方法<br><a id=\"more\"></a></p>\n<h2 id=\"教程正文\"><a href=\"#教程正文\" class=\"headerlink\" title=\"教程正文\"></a>教程正文</h2><hr>\n<p>很多同学都是 mac osx 和 windows 双系统,但是有个问题,进入mac osx再进windows 时间就不对了这个是因为</p>\n<p><strong>Windows 与 Mac缺省看待系统硬件时间的方式是不一样的：</strong></p>\n<p>Windows把系统硬件时间当作本地时间(local time)，即操作系统中显示的时间跟BIOS中显示的时间是一样的。</p>\n<p>Mac把硬件时间当作 UTC，操作系统中显示的时间是硬件时间经过换算得来的，比如说北京时间是GMT+8，则系统中显示时间是硬件时间+8这样，当PC中同时有多系统共存时，就出现了问题。</p>\n<p>假如你的mac设置的时区都为北京时间东八区，当前系统时间为9：00AM。则此时硬件中存储的实际是UTC 时间1:00AM。这时你重启进入Windows后，你会发现windows系统中显示的时间是 1:00AM，比mac中慢了八个小时。</p>\n<p>同理，你在Windows中更改或用网络同步了系统时间后，再到mac中去看，系统就会快了8小时。</p>\n<p>解决这个问题的方法很简单：<br>修改 Windows 对硬件时间的对待方式，这样只在 Windows 上修改后就无需在mac上设置了。<br>让 Windows 把硬件时间当作 UTC</p>\n<p>window7用户开始-&gt;运行-&gt;输入CMD</p>\n<p>window8/10用户 WIN+x 选择管理员模式进入CMD</p>\n<p>输入下面命令并回车<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</span><br></pre></td></tr></table></figure></p>\n<p>这样一来就不用在osx下安装时间补丁了.</p>\n","site":{"data":{}},"excerpt":"<p>OSX 和 windows 时间不同步解决方法<br>","more":"</p>\n<h2 id=\"教程正文\"><a href=\"#教程正文\" class=\"headerlink\" title=\"教程正文\"></a>教程正文</h2><hr>\n<p>很多同学都是 mac osx 和 windows 双系统,但是有个问题,进入mac osx再进windows 时间就不对了这个是因为</p>\n<p><strong>Windows 与 Mac缺省看待系统硬件时间的方式是不一样的：</strong></p>\n<p>Windows把系统硬件时间当作本地时间(local time)，即操作系统中显示的时间跟BIOS中显示的时间是一样的。</p>\n<p>Mac把硬件时间当作 UTC，操作系统中显示的时间是硬件时间经过换算得来的，比如说北京时间是GMT+8，则系统中显示时间是硬件时间+8这样，当PC中同时有多系统共存时，就出现了问题。</p>\n<p>假如你的mac设置的时区都为北京时间东八区，当前系统时间为9：00AM。则此时硬件中存储的实际是UTC 时间1:00AM。这时你重启进入Windows后，你会发现windows系统中显示的时间是 1:00AM，比mac中慢了八个小时。</p>\n<p>同理，你在Windows中更改或用网络同步了系统时间后，再到mac中去看，系统就会快了8小时。</p>\n<p>解决这个问题的方法很简单：<br>修改 Windows 对硬件时间的对待方式，这样只在 Windows 上修改后就无需在mac上设置了。<br>让 Windows 把硬件时间当作 UTC</p>\n<p>window7用户开始-&gt;运行-&gt;输入CMD</p>\n<p>window8/10用户 WIN+x 选择管理员模式进入CMD</p>\n<p>输入下面命令并回车<br>代码:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1</span><br></pre></td></tr></table></figure></p>\n<p>这样一来就不用在osx下安装时间补丁了.</p>"},{"title":"Build Android on MacOS preparation","author":"OCD","date":"2018-09-20T01:26:01.000Z","_content":"\nThis passage introduces a way to build Android on MacOS (NEW)\n\n<!-- more -->\n\n__Caution__: 由于最新Xcode9编译Android源码问题很多，使用旧版Xcode 8.3.3\n\n## 编译前的准备工作\n\n__Xcode8.3.3__\n1. 下载地址:(https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode8.3.3.xip)\n\n2. 切换Xcode版本\n`$ xcode-select --switch $PATH/Xcode.app`\n\n__编译需要的软件包__\n1. ([brew](https://brew.sh/) 使用详见官网)\n```\n$ brew install bash-completion coreutils e2fsprogs findutils\tgit gnu-sed gnupg gnutls imagemagick make maven md5sha1sum openssl repo sdl sdl2\n```\n\n2. 环境变量\n`$ vim ~/.bash_profile`\n```\nPATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/findutils/libexec/gnubin:/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/opt/make/libexec/gnubin:$PATH\n```\n\n__Set the number of open files to be 1024__\n\n`ulimit -S -n 1024`\n\n__Jack memory__\n\n    export ANDROID_JACK_VM_ARGS=\"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G\"\n\n\n__python2__\n\n1. 编译时用到python2命令，mac里只有python2.7 软链接成python2即可\n`$ ln /usr/bin/python2.7 /usr/bin/python2`\n\n__bison报错__\n\n1. 目前Android源码自带的bison不兼容macOS10.13新引入的一些安全限制。需要打补丁编译并替换源码自带的bison。以后源码更新应该会修复就不需要了\n>\b详情可见 [android-building](https://groups.google.com/forum/?fromgroups#!topic/android-building/D1-c5lZ9Oco)\n\n```\n​$ cd external/bison\n\n$ git cherry-pick c0c852bd6fe462b148475476d9124fd740eba160\n\n$ mm\n\n$ cp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/bison\n```\n\n## 除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​","source":"_posts/2018-9-20-Build-Android-on-MacOS-preparation.md","raw":"---\ntitle: Build Android on MacOS preparation\nauthor: \"OCD\"\ndate: 2018-09-20 09:26:01\ntags:\n    - Android Build\n    - MacOS\ncategory:\n    - Android Build\n---\n\nThis passage introduces a way to build Android on MacOS (NEW)\n\n<!-- more -->\n\n__Caution__: 由于最新Xcode9编译Android源码问题很多，使用旧版Xcode 8.3.3\n\n## 编译前的准备工作\n\n__Xcode8.3.3__\n1. 下载地址:(https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode8.3.3.xip)\n\n2. 切换Xcode版本\n`$ xcode-select --switch $PATH/Xcode.app`\n\n__编译需要的软件包__\n1. ([brew](https://brew.sh/) 使用详见官网)\n```\n$ brew install bash-completion coreutils e2fsprogs findutils\tgit gnu-sed gnupg gnutls imagemagick make maven md5sha1sum openssl repo sdl sdl2\n```\n\n2. 环境变量\n`$ vim ~/.bash_profile`\n```\nPATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/findutils/libexec/gnubin:/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/opt/make/libexec/gnubin:$PATH\n```\n\n__Set the number of open files to be 1024__\n\n`ulimit -S -n 1024`\n\n__Jack memory__\n\n    export ANDROID_JACK_VM_ARGS=\"-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G\"\n\n\n__python2__\n\n1. 编译时用到python2命令，mac里只有python2.7 软链接成python2即可\n`$ ln /usr/bin/python2.7 /usr/bin/python2`\n\n__bison报错__\n\n1. 目前Android源码自带的bison不兼容macOS10.13新引入的一些安全限制。需要打补丁编译并替换源码自带的bison。以后源码更新应该会修复就不需要了\n>\b详情可见 [android-building](https://groups.google.com/forum/?fromgroups#!topic/android-building/D1-c5lZ9Oco)\n\n```\n​$ cd external/bison\n\n$ git cherry-pick c0c852bd6fe462b148475476d9124fd740eba160\n\n$ mm\n\n$ cp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/bison\n```\n\n## 除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​","slug":"2018-9-20-Build-Android-on-MacOS-preparation","published":1,"updated":"2018-11-26T03:32:37.621Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wr001crmtuiarekv95","content":"<p>This passage introduces a way to build Android on MacOS (NEW)</p>\n<a id=\"more\"></a>\n<p><strong>Caution</strong>: 由于最新Xcode9编译Android源码问题很多，使用旧版Xcode 8.3.3</p>\n<h2 id=\"编译前的准备工作\"><a href=\"#编译前的准备工作\" class=\"headerlink\" title=\"编译前的准备工作\"></a>编译前的准备工作</h2><p><strong>Xcode8.3.3</strong></p>\n<ol>\n<li><p>下载地址:(<a href=\"https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode8.3.3.xip\" target=\"_blank\" rel=\"noopener\">https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode8.3.3.xip</a>)</p>\n</li>\n<li><p>切换Xcode版本<br><code>$ xcode-select --switch $PATH/Xcode.app</code></p>\n</li>\n</ol>\n<p><strong>编译需要的软件包</strong></p>\n<ol>\n<li><p>(<a href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener\">brew</a> 使用详见官网)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install bash-completion coreutils e2fsprogs findutils\tgit gnu-sed gnupg gnutls imagemagick make maven md5sha1sum openssl repo sdl sdl2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>环境变量<br><code>$ vim ~/.bash_profile</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/findutils/libexec/gnubin:/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/opt/make/libexec/gnubin:$PATH</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>Set the number of open files to be 1024</strong></p>\n<p><code>ulimit -S -n 1024</code></p>\n<p><strong>Jack memory</strong></p>\n<pre><code>export ANDROID_JACK_VM_ARGS=&quot;-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G&quot;\n</code></pre><p><strong>python2</strong></p>\n<ol>\n<li>编译时用到python2命令，mac里只有python2.7 软链接成python2即可<br><code>$ ln /usr/bin/python2.7 /usr/bin/python2</code></li>\n</ol>\n<p><strong>bison报错</strong></p>\n<ol>\n<li>目前Android源码自带的bison不兼容macOS10.13新引入的一些安全限制。需要打补丁编译并替换源码自带的bison。以后源码更新应该会修复就不需要了<blockquote>\n<p>\b详情可见 <a href=\"https://groups.google.com/forum/?fromgroups#!topic/android-building/D1-c5lZ9Oco\" target=\"_blank\" rel=\"noopener\">android-building</a></p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​$ cd external/bison</span><br><span class=\"line\"></span><br><span class=\"line\">$ git cherry-pick c0c852bd6fe462b148475476d9124fd740eba160</span><br><span class=\"line\"></span><br><span class=\"line\">$ mm</span><br><span class=\"line\"></span><br><span class=\"line\">$ cp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/bison</span><br></pre></td></tr></table></figure>\n<h2 id=\"除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​\"><a href=\"#除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​\" class=\"headerlink\" title=\"除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​\"></a>除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​</h2>","site":{"data":{}},"excerpt":"<p>This passage introduces a way to build Android on MacOS (NEW)</p>","more":"<p><strong>Caution</strong>: 由于最新Xcode9编译Android源码问题很多，使用旧版Xcode 8.3.3</p>\n<h2 id=\"编译前的准备工作\"><a href=\"#编译前的准备工作\" class=\"headerlink\" title=\"编译前的准备工作\"></a>编译前的准备工作</h2><p><strong>Xcode8.3.3</strong></p>\n<ol>\n<li><p>下载地址:(<a href=\"https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode8.3.3.xip\" target=\"_blank\" rel=\"noopener\">https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode8.3.3.xip</a>)</p>\n</li>\n<li><p>切换Xcode版本<br><code>$ xcode-select --switch $PATH/Xcode.app</code></p>\n</li>\n</ol>\n<p><strong>编译需要的软件包</strong></p>\n<ol>\n<li><p>(<a href=\"https://brew.sh/\" target=\"_blank\" rel=\"noopener\">brew</a> 使用详见官网)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install bash-completion coreutils e2fsprogs findutils\tgit gnu-sed gnupg gnutls imagemagick make maven md5sha1sum openssl repo sdl sdl2</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>环境变量<br><code>$ vim ~/.bash_profile</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/findutils/libexec/gnubin:/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/opt/make/libexec/gnubin:$PATH</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>Set the number of open files to be 1024</strong></p>\n<p><code>ulimit -S -n 1024</code></p>\n<p><strong>Jack memory</strong></p>\n<pre><code>export ANDROID_JACK_VM_ARGS=&quot;-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G&quot;\n</code></pre><p><strong>python2</strong></p>\n<ol>\n<li>编译时用到python2命令，mac里只有python2.7 软链接成python2即可<br><code>$ ln /usr/bin/python2.7 /usr/bin/python2</code></li>\n</ol>\n<p><strong>bison报错</strong></p>\n<ol>\n<li>目前Android源码自带的bison不兼容macOS10.13新引入的一些安全限制。需要打补丁编译并替换源码自带的bison。以后源码更新应该会修复就不需要了<blockquote>\n<p>\b详情可见 <a href=\"https://groups.google.com/forum/?fromgroups#!topic/android-building/D1-c5lZ9Oco\" target=\"_blank\" rel=\"noopener\">android-building</a></p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">​$ cd external/bison</span><br><span class=\"line\"></span><br><span class=\"line\">$ git cherry-pick c0c852bd6fe462b148475476d9124fd740eba160</span><br><span class=\"line\"></span><br><span class=\"line\">$ mm</span><br><span class=\"line\"></span><br><span class=\"line\">$ cp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/bison</span><br></pre></td></tr></table></figure>\n<h2 id=\"除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​\"><a href=\"#除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​\" class=\"headerlink\" title=\"除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​\"></a>除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​</h2>"},{"title":"OpenWRT自动更新软件包脚本","author":"OCD","date":"2018-10-17T03:03:26.000Z","mathjax":true,"_content":"\n首先新建一个shell脚本文件，如/root/autoupgrade.sh，加上执行权限，写入以下几行：\n``` sh\n#!/bin/sh\nopkg update\nfor ipk in $(opkg list-upgradable | awk '$1!~/^kmod|^Multiple/{print $1}'); do\nopkg upgrade $ipk\ndone\n```\n\n然后加入到计划任务中：\n```\n#  文件格式说明\n#  ——分钟 (0 - 59)\n# |  ——小时 (0 - 23)\n# | |  ——日   (1 - 31)\n# | | |  ——月   (1 - 12)\n# | | | |  ——星期 (0 - 7)（星期日=0或7）\n# | | | | |\n# * * * * * 被执行的命令\n# 0 1 * * * /root/autoupgrade.sh\n\n```","source":"_posts/2018-10-17-OpenWRT-update-sh.md","raw":"---\ntitle: OpenWRT自动更新软件包脚本\nauthor: \"OCD\"\ndate: 2018-10-17 11:03:26\nmathjax: true\ncategory:\n    - 路由器\ntags: \n    - OpenWRT\n---\n\n首先新建一个shell脚本文件，如/root/autoupgrade.sh，加上执行权限，写入以下几行：\n``` sh\n#!/bin/sh\nopkg update\nfor ipk in $(opkg list-upgradable | awk '$1!~/^kmod|^Multiple/{print $1}'); do\nopkg upgrade $ipk\ndone\n```\n\n然后加入到计划任务中：\n```\n#  文件格式说明\n#  ——分钟 (0 - 59)\n# |  ——小时 (0 - 23)\n# | |  ——日   (1 - 31)\n# | | |  ——月   (1 - 12)\n# | | | |  ——星期 (0 - 7)（星期日=0或7）\n# | | | | |\n# * * * * * 被执行的命令\n# 0 1 * * * /root/autoupgrade.sh\n\n```","slug":"2018-10-17-OpenWRT-update-sh","published":1,"updated":"2018-11-26T03:32:37.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8ws001ermtug1ncak34","content":"<p>首先新建一个shell脚本文件，如/root/autoupgrade.sh，加上执行权限，写入以下几行：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">opkg update</span><br><span class=\"line\"><span class=\"keyword\">for</span> ipk <span class=\"keyword\">in</span> $(opkg list-upgradable | awk <span class=\"string\">'$1!~/^kmod|^Multiple/&#123;print $1&#125;'</span>); <span class=\"keyword\">do</span></span><br><span class=\"line\">opkg upgrade <span class=\"variable\">$ipk</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>然后加入到计划任务中：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#  文件格式说明</span><br><span class=\"line\">#  ——分钟 (0 - 59)</span><br><span class=\"line\"># |  ——小时 (0 - 23)</span><br><span class=\"line\"># | |  ——日   (1 - 31)</span><br><span class=\"line\"># | | |  ——月   (1 - 12)</span><br><span class=\"line\"># | | | |  ——星期 (0 - 7)（星期日=0或7）</span><br><span class=\"line\"># | | | | |</span><br><span class=\"line\"># * * * * * 被执行的命令</span><br><span class=\"line\"># 0 1 * * * /root/autoupgrade.sh</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>首先新建一个shell脚本文件，如/root/autoupgrade.sh，加上执行权限，写入以下几行：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">opkg update</span><br><span class=\"line\"><span class=\"keyword\">for</span> ipk <span class=\"keyword\">in</span> $(opkg list-upgradable | awk <span class=\"string\">'$1!~/^kmod|^Multiple/&#123;print $1&#125;'</span>); <span class=\"keyword\">do</span></span><br><span class=\"line\">opkg upgrade <span class=\"variable\">$ipk</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br></pre></td></tr></table></figure></p>\n<p>然后加入到计划任务中：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#  文件格式说明</span><br><span class=\"line\">#  ——分钟 (0 - 59)</span><br><span class=\"line\"># |  ——小时 (0 - 23)</span><br><span class=\"line\"># | |  ——日   (1 - 31)</span><br><span class=\"line\"># | | |  ——月   (1 - 12)</span><br><span class=\"line\"># | | | |  ——星期 (0 - 7)（星期日=0或7）</span><br><span class=\"line\"># | | | | |</span><br><span class=\"line\"># * * * * * 被执行的命令</span><br><span class=\"line\"># 0 1 * * * /root/autoupgrade.sh</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Sony_Headphone_Connect_update_google_assistant","date":"2018-11-09T06:53:03.000Z","author":"OCD","_content":"\n前阵子 jd 入了个大法的 WH-1000XM2, 国行缺少了 google assistant,外加大妈的中文提示语音...实在是难受, 然后找刷成国际版的方法. google 一圈貌似已经发布了 2.0.1 的固件, 但配套的程序没提示更新.\n\n## 警告\n\n这篇讲的内容并不受 Sony 官方支持, 本人也并不对此造成的保修作废、耳机变砖、耳机电池爆炸等等问题负责. 尝试此方法带来的任何后果自负. 本文内容仅适用于 WH-1000XM2, 其余型号请自行研究. 本文所提供的内容针对 Sony Headphone Connect 3.2.0 版本.\n\n## 准备工具\n\n* apktool\n* 一个靠谱的文本编辑器\n\n## 过程\n\n> 提醒: 你用别的方法反编译后类、方法、命名空间等的命名方式不一定与我的相同, \b建议善用文本搜索\n\n手机上抓包,发现软件启动的时候请求 `https://info.update.sony.net/HP001/MDRID289202/info/info.xml`, 居然返回的是404. 不负责的猜测了一下 MDRID289202 是机身\b的内部型号(包括版本号). 全局搜索了下源码发现`MDRID289202\b` 在 `com.sony.songpal.mdr.automagic.AutoMagicManager` 里面.\n\n``` java\nprivate URL m9721d(String str, String str2) {\n    String str3 = \"info.update.sony.net\";\n    if (str == null) {\n        throw new IllegalStateException(String.format(Locale.getDefault(), \"%s:code=%d\", new Object[]{\"AutoMagicManagerErrorDomain\", Integer.valueOf(AutoMagicError.NoCategoryID.ordinal())}));\n    } else if (str2 == null) {\n        throw new IllegalStateException(String.format(Locale.getDefault(), \"%s:code=%d\", new Object[]{\"AutoMagicManagerErrorDomain\", Integer.valueOf(AutoMagicError.NoServiceID.ordinal())}));\n    } else {\n        try {\n            return new URL(String.format(Locale.getDefault(), \"http://%s/%s/%s/info/%s\", new Object[]{str3, str, str2, \"info.xml\"}));\n        } catch (Throwable e) {\n            SpLog.m12039a(f5487a, e);\n            return null;\n        }\n    }\n}\n```\n\n这玩意用了两个字符串类的参数, 然后在 URL 里面就是 HP001 和 MDRID289202, 于是猜测假如我篡改这个参数的获取程序使其获取成国外行货的代码, 大概就能强制更新了(前提是硬件完全一样). 顺藤摸瓜检查 m9271d 这方法的调用, 查到了保存这个参数的类 com.sony.songpal.mdr.application.p061b.C1702a.\n\n``` java\nvoid m7942a(C2503b c2503b) {\n    if (Command.fromByteCode(c2503b.m11224a()) == Command.UPDT_RET_PARAM) {\n        cm cmVar = (cm) c2503b;\n        if (cmVar.m11579e() != this.f4438n) {\n            SpLog.m12040b(f4425a, this.f4438n + \" expected, but received \" + cmVar.m11579e());\n            return;\n        }\n        af f = cmVar.m11580f();\n        switch (cmVar.m11579e()) {\n            case CATEGORY_ID:\n                this.f4429e = ((ag) f).m11716a();\n                break;\n            case SERVICE_ID:\n                this.f4430f = ((ag) f).m11716a();\n                break;\n            case NATION_CODE:\n                this.f4431g = ((ag) f).m11716a();\n                break;\n            case LANGUAGE:\n                this.f4432h = ((ag) f).m11716a();\n                break;\n            case SERIAL_NUMBER:\n                this.f4433i = ((ag) f).m11716a();\n                break;\n            case BATTERY_POWER_THRESHOLD:\n                this.f4434j = ((ae) f).m11711a();\n                break;\n            default:\n                throw new IllegalStateException(\"Invalid inquired type \" + cmVar.m11579e() + \" was expected\");\n        }\n        if (this.f4437m != null) {\n            this.f4437m.countDown();\n        }\n    }\n}\n```\n\nSMALI 指令码对应如下(com.sony.songpal.mdr.application.b.a)\n\n```\n.line 156\n    :pswitch_1\n    check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;\n \n    invoke-virtual {v0}, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;->a()Ljava/lang/String;\n \n    move-result-object v0\n \n    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;->f:Ljava/lang/String;\n \n    goto :goto_1\n```\n把这玩意的SERVICE_ID那改成外国行货的ID就好了. 比如\n\n``` java\ncase SERVICE_ID:\n    this.f4430f = \"MDRID123456\";\n    break;\n```\n\n但问题来了, 不知道外国行货的 ID 是多少, 可能ID是连着的, 于是我试了试 MDRID289200, 确认有这个型号. 于是修改 Apktool 解包的 SMALI 为\n\n```\n.line 156\n    :pswitch_1\n    #check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;\n \n    #invoke-virtual {v0}, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;->a()Ljava/lang/String;\n \n    #move-result-object v0\n \n    const-string v0, \"MDRID289200\"\n \n    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;->f:Ljava/lang/String;\n \n    goto :goto_1\n```\n\n重新用 Apktool 打包, 然后用自己的证书签名. 传到手机那, 成功检测到更新. 实测貌似没啥毛病，更新成了国外版本的 2.0.1 固件并且语音变成了英文. 于是自己也试了一下, 更新后貌似确实没啥毛病.\n\n装回原版程序后再次用抓包抓了一下, 发现请求的 service id 已经变成了 MDRID289200. 大概不用担心以后又变回国行固件的问题.\n\n## \b简要教程\n\n1. 用Apktool解包: `apktool d a.apk` (我为了方便文件名改成了a.apk), 这一步会创建一个名为a的文件夹\n2. 进入文件夹, 全局搜索`invoke-virtual {v0}, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;->a()Ljava/lang/String;`, 打开包含这一行的文件.\n3. 跳至 `.line 156`, 把里面的内容修改成我上面所述的内容.\n4. 重新打包: `apktool b a -o b.apk`, 这会生成b.apk\n5. 给b.apk签名, 这个网上都有教程我就不写了\n6. 把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行\n7. 把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行\n\n****","source":"_posts/Sony-Headphone-Connect-update-google-assistant.md","raw":"---\ntitle: Sony_Headphone_Connect_update_google_assistant\ndate: 2018-11-09 14:53:03\nauthor: OCD\ntags:\n  - sony\n  - sony headphone connect\n  - android app 反编译修改\ncategories:\n  - Android App\n---\n\n前阵子 jd 入了个大法的 WH-1000XM2, 国行缺少了 google assistant,外加大妈的中文提示语音...实在是难受, 然后找刷成国际版的方法. google 一圈貌似已经发布了 2.0.1 的固件, 但配套的程序没提示更新.\n\n## 警告\n\n这篇讲的内容并不受 Sony 官方支持, 本人也并不对此造成的保修作废、耳机变砖、耳机电池爆炸等等问题负责. 尝试此方法带来的任何后果自负. 本文内容仅适用于 WH-1000XM2, 其余型号请自行研究. 本文所提供的内容针对 Sony Headphone Connect 3.2.0 版本.\n\n## 准备工具\n\n* apktool\n* 一个靠谱的文本编辑器\n\n## 过程\n\n> 提醒: 你用别的方法反编译后类、方法、命名空间等的命名方式不一定与我的相同, \b建议善用文本搜索\n\n手机上抓包,发现软件启动的时候请求 `https://info.update.sony.net/HP001/MDRID289202/info/info.xml`, 居然返回的是404. 不负责的猜测了一下 MDRID289202 是机身\b的内部型号(包括版本号). 全局搜索了下源码发现`MDRID289202\b` 在 `com.sony.songpal.mdr.automagic.AutoMagicManager` 里面.\n\n``` java\nprivate URL m9721d(String str, String str2) {\n    String str3 = \"info.update.sony.net\";\n    if (str == null) {\n        throw new IllegalStateException(String.format(Locale.getDefault(), \"%s:code=%d\", new Object[]{\"AutoMagicManagerErrorDomain\", Integer.valueOf(AutoMagicError.NoCategoryID.ordinal())}));\n    } else if (str2 == null) {\n        throw new IllegalStateException(String.format(Locale.getDefault(), \"%s:code=%d\", new Object[]{\"AutoMagicManagerErrorDomain\", Integer.valueOf(AutoMagicError.NoServiceID.ordinal())}));\n    } else {\n        try {\n            return new URL(String.format(Locale.getDefault(), \"http://%s/%s/%s/info/%s\", new Object[]{str3, str, str2, \"info.xml\"}));\n        } catch (Throwable e) {\n            SpLog.m12039a(f5487a, e);\n            return null;\n        }\n    }\n}\n```\n\n这玩意用了两个字符串类的参数, 然后在 URL 里面就是 HP001 和 MDRID289202, 于是猜测假如我篡改这个参数的获取程序使其获取成国外行货的代码, 大概就能强制更新了(前提是硬件完全一样). 顺藤摸瓜检查 m9271d 这方法的调用, 查到了保存这个参数的类 com.sony.songpal.mdr.application.p061b.C1702a.\n\n``` java\nvoid m7942a(C2503b c2503b) {\n    if (Command.fromByteCode(c2503b.m11224a()) == Command.UPDT_RET_PARAM) {\n        cm cmVar = (cm) c2503b;\n        if (cmVar.m11579e() != this.f4438n) {\n            SpLog.m12040b(f4425a, this.f4438n + \" expected, but received \" + cmVar.m11579e());\n            return;\n        }\n        af f = cmVar.m11580f();\n        switch (cmVar.m11579e()) {\n            case CATEGORY_ID:\n                this.f4429e = ((ag) f).m11716a();\n                break;\n            case SERVICE_ID:\n                this.f4430f = ((ag) f).m11716a();\n                break;\n            case NATION_CODE:\n                this.f4431g = ((ag) f).m11716a();\n                break;\n            case LANGUAGE:\n                this.f4432h = ((ag) f).m11716a();\n                break;\n            case SERIAL_NUMBER:\n                this.f4433i = ((ag) f).m11716a();\n                break;\n            case BATTERY_POWER_THRESHOLD:\n                this.f4434j = ((ae) f).m11711a();\n                break;\n            default:\n                throw new IllegalStateException(\"Invalid inquired type \" + cmVar.m11579e() + \" was expected\");\n        }\n        if (this.f4437m != null) {\n            this.f4437m.countDown();\n        }\n    }\n}\n```\n\nSMALI 指令码对应如下(com.sony.songpal.mdr.application.b.a)\n\n```\n.line 156\n    :pswitch_1\n    check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;\n \n    invoke-virtual {v0}, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;->a()Ljava/lang/String;\n \n    move-result-object v0\n \n    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;->f:Ljava/lang/String;\n \n    goto :goto_1\n```\n把这玩意的SERVICE_ID那改成外国行货的ID就好了. 比如\n\n``` java\ncase SERVICE_ID:\n    this.f4430f = \"MDRID123456\";\n    break;\n```\n\n但问题来了, 不知道外国行货的 ID 是多少, 可能ID是连着的, 于是我试了试 MDRID289200, 确认有这个型号. 于是修改 Apktool 解包的 SMALI 为\n\n```\n.line 156\n    :pswitch_1\n    #check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;\n \n    #invoke-virtual {v0}, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;->a()Ljava/lang/String;\n \n    #move-result-object v0\n \n    const-string v0, \"MDRID289200\"\n \n    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;->f:Ljava/lang/String;\n \n    goto :goto_1\n```\n\n重新用 Apktool 打包, 然后用自己的证书签名. 传到手机那, 成功检测到更新. 实测貌似没啥毛病，更新成了国外版本的 2.0.1 固件并且语音变成了英文. 于是自己也试了一下, 更新后貌似确实没啥毛病.\n\n装回原版程序后再次用抓包抓了一下, 发现请求的 service id 已经变成了 MDRID289200. 大概不用担心以后又变回国行固件的问题.\n\n## \b简要教程\n\n1. 用Apktool解包: `apktool d a.apk` (我为了方便文件名改成了a.apk), 这一步会创建一个名为a的文件夹\n2. 进入文件夹, 全局搜索`invoke-virtual {v0}, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;->a()Ljava/lang/String;`, 打开包含这一行的文件.\n3. 跳至 `.line 156`, 把里面的内容修改成我上面所述的内容.\n4. 重新打包: `apktool b a -o b.apk`, 这会生成b.apk\n5. 给b.apk签名, 这个网上都有教程我就不写了\n6. 把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行\n7. 把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行\n\n****","slug":"Sony-Headphone-Connect-update-google-assistant","published":1,"updated":"2018-11-26T03:32:37.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wt001jrmtunov40jx4","content":"<p>前阵子 jd 入了个大法的 WH-1000XM2, 国行缺少了 google assistant,外加大妈的中文提示语音…实在是难受, 然后找刷成国际版的方法. google 一圈貌似已经发布了 2.0.1 的固件, 但配套的程序没提示更新.</p>\n<h2 id=\"警告\"><a href=\"#警告\" class=\"headerlink\" title=\"警告\"></a>警告</h2><p>这篇讲的内容并不受 Sony 官方支持, 本人也并不对此造成的保修作废、耳机变砖、耳机电池爆炸等等问题负责. 尝试此方法带来的任何后果自负. 本文内容仅适用于 WH-1000XM2, 其余型号请自行研究. 本文所提供的内容针对 Sony Headphone Connect 3.2.0 版本.</p>\n<h2 id=\"准备工具\"><a href=\"#准备工具\" class=\"headerlink\" title=\"准备工具\"></a>准备工具</h2><ul>\n<li>apktool</li>\n<li>一个靠谱的文本编辑器</li>\n</ul>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><blockquote>\n<p>提醒: 你用别的方法反编译后类、方法、命名空间等的命名方式不一定与我的相同, \b建议善用文本搜索</p>\n</blockquote>\n<p>手机上抓包,发现软件启动的时候请求 <code>https://info.update.sony.net/HP001/MDRID289202/info/info.xml</code>, 居然返回的是404. 不负责的猜测了一下 MDRID289202 是机身\b的内部型号(包括版本号). 全局搜索了下源码发现<code>MDRID289202\b</code> 在 <code>com.sony.songpal.mdr.automagic.AutoMagicManager</code> 里面.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> URL <span class=\"title\">m9721d</span><span class=\"params\">(String str, String str2)</span> </span>&#123;</span><br><span class=\"line\">    String str3 = <span class=\"string\">\"info.update.sony.net\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(String.format(Locale.getDefault(), <span class=\"string\">\"%s:code=%d\"</span>, <span class=\"keyword\">new</span> Object[]&#123;<span class=\"string\">\"AutoMagicManagerErrorDomain\"</span>, Integer.valueOf(AutoMagicError.NoCategoryID.ordinal())&#125;));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (str2 == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(String.format(Locale.getDefault(), <span class=\"string\">\"%s:code=%d\"</span>, <span class=\"keyword\">new</span> Object[]&#123;<span class=\"string\">\"AutoMagicManagerErrorDomain\"</span>, Integer.valueOf(AutoMagicError.NoServiceID.ordinal())&#125;));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> URL(String.format(Locale.getDefault(), <span class=\"string\">\"http://%s/%s/%s/info/%s\"</span>, <span class=\"keyword\">new</span> Object[]&#123;str3, str, str2, <span class=\"string\">\"info.xml\"</span>&#125;));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Throwable e) &#123;</span><br><span class=\"line\">            SpLog.m12039a(f5487a, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这玩意用了两个字符串类的参数, 然后在 URL 里面就是 HP001 和 MDRID289202, 于是猜测假如我篡改这个参数的获取程序使其获取成国外行货的代码, 大概就能强制更新了(前提是硬件完全一样). 顺藤摸瓜检查 m9271d 这方法的调用, 查到了保存这个参数的类 com.sony.songpal.mdr.application.p061b.C1702a.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">m7942a</span><span class=\"params\">(C2503b c2503b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Command.fromByteCode(c2503b.m11224a()) == Command.UPDT_RET_PARAM) &#123;</span><br><span class=\"line\">        cm cmVar = (cm) c2503b;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cmVar.m11579e() != <span class=\"keyword\">this</span>.f4438n) &#123;</span><br><span class=\"line\">            SpLog.m12040b(f4425a, <span class=\"keyword\">this</span>.f4438n + <span class=\"string\">\" expected, but received \"</span> + cmVar.m11579e());</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        af f = cmVar.m11580f();</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (cmVar.m11579e()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> CATEGORY_ID:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4429e = ((ag) f).m11716a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> SERVICE_ID:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4430f = ((ag) f).m11716a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> NATION_CODE:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4431g = ((ag) f).m11716a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> LANGUAGE:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4432h = ((ag) f).m11716a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> SERIAL_NUMBER:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4433i = ((ag) f).m11716a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> BATTERY_POWER_THRESHOLD:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4434j = ((ae) f).m11711a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(<span class=\"string\">\"Invalid inquired type \"</span> + cmVar.m11579e() + <span class=\"string\">\" was expected\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.f4437m != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.f4437m.countDown();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>SMALI 指令码对应如下(com.sony.songpal.mdr.application.b.a)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.line 156</span><br><span class=\"line\">    :pswitch_1</span><br><span class=\"line\">    check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;</span><br><span class=\"line\"> </span><br><span class=\"line\">    invoke-virtual &#123;v0&#125;, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</span><br><span class=\"line\"> </span><br><span class=\"line\">    move-result-object v0</span><br><span class=\"line\"> </span><br><span class=\"line\">    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;-&gt;f:Ljava/lang/String;</span><br><span class=\"line\"> </span><br><span class=\"line\">    goto :goto_1</span><br></pre></td></tr></table></figure>\n<p>把这玩意的SERVICE_ID那改成外国行货的ID就好了. 比如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">case</span> SERVICE_ID:</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.f4430f = <span class=\"string\">\"MDRID123456\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br></pre></td></tr></table></figure>\n<p>但问题来了, 不知道外国行货的 ID 是多少, 可能ID是连着的, 于是我试了试 MDRID289200, 确认有这个型号. 于是修改 Apktool 解包的 SMALI 为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.line 156</span><br><span class=\"line\">    :pswitch_1</span><br><span class=\"line\">    #check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;</span><br><span class=\"line\"> </span><br><span class=\"line\">    #invoke-virtual &#123;v0&#125;, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</span><br><span class=\"line\"> </span><br><span class=\"line\">    #move-result-object v0</span><br><span class=\"line\"> </span><br><span class=\"line\">    const-string v0, &quot;MDRID289200&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\">    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;-&gt;f:Ljava/lang/String;</span><br><span class=\"line\"> </span><br><span class=\"line\">    goto :goto_1</span><br></pre></td></tr></table></figure>\n<p>重新用 Apktool 打包, 然后用自己的证书签名. 传到手机那, 成功检测到更新. 实测貌似没啥毛病，更新成了国外版本的 2.0.1 固件并且语音变成了英文. 于是自己也试了一下, 更新后貌似确实没啥毛病.</p>\n<p>装回原版程序后再次用抓包抓了一下, 发现请求的 service id 已经变成了 MDRID289200. 大概不用担心以后又变回国行固件的问题.</p>\n<h2 id=\"简要教程\"><a href=\"#简要教程\" class=\"headerlink\" title=\"\b简要教程\"></a>\b简要教程</h2><ol>\n<li>用Apktool解包: <code>apktool d a.apk</code> (我为了方便文件名改成了a.apk), 这一步会创建一个名为a的文件夹</li>\n<li>进入文件夹, 全局搜索<code>invoke-virtual {v0}, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</code>, 打开包含这一行的文件.</li>\n<li>跳至 <code>.line 156</code>, 把里面的内容修改成我上面所述的内容.</li>\n<li>重新打包: <code>apktool b a -o b.apk</code>, 这会生成b.apk</li>\n<li>给b.apk签名, 这个网上都有教程我就不写了</li>\n<li>把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行</li>\n<li>把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行</li>\n</ol>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<p>前阵子 jd 入了个大法的 WH-1000XM2, 国行缺少了 google assistant,外加大妈的中文提示语音…实在是难受, 然后找刷成国际版的方法. google 一圈貌似已经发布了 2.0.1 的固件, 但配套的程序没提示更新.</p>\n<h2 id=\"警告\"><a href=\"#警告\" class=\"headerlink\" title=\"警告\"></a>警告</h2><p>这篇讲的内容并不受 Sony 官方支持, 本人也并不对此造成的保修作废、耳机变砖、耳机电池爆炸等等问题负责. 尝试此方法带来的任何后果自负. 本文内容仅适用于 WH-1000XM2, 其余型号请自行研究. 本文所提供的内容针对 Sony Headphone Connect 3.2.0 版本.</p>\n<h2 id=\"准备工具\"><a href=\"#准备工具\" class=\"headerlink\" title=\"准备工具\"></a>准备工具</h2><ul>\n<li>apktool</li>\n<li>一个靠谱的文本编辑器</li>\n</ul>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><blockquote>\n<p>提醒: 你用别的方法反编译后类、方法、命名空间等的命名方式不一定与我的相同, \b建议善用文本搜索</p>\n</blockquote>\n<p>手机上抓包,发现软件启动的时候请求 <code>https://info.update.sony.net/HP001/MDRID289202/info/info.xml</code>, 居然返回的是404. 不负责的猜测了一下 MDRID289202 是机身\b的内部型号(包括版本号). 全局搜索了下源码发现<code>MDRID289202\b</code> 在 <code>com.sony.songpal.mdr.automagic.AutoMagicManager</code> 里面.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> URL <span class=\"title\">m9721d</span><span class=\"params\">(String str, String str2)</span> </span>&#123;</span><br><span class=\"line\">    String str3 = <span class=\"string\">\"info.update.sony.net\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(String.format(Locale.getDefault(), <span class=\"string\">\"%s:code=%d\"</span>, <span class=\"keyword\">new</span> Object[]&#123;<span class=\"string\">\"AutoMagicManagerErrorDomain\"</span>, Integer.valueOf(AutoMagicError.NoCategoryID.ordinal())&#125;));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (str2 == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(String.format(Locale.getDefault(), <span class=\"string\">\"%s:code=%d\"</span>, <span class=\"keyword\">new</span> Object[]&#123;<span class=\"string\">\"AutoMagicManagerErrorDomain\"</span>, Integer.valueOf(AutoMagicError.NoServiceID.ordinal())&#125;));</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> URL(String.format(Locale.getDefault(), <span class=\"string\">\"http://%s/%s/%s/info/%s\"</span>, <span class=\"keyword\">new</span> Object[]&#123;str3, str, str2, <span class=\"string\">\"info.xml\"</span>&#125;));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Throwable e) &#123;</span><br><span class=\"line\">            SpLog.m12039a(f5487a, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这玩意用了两个字符串类的参数, 然后在 URL 里面就是 HP001 和 MDRID289202, 于是猜测假如我篡改这个参数的获取程序使其获取成国外行货的代码, 大概就能强制更新了(前提是硬件完全一样). 顺藤摸瓜检查 m9271d 这方法的调用, 查到了保存这个参数的类 com.sony.songpal.mdr.application.p061b.C1702a.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">m7942a</span><span class=\"params\">(C2503b c2503b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (Command.fromByteCode(c2503b.m11224a()) == Command.UPDT_RET_PARAM) &#123;</span><br><span class=\"line\">        cm cmVar = (cm) c2503b;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (cmVar.m11579e() != <span class=\"keyword\">this</span>.f4438n) &#123;</span><br><span class=\"line\">            SpLog.m12040b(f4425a, <span class=\"keyword\">this</span>.f4438n + <span class=\"string\">\" expected, but received \"</span> + cmVar.m11579e());</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        af f = cmVar.m11580f();</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (cmVar.m11579e()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> CATEGORY_ID:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4429e = ((ag) f).m11716a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> SERVICE_ID:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4430f = ((ag) f).m11716a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> NATION_CODE:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4431g = ((ag) f).m11716a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> LANGUAGE:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4432h = ((ag) f).m11716a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> SERIAL_NUMBER:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4433i = ((ag) f).m11716a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> BATTERY_POWER_THRESHOLD:</span><br><span class=\"line\">                <span class=\"keyword\">this</span>.f4434j = ((ae) f).m11711a();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(<span class=\"string\">\"Invalid inquired type \"</span> + cmVar.m11579e() + <span class=\"string\">\" was expected\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.f4437m != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.f4437m.countDown();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>SMALI 指令码对应如下(com.sony.songpal.mdr.application.b.a)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.line 156</span><br><span class=\"line\">    :pswitch_1</span><br><span class=\"line\">    check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;</span><br><span class=\"line\"> </span><br><span class=\"line\">    invoke-virtual &#123;v0&#125;, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</span><br><span class=\"line\"> </span><br><span class=\"line\">    move-result-object v0</span><br><span class=\"line\"> </span><br><span class=\"line\">    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;-&gt;f:Ljava/lang/String;</span><br><span class=\"line\"> </span><br><span class=\"line\">    goto :goto_1</span><br></pre></td></tr></table></figure>\n<p>把这玩意的SERVICE_ID那改成外国行货的ID就好了. 比如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">case</span> SERVICE_ID:</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.f4430f = <span class=\"string\">\"MDRID123456\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br></pre></td></tr></table></figure>\n<p>但问题来了, 不知道外国行货的 ID 是多少, 可能ID是连着的, 于是我试了试 MDRID289200, 确认有这个型号. 于是修改 Apktool 解包的 SMALI 为</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.line 156</span><br><span class=\"line\">    :pswitch_1</span><br><span class=\"line\">    #check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;</span><br><span class=\"line\"> </span><br><span class=\"line\">    #invoke-virtual &#123;v0&#125;, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</span><br><span class=\"line\"> </span><br><span class=\"line\">    #move-result-object v0</span><br><span class=\"line\"> </span><br><span class=\"line\">    const-string v0, &quot;MDRID289200&quot;</span><br><span class=\"line\"> </span><br><span class=\"line\">    iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;-&gt;f:Ljava/lang/String;</span><br><span class=\"line\"> </span><br><span class=\"line\">    goto :goto_1</span><br></pre></td></tr></table></figure>\n<p>重新用 Apktool 打包, 然后用自己的证书签名. 传到手机那, 成功检测到更新. 实测貌似没啥毛病，更新成了国外版本的 2.0.1 固件并且语音变成了英文. 于是自己也试了一下, 更新后貌似确实没啥毛病.</p>\n<p>装回原版程序后再次用抓包抓了一下, 发现请求的 service id 已经变成了 MDRID289200. 大概不用担心以后又变回国行固件的问题.</p>\n<h2 id=\"简要教程\"><a href=\"#简要教程\" class=\"headerlink\" title=\"\b简要教程\"></a>\b简要教程</h2><ol>\n<li>用Apktool解包: <code>apktool d a.apk</code> (我为了方便文件名改成了a.apk), 这一步会创建一个名为a的文件夹</li>\n<li>进入文件夹, 全局搜索<code>invoke-virtual {v0}, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;</code>, 打开包含这一行的文件.</li>\n<li>跳至 <code>.line 156</code>, 把里面的内容修改成我上面所述的内容.</li>\n<li>重新打包: <code>apktool b a -o b.apk</code>, 这会生成b.apk</li>\n<li>给b.apk签名, 这个网上都有教程我就不写了</li>\n<li>把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行</li>\n<li>把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行</li>\n</ol>\n<hr>\n"},{"title":"clover 注入白果三码实现 imessage 正常使用","author":"OCD","date":"2018-09-21T01:11:00.000Z","_content":"__注入白果三码实现 iMessage 与 FaceTime 正常使用__\n\n<!-- more -->\n\n## 前言\n\n\n> 此法需建立在你有白苹果信息的情况下才能使用\n> 完成后你将登陆任意appleid都不需要打电话激活\n\n## 工具\n首先你需要 iMessageDebug 这个工具来读取白果的三码\n\niMessageDebug 使用起来很方便首先需要一台白苹果，下载到机器上，或者U盘拷贝。。。。\n\n1. 将 iMessageDebug 文件拖到桌面\n2. 打开终端\n3. 输入（chmod a+x ）桌面的 iMessageDebug 拖入终端按回车键（也许要输入用户密码）\n3. sh iMessageDebug\n\n这样就获得了三码了，选择y是将三码生成文本发送到 Download 文件夹。\n\n## Clover 的配置\n\n![overwrote existing file](/images/image.png)\n\n填入主板MLB序列号和ROM（MLB就是BoardSerialNumber：XXXXXX）\n\n![upload successful](/images/image1.png)\n\n1. BoardSerialNumber 上写入你的mlb码（其实可不写）\n2. “重点” smuuid 上写你的Hardware UUID，一定要照搬 不要改写后 12 位为 rom 码\n3. 序列号填写\n\n![upload successful](/images/image2.png)\n\n1. (重点)写入你的 System-ID\n2. 注入 kext 是配置 clover 必选的\n3. 就是最重点的了 一定务必开启 inject System ID,如果不选的话，会导致 custom uuid 和 System-ID 数据颠倒","source":"_posts/2018-9-21-clover-UUID.md","raw":"---\ntitle: clover 注入白果三码实现 imessage 正常使用\nauthor: OCD\ntags:\n  - MacOS\n  - Clover\n  - iMessage\n  - FaceTime\n  - ''\ncategories:\n  - 黑苹果\ndate: 2018-09-21 09:11:00\n---\n__注入白果三码实现 iMessage 与 FaceTime 正常使用__\n\n<!-- more -->\n\n## 前言\n\n\n> 此法需建立在你有白苹果信息的情况下才能使用\n> 完成后你将登陆任意appleid都不需要打电话激活\n\n## 工具\n首先你需要 iMessageDebug 这个工具来读取白果的三码\n\niMessageDebug 使用起来很方便首先需要一台白苹果，下载到机器上，或者U盘拷贝。。。。\n\n1. 将 iMessageDebug 文件拖到桌面\n2. 打开终端\n3. 输入（chmod a+x ）桌面的 iMessageDebug 拖入终端按回车键（也许要输入用户密码）\n3. sh iMessageDebug\n\n这样就获得了三码了，选择y是将三码生成文本发送到 Download 文件夹。\n\n## Clover 的配置\n\n![overwrote existing file](/images/image.png)\n\n填入主板MLB序列号和ROM（MLB就是BoardSerialNumber：XXXXXX）\n\n![upload successful](/images/image1.png)\n\n1. BoardSerialNumber 上写入你的mlb码（其实可不写）\n2. “重点” smuuid 上写你的Hardware UUID，一定要照搬 不要改写后 12 位为 rom 码\n3. 序列号填写\n\n![upload successful](/images/image2.png)\n\n1. (重点)写入你的 System-ID\n2. 注入 kext 是配置 clover 必选的\n3. 就是最重点的了 一定务必开启 inject System ID,如果不选的话，会导致 custom uuid 和 System-ID 数据颠倒","slug":"2018-9-21-clover-UUID","published":1,"updated":"2018-11-26T03:32:37.621Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wu001lrmtuwlb11rwx","content":"<p><strong>注入白果三码实现 iMessage 与 FaceTime 正常使用</strong></p>\n<a id=\"more\"></a>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><blockquote>\n<p>此法需建立在你有白苹果信息的情况下才能使用<br>完成后你将登陆任意appleid都不需要打电话激活</p>\n</blockquote>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><p>首先你需要 iMessageDebug 这个工具来读取白果的三码</p>\n<p>iMessageDebug 使用起来很方便首先需要一台白苹果，下载到机器上，或者U盘拷贝。。。。</p>\n<ol>\n<li>将 iMessageDebug 文件拖到桌面</li>\n<li>打开终端</li>\n<li>输入（chmod a+x ）桌面的 iMessageDebug 拖入终端按回车键（也许要输入用户密码）</li>\n<li>sh iMessageDebug</li>\n</ol>\n<p>这样就获得了三码了，选择y是将三码生成文本发送到 Download 文件夹。</p>\n<h2 id=\"Clover-的配置\"><a href=\"#Clover-的配置\" class=\"headerlink\" title=\"Clover 的配置\"></a>Clover 的配置</h2><p><img src=\"/images/image.png\" alt=\"overwrote existing file\"></p>\n<p>填入主板MLB序列号和ROM（MLB就是BoardSerialNumber：XXXXXX）</p>\n<p><img src=\"/images/image1.png\" alt=\"upload successful\"></p>\n<ol>\n<li>BoardSerialNumber 上写入你的mlb码（其实可不写）</li>\n<li>“重点” smuuid 上写你的Hardware UUID，一定要照搬 不要改写后 12 位为 rom 码</li>\n<li>序列号填写</li>\n</ol>\n<p><img src=\"/images/image2.png\" alt=\"upload successful\"></p>\n<ol>\n<li>(重点)写入你的 System-ID</li>\n<li>注入 kext 是配置 clover 必选的</li>\n<li>就是最重点的了 一定务必开启 inject System ID,如果不选的话，会导致 custom uuid 和 System-ID 数据颠倒</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><strong>注入白果三码实现 iMessage 与 FaceTime 正常使用</strong></p>","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><blockquote>\n<p>此法需建立在你有白苹果信息的情况下才能使用<br>完成后你将登陆任意appleid都不需要打电话激活</p>\n</blockquote>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><p>首先你需要 iMessageDebug 这个工具来读取白果的三码</p>\n<p>iMessageDebug 使用起来很方便首先需要一台白苹果，下载到机器上，或者U盘拷贝。。。。</p>\n<ol>\n<li>将 iMessageDebug 文件拖到桌面</li>\n<li>打开终端</li>\n<li>输入（chmod a+x ）桌面的 iMessageDebug 拖入终端按回车键（也许要输入用户密码）</li>\n<li>sh iMessageDebug</li>\n</ol>\n<p>这样就获得了三码了，选择y是将三码生成文本发送到 Download 文件夹。</p>\n<h2 id=\"Clover-的配置\"><a href=\"#Clover-的配置\" class=\"headerlink\" title=\"Clover 的配置\"></a>Clover 的配置</h2><p><img src=\"/images/image.png\" alt=\"overwrote existing file\"></p>\n<p>填入主板MLB序列号和ROM（MLB就是BoardSerialNumber：XXXXXX）</p>\n<p><img src=\"/images/image1.png\" alt=\"upload successful\"></p>\n<ol>\n<li>BoardSerialNumber 上写入你的mlb码（其实可不写）</li>\n<li>“重点” smuuid 上写你的Hardware UUID，一定要照搬 不要改写后 12 位为 rom 码</li>\n<li>序列号填写</li>\n</ol>\n<p><img src=\"/images/image2.png\" alt=\"upload successful\"></p>\n<ol>\n<li>(重点)写入你的 System-ID</li>\n<li>注入 kext 是配置 clover 必选的</li>\n<li>就是最重点的了 一定务必开启 inject System ID,如果不选的话，会导致 custom uuid 和 System-ID 数据颠倒</li>\n</ol>"},{"title":"Next 主题自动更换背景图片","author":"OCD","date":"2018-09-29T01:44:00.000Z","_content":"如果觉得 NexT的空白主题看腻了或者太多人用觉得不够个性化，那么不妨试试自动更新背景图片。\n\n<!-- more -->\n\n## 实现原理\n\n### 图片来源\n\n自动更换背景的实现是修改添加背景的 css 样式实现。图片来源是 [unsplash](https://source.unsplash.com/)\n\n这个网站，里面不仅免费提供了很多高清美图，而且还提供api接口调用，实在是良心。这里实现的原理也是调用了这个网站的接口。\n\n## 修改背景样式\n\n修改themes\\next\\source\\css\\\n_custom\\custom.styl文件，这个是Next故意留给用户自己个性化定制一些样式的文件，添加以下代码：\n\n``` CSS\nbody {\n\n    background:url(https://source.unsplash.com/random/1600x900);\n\n    background-repeat: no-repeat;\n\n    background-attachment:fixed;\n\n    background-position:50% 50%;\n\n}\n```\n\n如果自己不喜欢这个网址提供的图片做背景，那么修改url()里面的路径即可。repeat、attachment、position就是调整图片的位置，不重复出现、不滚动等等。\n\n## 修改不透明度\n\n完成这一步其实背景就会自动更换了，但是会出现一个问题，因为next主题的背景是纯透明的，这样子就造成背景图片的影响看不见文字，这对于博客来说肯定不行。\n\n那么就需要调整背景的不透明度了。同样是修改themes\\next\\source\\css _custom\\custom.styl文件。在后面添加如下代码\n\n``` CSS\n.main-inner { \n\n    margin-top: 60px;\n\n    padding: 60px 60px 60px 60px;\n\n    background: #fff;\n\n\topacity: 0.8;\n\n    min-height: 500px;\n\n}\n```\n\n* background: #fff; 白色\n* opacity: 0.8;不透明度\n\n## 效果\n\n完成上述设置，我们来看看效果\n\n![](https://ws3.sinaimg.cn/large/006tNc79gy1fvq67w13yqj31kw0x2u0z.jpg)","source":"_posts/change-background.md","raw":"---\ntitle: Next 主题自动更换背景图片\nauthor: OCD\ntags:\n  - theme-NexT\n  - unsplash\ncategories:\n  - Hexo\ndate: 2018-09-29 09:44:00\n---\n如果觉得 NexT的空白主题看腻了或者太多人用觉得不够个性化，那么不妨试试自动更新背景图片。\n\n<!-- more -->\n\n## 实现原理\n\n### 图片来源\n\n自动更换背景的实现是修改添加背景的 css 样式实现。图片来源是 [unsplash](https://source.unsplash.com/)\n\n这个网站，里面不仅免费提供了很多高清美图，而且还提供api接口调用，实在是良心。这里实现的原理也是调用了这个网站的接口。\n\n## 修改背景样式\n\n修改themes\\next\\source\\css\\\n_custom\\custom.styl文件，这个是Next故意留给用户自己个性化定制一些样式的文件，添加以下代码：\n\n``` CSS\nbody {\n\n    background:url(https://source.unsplash.com/random/1600x900);\n\n    background-repeat: no-repeat;\n\n    background-attachment:fixed;\n\n    background-position:50% 50%;\n\n}\n```\n\n如果自己不喜欢这个网址提供的图片做背景，那么修改url()里面的路径即可。repeat、attachment、position就是调整图片的位置，不重复出现、不滚动等等。\n\n## 修改不透明度\n\n完成这一步其实背景就会自动更换了，但是会出现一个问题，因为next主题的背景是纯透明的，这样子就造成背景图片的影响看不见文字，这对于博客来说肯定不行。\n\n那么就需要调整背景的不透明度了。同样是修改themes\\next\\source\\css _custom\\custom.styl文件。在后面添加如下代码\n\n``` CSS\n.main-inner { \n\n    margin-top: 60px;\n\n    padding: 60px 60px 60px 60px;\n\n    background: #fff;\n\n\topacity: 0.8;\n\n    min-height: 500px;\n\n}\n```\n\n* background: #fff; 白色\n* opacity: 0.8;不透明度\n\n## 效果\n\n完成上述设置，我们来看看效果\n\n![](https://ws3.sinaimg.cn/large/006tNc79gy1fvq67w13yqj31kw0x2u0z.jpg)","slug":"change-background","published":1,"updated":"2018-11-26T03:32:37.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wv001qrmtue8pmixuy","content":"<p>如果觉得 NexT的空白主题看腻了或者太多人用觉得不够个性化，那么不妨试试自动更新背景图片。</p>\n<a id=\"more\"></a>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><h3 id=\"图片来源\"><a href=\"#图片来源\" class=\"headerlink\" title=\"图片来源\"></a>图片来源</h3><p>自动更换背景的实现是修改添加背景的 css 样式实现。图片来源是 <a href=\"https://source.unsplash.com/\" target=\"_blank\" rel=\"noopener\">unsplash</a></p>\n<p>这个网站，里面不仅免费提供了很多高清美图，而且还提供api接口调用，实在是良心。这里实现的原理也是调用了这个网站的接口。</p>\n<h2 id=\"修改背景样式\"><a href=\"#修改背景样式\" class=\"headerlink\" title=\"修改背景样式\"></a>修改背景样式</h2><p>修改themes\\next\\source\\css\\<br>_custom\\custom.styl文件，这个是Next故意留给用户自己个性化定制一些样式的文件，添加以下代码：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"built_in\">url</span>(https://source.unsplash.com/random/1600x900);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">background-attachment</span>:fixed;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>:<span class=\"number\">50%</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果自己不喜欢这个网址提供的图片做背景，那么修改url()里面的路径即可。repeat、attachment、position就是调整图片的位置，不重复出现、不滚动等等。</p>\n<h2 id=\"修改不透明度\"><a href=\"#修改不透明度\" class=\"headerlink\" title=\"修改不透明度\"></a>修改不透明度</h2><p>完成这一步其实背景就会自动更换了，但是会出现一个问题，因为next主题的背景是纯透明的，这样子就造成背景图片的影响看不见文字，这对于博客来说肯定不行。</p>\n<p>那么就需要调整背景的不透明度了。同样是修改themes\\next\\source\\css _custom\\custom.styl文件。在后面添加如下代码</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.main-inner</span> &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">60px</span> <span class=\"number\">60px</span> <span class=\"number\">60px</span> <span class=\"number\">60px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">opacity</span>: <span class=\"number\">0.8</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">min-height</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>background: #fff; 白色</li>\n<li>opacity: 0.8;不透明度</li>\n</ul>\n<h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><p>完成上述设置，我们来看看效果</p>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tNc79gy1fvq67w13yqj31kw0x2u0z.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>如果觉得 NexT的空白主题看腻了或者太多人用觉得不够个性化，那么不妨试试自动更新背景图片。</p>","more":"<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><h3 id=\"图片来源\"><a href=\"#图片来源\" class=\"headerlink\" title=\"图片来源\"></a>图片来源</h3><p>自动更换背景的实现是修改添加背景的 css 样式实现。图片来源是 <a href=\"https://source.unsplash.com/\" target=\"_blank\" rel=\"noopener\">unsplash</a></p>\n<p>这个网站，里面不仅免费提供了很多高清美图，而且还提供api接口调用，实在是良心。这里实现的原理也是调用了这个网站的接口。</p>\n<h2 id=\"修改背景样式\"><a href=\"#修改背景样式\" class=\"headerlink\" title=\"修改背景样式\"></a>修改背景样式</h2><p>修改themes\\next\\source\\css\\<br>_custom\\custom.styl文件，这个是Next故意留给用户自己个性化定制一些样式的文件，添加以下代码：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">background</span>:<span class=\"built_in\">url</span>(https://source.unsplash.com/random/1600x900);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">background-repeat</span>: no-repeat;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">background-attachment</span>:fixed;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>:<span class=\"number\">50%</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果自己不喜欢这个网址提供的图片做背景，那么修改url()里面的路径即可。repeat、attachment、position就是调整图片的位置，不重复出现、不滚动等等。</p>\n<h2 id=\"修改不透明度\"><a href=\"#修改不透明度\" class=\"headerlink\" title=\"修改不透明度\"></a>修改不透明度</h2><p>完成这一步其实背景就会自动更换了，但是会出现一个问题，因为next主题的背景是纯透明的，这样子就造成背景图片的影响看不见文字，这对于博客来说肯定不行。</p>\n<p>那么就需要调整背景的不透明度了。同样是修改themes\\next\\source\\css _custom\\custom.styl文件。在后面添加如下代码</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.main-inner</span> &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">60px</span> <span class=\"number\">60px</span> <span class=\"number\">60px</span> <span class=\"number\">60px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"attribute\">opacity</span>: <span class=\"number\">0.8</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">min-height</span>: <span class=\"number\">500px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>background: #fff; 白色</li>\n<li>opacity: 0.8;不透明度</li>\n</ul>\n<h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><p>完成上述设置，我们来看看效果</p>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tNc79gy1fvq67w13yqj31kw0x2u0z.jpg\" alt=\"\"></p>"},{"title":"raspi 上 CP2102 使用","author":"OCD","date":"2019-01-14T03:36:46.000Z","_content":"\n## 测试 usb hub 接 cp2102 模块的 usb 转串口在 raspi 上的数据收发 \n\n1. 将 hub 的一个 usb 口的4个引脚与 cp2102 模块的 usb 口的4个引脚进行焊接(注意线的对应, 红、白、绿、黑，vcc、d-、d+、gnd)\n\n2. 用一个母口的杜邦线, 短接 cp2102 模块引出来的 txd 与 rxd.\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fz5yxib2ncj30ts06qwkz.jpg)\n\n3. 在 raspi 上安装 minicom, 并进行配置, sudo minicom -s (不能直接 minicom，权限不够), 注意设置的一处为 serial port setup \n\n![](https://ws1.sinaimg.cn/large/006tNc79gy1fz5yokj59tj30oa0l6wsk.jpg)\n\n的 a-serial device 处, 改为 /dev/ttyUSB0 (与usb转串口的对应), f-hardware flow control 改为 no (时间允许的话, 也可以测试一下, yes)\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fz5yr15qw2j30uy0jc4gf.jpg)\n\n4. 用 minicom 发送文件, 可以看到 minicom 的界面中也会收到发送的数据, 只不过如果发送的文件中的数据太多, 收到的是数据量不够, 仅会收到末尾几行.(这个猜测可能与 cp2102 的 fifo 的大小有关). \n\n例:\n![](https://ws3.sinaimg.cn/large/006tNc79gy1fz5yuffy99j30u0199u0x.jpg)\n\n经测试, 当 e-bps/par/bits 设为 6n1 时或 6n2 或 6e1 或 6e2 时, 能接收到数据, 但打印出来的不是原始数据.\n如: \n原始数据为 \n1 test1 \n2 test2 \n3 test3 \n4 test4 \n5 test5 \n6 test6 \n而接收到的数据为 \n1 4%341 \n2 4%342 \n3 4%343 \n4 4%344 \n5 4%345 \n6 4%346 \n当设为 7n1、7n2、7e1 或 7e2 时, 及 8n1 等 8 个数据位的其他情况时, 都可以接收到正确的数据.\n而当设为 5 个数据位时, 可能收不到数据, 也可能收到了, 但屏幕上是没显示东西的.\n总之数据位设为 5 和 6 时, 是不能正确收发数据的, 数据位设为 7 或 8 时, 可以正确地收发数据.","source":"_posts/raspi上CP2102使用.md","raw":"---\ntitle: raspi 上 CP2102 使用\nauthor: \"OCD\"\ndate: 2019-01-14 11:36:46\ncategory:\n    - Raspi\ntags:\n    - raspi\n    - Serial Communications\n---\n\n## 测试 usb hub 接 cp2102 模块的 usb 转串口在 raspi 上的数据收发 \n\n1. 将 hub 的一个 usb 口的4个引脚与 cp2102 模块的 usb 口的4个引脚进行焊接(注意线的对应, 红、白、绿、黑，vcc、d-、d+、gnd)\n\n2. 用一个母口的杜邦线, 短接 cp2102 模块引出来的 txd 与 rxd.\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fz5yxib2ncj30ts06qwkz.jpg)\n\n3. 在 raspi 上安装 minicom, 并进行配置, sudo minicom -s (不能直接 minicom，权限不够), 注意设置的一处为 serial port setup \n\n![](https://ws1.sinaimg.cn/large/006tNc79gy1fz5yokj59tj30oa0l6wsk.jpg)\n\n的 a-serial device 处, 改为 /dev/ttyUSB0 (与usb转串口的对应), f-hardware flow control 改为 no (时间允许的话, 也可以测试一下, yes)\n\n![](https://ws2.sinaimg.cn/large/006tNc79gy1fz5yr15qw2j30uy0jc4gf.jpg)\n\n4. 用 minicom 发送文件, 可以看到 minicom 的界面中也会收到发送的数据, 只不过如果发送的文件中的数据太多, 收到的是数据量不够, 仅会收到末尾几行.(这个猜测可能与 cp2102 的 fifo 的大小有关). \n\n例:\n![](https://ws3.sinaimg.cn/large/006tNc79gy1fz5yuffy99j30u0199u0x.jpg)\n\n经测试, 当 e-bps/par/bits 设为 6n1 时或 6n2 或 6e1 或 6e2 时, 能接收到数据, 但打印出来的不是原始数据.\n如: \n原始数据为 \n1 test1 \n2 test2 \n3 test3 \n4 test4 \n5 test5 \n6 test6 \n而接收到的数据为 \n1 4%341 \n2 4%342 \n3 4%343 \n4 4%344 \n5 4%345 \n6 4%346 \n当设为 7n1、7n2、7e1 或 7e2 时, 及 8n1 等 8 个数据位的其他情况时, 都可以接收到正确的数据.\n而当设为 5 个数据位时, 可能收不到数据, 也可能收到了, 但屏幕上是没显示东西的.\n总之数据位设为 5 和 6 时, 是不能正确收发数据的, 数据位设为 7 或 8 时, 可以正确地收发数据.","slug":"raspi上CP2102使用","published":1,"updated":"2019-01-14T03:48:53.183Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8ww001srmtu63qlvqqi","content":"<h2 id=\"测试-usb-hub-接-cp2102-模块的-usb-转串口在-raspi-上的数据收发\"><a href=\"#测试-usb-hub-接-cp2102-模块的-usb-转串口在-raspi-上的数据收发\" class=\"headerlink\" title=\"测试 usb hub 接 cp2102 模块的 usb 转串口在 raspi 上的数据收发\"></a>测试 usb hub 接 cp2102 模块的 usb 转串口在 raspi 上的数据收发</h2><ol>\n<li><p>将 hub 的一个 usb 口的4个引脚与 cp2102 模块的 usb 口的4个引脚进行焊接(注意线的对应, 红、白、绿、黑，vcc、d-、d+、gnd)</p>\n</li>\n<li><p>用一个母口的杜邦线, 短接 cp2102 模块引出来的 txd 与 rxd.</p>\n</li>\n</ol>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fz5yxib2ncj30ts06qwkz.jpg\" alt=\"\"></p>\n<ol start=\"3\">\n<li>在 raspi 上安装 minicom, 并进行配置, sudo minicom -s (不能直接 minicom，权限不够), 注意设置的一处为 serial port setup </li>\n</ol>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tNc79gy1fz5yokj59tj30oa0l6wsk.jpg\" alt=\"\"></p>\n<p>的 a-serial device 处, 改为 /dev/ttyUSB0 (与usb转串口的对应), f-hardware flow control 改为 no (时间允许的话, 也可以测试一下, yes)</p>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fz5yr15qw2j30uy0jc4gf.jpg\" alt=\"\"></p>\n<ol start=\"4\">\n<li>用 minicom 发送文件, 可以看到 minicom 的界面中也会收到发送的数据, 只不过如果发送的文件中的数据太多, 收到的是数据量不够, 仅会收到末尾几行.(这个猜测可能与 cp2102 的 fifo 的大小有关). </li>\n</ol>\n<p>例:<br><img src=\"https://ws3.sinaimg.cn/large/006tNc79gy1fz5yuffy99j30u0199u0x.jpg\" alt=\"\"></p>\n<p>经测试, 当 e-bps/par/bits 设为 6n1 时或 6n2 或 6e1 或 6e2 时, 能接收到数据, 但打印出来的不是原始数据.<br>如:<br>原始数据为<br>1 test1<br>2 test2<br>3 test3<br>4 test4<br>5 test5<br>6 test6<br>而接收到的数据为<br>1 4%341<br>2 4%342<br>3 4%343<br>4 4%344<br>5 4%345<br>6 4%346<br>当设为 7n1、7n2、7e1 或 7e2 时, 及 8n1 等 8 个数据位的其他情况时, 都可以接收到正确的数据.<br>而当设为 5 个数据位时, 可能收不到数据, 也可能收到了, 但屏幕上是没显示东西的.<br>总之数据位设为 5 和 6 时, 是不能正确收发数据的, 数据位设为 7 或 8 时, 可以正确地收发数据.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"测试-usb-hub-接-cp2102-模块的-usb-转串口在-raspi-上的数据收发\"><a href=\"#测试-usb-hub-接-cp2102-模块的-usb-转串口在-raspi-上的数据收发\" class=\"headerlink\" title=\"测试 usb hub 接 cp2102 模块的 usb 转串口在 raspi 上的数据收发\"></a>测试 usb hub 接 cp2102 模块的 usb 转串口在 raspi 上的数据收发</h2><ol>\n<li><p>将 hub 的一个 usb 口的4个引脚与 cp2102 模块的 usb 口的4个引脚进行焊接(注意线的对应, 红、白、绿、黑，vcc、d-、d+、gnd)</p>\n</li>\n<li><p>用一个母口的杜邦线, 短接 cp2102 模块引出来的 txd 与 rxd.</p>\n</li>\n</ol>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fz5yxib2ncj30ts06qwkz.jpg\" alt=\"\"></p>\n<ol start=\"3\">\n<li>在 raspi 上安装 minicom, 并进行配置, sudo minicom -s (不能直接 minicom，权限不够), 注意设置的一处为 serial port setup </li>\n</ol>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tNc79gy1fz5yokj59tj30oa0l6wsk.jpg\" alt=\"\"></p>\n<p>的 a-serial device 处, 改为 /dev/ttyUSB0 (与usb转串口的对应), f-hardware flow control 改为 no (时间允许的话, 也可以测试一下, yes)</p>\n<p><img src=\"https://ws2.sinaimg.cn/large/006tNc79gy1fz5yr15qw2j30uy0jc4gf.jpg\" alt=\"\"></p>\n<ol start=\"4\">\n<li>用 minicom 发送文件, 可以看到 minicom 的界面中也会收到发送的数据, 只不过如果发送的文件中的数据太多, 收到的是数据量不够, 仅会收到末尾几行.(这个猜测可能与 cp2102 的 fifo 的大小有关). </li>\n</ol>\n<p>例:<br><img src=\"https://ws3.sinaimg.cn/large/006tNc79gy1fz5yuffy99j30u0199u0x.jpg\" alt=\"\"></p>\n<p>经测试, 当 e-bps/par/bits 设为 6n1 时或 6n2 或 6e1 或 6e2 时, 能接收到数据, 但打印出来的不是原始数据.<br>如:<br>原始数据为<br>1 test1<br>2 test2<br>3 test3<br>4 test4<br>5 test5<br>6 test6<br>而接收到的数据为<br>1 4%341<br>2 4%342<br>3 4%343<br>4 4%344<br>5 4%345<br>6 4%346<br>当设为 7n1、7n2、7e1 或 7e2 时, 及 8n1 等 8 个数据位的其他情况时, 都可以接收到正确的数据.<br>而当设为 5 个数据位时, 可能收不到数据, 也可能收到了, 但屏幕上是没显示东西的.<br>总之数据位设为 5 和 6 时, 是不能正确收发数据的, 数据位设为 7 或 8 时, 可以正确地收发数据.</p>\n"},{"title":"NexT主题中集成gitalk评论系统","date":"2018-12-12T07:37:46.000Z","author":"OCD","Category":["Next"],"_content":"\n记录在NexT主题中添加gitalk评论系统的步骤。\n\ngitalk：一个基于 Github Issue 和 Preact 开发的评论插件\n详情Demo可见：https://gitalk.github.io/\n\n\n## Register Application\n\n在GitHub上注册新应用，链接：https://github.com/settings/applications/new\n![](https://ws3.sinaimg.cn/large/006tNbRwgy1fy407a45v3j30iw0d93zg.jpg)\n\n参数说明：\nApplication name： # 应用名称，随意\nHomepage URL： # 网站URL [example link](https://ocd0711.github.ooo)\nApplication description # 描述，随意\nAuthorization callback URL：# 网站URL [example link](https://ocd0711.github.ooo)\n\n点击注册后，页面跳转如下，其中Client ID和Client Secret在后面的配置中需要用到，到时复制粘贴即可:\n![](https://ws4.sinaimg.cn/large/006tNbRwgy1fy4087vmjmj31rl0u0wjr.jpg)\n\n\n## gitalk.swig\n\n新建`/layout/_third-party/comments/gitalk.swig`文件，并添加内容：\n\n``` js\n{% if page.comments && theme.gitalk.enable %}\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\">\n  <script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n   <script type=\"text/javascript\">\n        var gitalk = new Gitalk({\n          clientID: '{{ theme.gitalk.ClientID }}',\n          clientSecret: '{{ theme.gitalk.ClientSecret }}',\n          repo: '{{ theme.gitalk.repo }}',\n          owner: '{{ theme.gitalk.githubID }}',\n          admin: ['{{ theme.gitalk.adminUser }}'],\n          id: location.pathname,\n          distractionFreeMode: '{{ theme.gitalk.distractionFreeMode }}'\n        })\n        gitalk.render('gitalk-container')           \n       </script>\n{% endif %}\n```\n\n\n## comments.swig\n\n修改`/layout/_partials/comments.swig`，添加内容如下，与前面的elseif同一级别上：\n\n```\n{% elseif theme.gitalk.enable %}\n <div id=\"gitalk-container\"></div>\n```\n\n## index.swig\n\n修改l`ayout/_third-party/comments/index.swig`，在最后一行添加内容：\n\n```\n{% include 'gitalk.swig' %}\n```\n\n\n## gitalk.styl\n\n新建`/source/css/_common/components/third-party/gitalk.styl`文件，添加内容：\n\n```\n.gt-header a, .gt-comments a, .gt-popup a\n  border-bottom: none;\n.gt-container .gt-popup .gt-action.is--active:before\n  top: 0.7em;\n```\n\n\n## third-party.styl\n\n修改`/source/css/_common/components/third-party/third-party.styl`，在最后一行上添加内容，引入样式：\n\n```\n@import \"gitalk\";\n```\n\n\n## _config.yml\n\n在主题配置文件next/_config.yml中添加如下内容：\n\n```\ngitalk:\n  enable: true\n  githubID: github帐号  # OCD0711   \n  repo: 仓库名称   # 例：ocd0711.github.io\n  ClientID: Client ID\n  ClientSecret: Client Secret\n  adminUser: github帐号 #指定可初始化评论账户\n  distractionFreeMode: true\n```\n\n以上就是NexT中添加gitalk评论的配置，博客上传到GitHub上后，打开页面进入某一博客内容下，就可看到评论处。","source":"_posts/NexT主题中集成gitalk评论系统.md","raw":"---\ntitle: NexT主题中集成gitalk评论系统\ndate: 2018-12-12 15:37:46\nauthor: \"OCD\"\nCategory:\n    - Next\ntags: \n    - Next\n    - Hexo\n---\n\n记录在NexT主题中添加gitalk评论系统的步骤。\n\ngitalk：一个基于 Github Issue 和 Preact 开发的评论插件\n详情Demo可见：https://gitalk.github.io/\n\n\n## Register Application\n\n在GitHub上注册新应用，链接：https://github.com/settings/applications/new\n![](https://ws3.sinaimg.cn/large/006tNbRwgy1fy407a45v3j30iw0d93zg.jpg)\n\n参数说明：\nApplication name： # 应用名称，随意\nHomepage URL： # 网站URL [example link](https://ocd0711.github.ooo)\nApplication description # 描述，随意\nAuthorization callback URL：# 网站URL [example link](https://ocd0711.github.ooo)\n\n点击注册后，页面跳转如下，其中Client ID和Client Secret在后面的配置中需要用到，到时复制粘贴即可:\n![](https://ws4.sinaimg.cn/large/006tNbRwgy1fy4087vmjmj31rl0u0wjr.jpg)\n\n\n## gitalk.swig\n\n新建`/layout/_third-party/comments/gitalk.swig`文件，并添加内容：\n\n``` js\n{% if page.comments && theme.gitalk.enable %}\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\">\n  <script src=\"https://unpkg.com/gitalk/dist/gitalk.min.js\"></script>\n   <script type=\"text/javascript\">\n        var gitalk = new Gitalk({\n          clientID: '{{ theme.gitalk.ClientID }}',\n          clientSecret: '{{ theme.gitalk.ClientSecret }}',\n          repo: '{{ theme.gitalk.repo }}',\n          owner: '{{ theme.gitalk.githubID }}',\n          admin: ['{{ theme.gitalk.adminUser }}'],\n          id: location.pathname,\n          distractionFreeMode: '{{ theme.gitalk.distractionFreeMode }}'\n        })\n        gitalk.render('gitalk-container')           \n       </script>\n{% endif %}\n```\n\n\n## comments.swig\n\n修改`/layout/_partials/comments.swig`，添加内容如下，与前面的elseif同一级别上：\n\n```\n{% elseif theme.gitalk.enable %}\n <div id=\"gitalk-container\"></div>\n```\n\n## index.swig\n\n修改l`ayout/_third-party/comments/index.swig`，在最后一行添加内容：\n\n```\n{% include 'gitalk.swig' %}\n```\n\n\n## gitalk.styl\n\n新建`/source/css/_common/components/third-party/gitalk.styl`文件，添加内容：\n\n```\n.gt-header a, .gt-comments a, .gt-popup a\n  border-bottom: none;\n.gt-container .gt-popup .gt-action.is--active:before\n  top: 0.7em;\n```\n\n\n## third-party.styl\n\n修改`/source/css/_common/components/third-party/third-party.styl`，在最后一行上添加内容，引入样式：\n\n```\n@import \"gitalk\";\n```\n\n\n## _config.yml\n\n在主题配置文件next/_config.yml中添加如下内容：\n\n```\ngitalk:\n  enable: true\n  githubID: github帐号  # OCD0711   \n  repo: 仓库名称   # 例：ocd0711.github.io\n  ClientID: Client ID\n  ClientSecret: Client Secret\n  adminUser: github帐号 #指定可初始化评论账户\n  distractionFreeMode: true\n```\n\n以上就是NexT中添加gitalk评论的配置，博客上传到GitHub上后，打开页面进入某一博客内容下，就可看到评论处。","slug":"NexT主题中集成gitalk评论系统","published":1,"updated":"2018-12-13T09:26:36.510Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wx001vrmtu90tsxi03","content":"<p>记录在NexT主题中添加gitalk评论系统的步骤。</p>\n<p>gitalk：一个基于 Github Issue 和 Preact 开发的评论插件<br>详情Demo可见：<a href=\"https://gitalk.github.io/\" target=\"_blank\" rel=\"noopener\">https://gitalk.github.io/</a></p>\n<h2 id=\"Register-Application\"><a href=\"#Register-Application\" class=\"headerlink\" title=\"Register Application\"></a>Register Application</h2><p>在GitHub上注册新应用，链接：<a href=\"https://github.com/settings/applications/new\" target=\"_blank\" rel=\"noopener\">https://github.com/settings/applications/new</a><br><img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fy407a45v3j30iw0d93zg.jpg\" alt=\"\"></p>\n<p>参数说明：<br>Application name： # 应用名称，随意<br>Homepage URL： # 网站URL <a href=\"https://ocd0711.github.ooo\" target=\"_blank\" rel=\"noopener\">example link</a><br>Application description # 描述，随意<br>Authorization callback URL：# 网站URL <a href=\"https://ocd0711.github.ooo\" target=\"_blank\" rel=\"noopener\">example link</a></p>\n<p>点击注册后，页面跳转如下，其中Client ID和Client Secret在后面的配置中需要用到，到时复制粘贴即可:<br><img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fy4087vmjmj31rl0u0wjr.jpg\" alt=\"\"></p>\n<h2 id=\"gitalk-swig\"><a href=\"#gitalk-swig\" class=\"headerlink\" title=\"gitalk.swig\"></a>gitalk.swig</h2><p>新建<code>/layout/_third-party/comments/gitalk.swig</code>文件，并添加内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">if</span> page.comments &amp;&amp; theme.gitalk.enable %&#125;</span><br><span class=\"line\">  &lt;link rel=<span class=\"string\">\"stylesheet\"</span> href=<span class=\"string\">\"https://unpkg.com/gitalk/dist/gitalk.css\"</span>&gt;</span><br><span class=\"line\">  &lt;script src=<span class=\"string\">\"https://unpkg.com/gitalk/dist/gitalk.min.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">   &lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> gitalk = <span class=\"keyword\">new</span> Gitalk(&#123;</span><br><span class=\"line\">          clientID: <span class=\"string\">'&#123;&#123; theme.gitalk.ClientID &#125;&#125;'</span>,</span><br><span class=\"line\">          clientSecret: <span class=\"string\">'&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;'</span>,</span><br><span class=\"line\">          repo: <span class=\"string\">'&#123;&#123; theme.gitalk.repo &#125;&#125;'</span>,</span><br><span class=\"line\">          owner: <span class=\"string\">'&#123;&#123; theme.gitalk.githubID &#125;&#125;'</span>,</span><br><span class=\"line\">          admin: [<span class=\"string\">'&#123;&#123; theme.gitalk.adminUser &#125;&#125;'</span>],</span><br><span class=\"line\">          id: location.pathname,</span><br><span class=\"line\">          distractionFreeMode: <span class=\"string\">'&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        gitalk.render(<span class=\"string\">'gitalk-container'</span>)           </span><br><span class=\"line\">       &lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"comments-swig\"><a href=\"#comments-swig\" class=\"headerlink\" title=\"comments.swig\"></a>comments.swig</h2><p>修改<code>/layout/_partials/comments.swig</code>，添加内容如下，与前面的elseif同一级别上：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% elseif theme.gitalk.enable %&#125;</span><br><span class=\"line\"> &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"index-swig\"><a href=\"#index-swig\" class=\"headerlink\" title=\"index.swig\"></a>index.swig</h2><p>修改l<code>ayout/_third-party/comments/index.swig</code>，在最后一行添加内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include &apos;gitalk.swig&apos; %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"gitalk-styl\"><a href=\"#gitalk-styl\" class=\"headerlink\" title=\"gitalk.styl\"></a>gitalk.styl</h2><p>新建<code>/source/css/_common/components/third-party/gitalk.styl</code>文件，添加内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.gt-header a, .gt-comments a, .gt-popup a</span><br><span class=\"line\">  border-bottom: none;</span><br><span class=\"line\">.gt-container .gt-popup .gt-action.is--active:before</span><br><span class=\"line\">  top: 0.7em;</span><br></pre></td></tr></table></figure>\n<h2 id=\"third-party-styl\"><a href=\"#third-party-styl\" class=\"headerlink\" title=\"third-party.styl\"></a>third-party.styl</h2><p>修改<code>/source/css/_common/components/third-party/third-party.styl</code>，在最后一行上添加内容，引入样式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@import &quot;gitalk&quot;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h2><p>在主题配置文件next/_config.yml中添加如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitalk:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  githubID: github帐号  # OCD0711   </span><br><span class=\"line\">  repo: 仓库名称   # 例：ocd0711.github.io</span><br><span class=\"line\">  ClientID: Client ID</span><br><span class=\"line\">  ClientSecret: Client Secret</span><br><span class=\"line\">  adminUser: github帐号 #指定可初始化评论账户</span><br><span class=\"line\">  distractionFreeMode: true</span><br></pre></td></tr></table></figure>\n<p>以上就是NexT中添加gitalk评论的配置，博客上传到GitHub上后，打开页面进入某一博客内容下，就可看到评论处。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>记录在NexT主题中添加gitalk评论系统的步骤。</p>\n<p>gitalk：一个基于 Github Issue 和 Preact 开发的评论插件<br>详情Demo可见：<a href=\"https://gitalk.github.io/\" target=\"_blank\" rel=\"noopener\">https://gitalk.github.io/</a></p>\n<h2 id=\"Register-Application\"><a href=\"#Register-Application\" class=\"headerlink\" title=\"Register Application\"></a>Register Application</h2><p>在GitHub上注册新应用，链接：<a href=\"https://github.com/settings/applications/new\" target=\"_blank\" rel=\"noopener\">https://github.com/settings/applications/new</a><br><img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fy407a45v3j30iw0d93zg.jpg\" alt=\"\"></p>\n<p>参数说明：<br>Application name： # 应用名称，随意<br>Homepage URL： # 网站URL <a href=\"https://ocd0711.github.ooo\" target=\"_blank\" rel=\"noopener\">example link</a><br>Application description # 描述，随意<br>Authorization callback URL：# 网站URL <a href=\"https://ocd0711.github.ooo\" target=\"_blank\" rel=\"noopener\">example link</a></p>\n<p>点击注册后，页面跳转如下，其中Client ID和Client Secret在后面的配置中需要用到，到时复制粘贴即可:<br><img src=\"https://ws4.sinaimg.cn/large/006tNbRwgy1fy4087vmjmj31rl0u0wjr.jpg\" alt=\"\"></p>\n<h2 id=\"gitalk-swig\"><a href=\"#gitalk-swig\" class=\"headerlink\" title=\"gitalk.swig\"></a>gitalk.swig</h2><p>新建<code>/layout/_third-party/comments/gitalk.swig</code>文件，并添加内容：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">if</span> page.comments &amp;&amp; theme.gitalk.enable %&#125;</span><br><span class=\"line\">  &lt;link rel=<span class=\"string\">\"stylesheet\"</span> href=<span class=\"string\">\"https://unpkg.com/gitalk/dist/gitalk.css\"</span>&gt;</span><br><span class=\"line\">  &lt;script src=<span class=\"string\">\"https://unpkg.com/gitalk/dist/gitalk.min.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">   &lt;script type=<span class=\"string\">\"text/javascript\"</span>&gt;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> gitalk = <span class=\"keyword\">new</span> Gitalk(&#123;</span><br><span class=\"line\">          clientID: <span class=\"string\">'&#123;&#123; theme.gitalk.ClientID &#125;&#125;'</span>,</span><br><span class=\"line\">          clientSecret: <span class=\"string\">'&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;'</span>,</span><br><span class=\"line\">          repo: <span class=\"string\">'&#123;&#123; theme.gitalk.repo &#125;&#125;'</span>,</span><br><span class=\"line\">          owner: <span class=\"string\">'&#123;&#123; theme.gitalk.githubID &#125;&#125;'</span>,</span><br><span class=\"line\">          admin: [<span class=\"string\">'&#123;&#123; theme.gitalk.adminUser &#125;&#125;'</span>],</span><br><span class=\"line\">          id: location.pathname,</span><br><span class=\"line\">          distractionFreeMode: <span class=\"string\">'&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        gitalk.render(<span class=\"string\">'gitalk-container'</span>)           </span><br><span class=\"line\">       &lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"comments-swig\"><a href=\"#comments-swig\" class=\"headerlink\" title=\"comments.swig\"></a>comments.swig</h2><p>修改<code>/layout/_partials/comments.swig</code>，添加内容如下，与前面的elseif同一级别上：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% elseif theme.gitalk.enable %&#125;</span><br><span class=\"line\"> &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"index-swig\"><a href=\"#index-swig\" class=\"headerlink\" title=\"index.swig\"></a>index.swig</h2><p>修改l<code>ayout/_third-party/comments/index.swig</code>，在最后一行添加内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include &apos;gitalk.swig&apos; %&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"gitalk-styl\"><a href=\"#gitalk-styl\" class=\"headerlink\" title=\"gitalk.styl\"></a>gitalk.styl</h2><p>新建<code>/source/css/_common/components/third-party/gitalk.styl</code>文件，添加内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.gt-header a, .gt-comments a, .gt-popup a</span><br><span class=\"line\">  border-bottom: none;</span><br><span class=\"line\">.gt-container .gt-popup .gt-action.is--active:before</span><br><span class=\"line\">  top: 0.7em;</span><br></pre></td></tr></table></figure>\n<h2 id=\"third-party-styl\"><a href=\"#third-party-styl\" class=\"headerlink\" title=\"third-party.styl\"></a>third-party.styl</h2><p>修改<code>/source/css/_common/components/third-party/third-party.styl</code>，在最后一行上添加内容，引入样式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@import &quot;gitalk&quot;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h2><p>在主题配置文件next/_config.yml中添加如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitalk:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  githubID: github帐号  # OCD0711   </span><br><span class=\"line\">  repo: 仓库名称   # 例：ocd0711.github.io</span><br><span class=\"line\">  ClientID: Client ID</span><br><span class=\"line\">  ClientSecret: Client Secret</span><br><span class=\"line\">  adminUser: github帐号 #指定可初始化评论账户</span><br><span class=\"line\">  distractionFreeMode: true</span><br></pre></td></tr></table></figure>\n<p>以上就是NexT中添加gitalk评论的配置，博客上传到GitHub上后，打开页面进入某一博客内容下，就可看到评论处。</p>\n"},{"title":"自编译 AOSP 下载地址","author":"OCD","date":"2018-11-01T19:00:01.000Z","_content":"这是自编译 AOSP (Pie) 下载地址, 不定期更新\n\n<!-- more -->\n\n更新日期:2018.11.02\n\nSony XZ2(akari): [点击跳转](https://drive.google.com/open?id=1ASnigMBNDodnAYGPaNbiiyQ4e74asQWt)\n\nSony XZ1(Yoshino): [暂未上传]()\n\nSony XZ Premiumg(maple): [点击跳转](https://drive.google.com/open?id=1bQQNSfjUfOEgWg6XEXtR7Mkb_Sxzxmer)\nBUG: 音量键位未指定,wifi/蓝牙 fc, camera2 api 未开启\n\n***","source":"_posts/sony-aosp-build.md","raw":"---\ntitle: 自编译 AOSP 下载地址\nauthor: OCD\ndate: 2018-11-02 03:00:01\ntags:\n  - sony\n  - android build download\ncategories:\n  - Android Build\n---\n这是自编译 AOSP (Pie) 下载地址, 不定期更新\n\n<!-- more -->\n\n更新日期:2018.11.02\n\nSony XZ2(akari): [点击跳转](https://drive.google.com/open?id=1ASnigMBNDodnAYGPaNbiiyQ4e74asQWt)\n\nSony XZ1(Yoshino): [暂未上传]()\n\nSony XZ Premiumg(maple): [点击跳转](https://drive.google.com/open?id=1bQQNSfjUfOEgWg6XEXtR7Mkb_Sxzxmer)\nBUG: 音量键位未指定,wifi/蓝牙 fc, camera2 api 未开启\n\n***","slug":"sony-aosp-build","published":1,"updated":"2018-11-26T03:32:37.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh8wy001yrmtu8dtwd38q","content":"<p>这是自编译 AOSP (Pie) 下载地址, 不定期更新</p>\n<a id=\"more\"></a>\n<p>更新日期:2018.11.02</p>\n<p>Sony XZ2(akari): <a href=\"https://drive.google.com/open?id=1ASnigMBNDodnAYGPaNbiiyQ4e74asQWt\" target=\"_blank\" rel=\"noopener\">点击跳转</a></p>\n<p>Sony XZ1(Yoshino): <a href=\"\">暂未上传</a></p>\n<p>Sony XZ Premiumg(maple): <a href=\"https://drive.google.com/open?id=1bQQNSfjUfOEgWg6XEXtR7Mkb_Sxzxmer\" target=\"_blank\" rel=\"noopener\">点击跳转</a><br>BUG: 音量键位未指定,wifi/蓝牙 fc, camera2 api 未开启</p>\n<hr>\n","site":{"data":{}},"excerpt":"<p>这是自编译 AOSP (Pie) 下载地址, 不定期更新</p>","more":"<p>更新日期:2018.11.02</p>\n<p>Sony XZ2(akari): <a href=\"https://drive.google.com/open?id=1ASnigMBNDodnAYGPaNbiiyQ4e74asQWt\" target=\"_blank\" rel=\"noopener\">点击跳转</a></p>\n<p>Sony XZ1(Yoshino): <a href=\"\">暂未上传</a></p>\n<p>Sony XZ Premiumg(maple): <a href=\"https://drive.google.com/open?id=1bQQNSfjUfOEgWg6XEXtR7Mkb_Sxzxmer\" target=\"_blank\" rel=\"noopener\">点击跳转</a><br>BUG: 音量键位未指定,wifi/蓝牙 fc, camera2 api 未开启</p>\n<hr>"},{"title":"Lists Stacks and Queues","author":"OCD","category":["Programming"],"date":"2018-09-19T07:06:00.000Z","_content":"A Brief ADT Introduction to Lists Stacks and Queues\n\n<!-- more -->\n\n## 1. Lists\n### 1.1 Lists ADTs\n```c\n#ifndef _LIST_H\n#define _LIST_H\nstruct Node;\ntypedef struct Node *PtrToNode;\ntypedef PtrToNode List;\ntypedef PtrToNode Position;\ntypedef int ElementType;\n\nList MakeEmpty(List L);\nint IsEmpty(List L);\nint IsLast(Position P, List L);\nPosition Find( ElementType X, List L);\nvoid Delete( ElementType X, List L);\nPosition FindPrevious(ElementType X, List L);\nvoid Insert(ElementType X, List L, Position P);\nvoid DeleteList(List L);\nPosition Header(List L);\nPosition First(List L);\nPosition Advancde(Position P);\nElementType Retrieve(Position P);\n\n#endif /* main_h */\n\nstruct Node {\n    ElementType Element;\n    Position Next;\n};\n```\n#### 1.1.1 IsEmpty / IsLast\n```c\nint IsEmpty(List L) {\n    return L->Next == NULL;\n}\n\nint IsLast(Position P, List L) {\n    return P->Next == NULL;\n}\n```\n\n#### 1.1.2 Find / Delete / FindPrevious / Insert\n```c\nPosition Find( ElementType X, List L) {\n    Position P;\n    \n    P = L->Next;        // Because there is a head\n    while (P != NULL && P->Element != X) {\n        P = P->Next;\n    }\n    return P;\n}\n\nvoid Delete( ElementType X, List L) {\n    Position P, TempCell;\n    P = FindPrevious(X, L);\n    /* Avoid there is no such Element X */\n    if (!IsLast(P, L)) {\n        TempCell = P->Next;\n        P->Next = TempCell->Next;\n        free( TempCell );\n    }\n}\n\nPosition FindPrevious(ElementType X, List L) {\n    Position P;\n    P = L;\n    \n    while (P->Next != NULL && P->Next->Element != X) {\n        P = P->Next;\n    }\n    return P;\n}\n\nvoid Insert(ElementType X, List L, Position P) {\n    /* Insert X behind P */\n    Position TempCell;\n    \n    TempCell = malloc(sizeof(struct Node));\n    if (TempCell == NULL) {\n        printf(\"Error no memory.\\n\");\n    }\n    TempCell->Element = X;\n    TempCell->Next = P->Next;\n    P->Next = TempCell;\n}\n```\n\n### 1.2 Doubly Linked Lists\n\n### 1.3 Circularly Linked Lists\n\n### 1.4 Examples\n#### The Polynomial __ADT__\n\nPlease refer to my [Github Repo](https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-6) to see add and multiply.\n\n#### Radix Sort \n\nPlease refer to this [blog](http://austingwalters.com/radix-sort-in-c/) for some information.\n```c\n#include <stdio.h>\n#include <stdlib.h>\n\nvoid RadixSort(int* Array, int N) {\n    int max = Array[0];\n    int index = 10;\n    int ret = 1;\n    int* temp = malloc(sizeof(int) * N);\n    for (int i = 0; i < N; ++ i) {\n        if (max < Array[i]) {\n            max = Array[i];\n        }\n    }\n    while (max / ret > 0) {\n        int init[10] = {0};\n        for (int i = 0; i < N; ++ i) {\n            init[(Array[i]/ret)%index] ++;\n        }\n        \n        for (int i = 1; i < index; ++ i) {\n            init[i] += init[i - 1];\n        }\n        \n        for (int i = N - 1; i >= 0; -- i) {\n            temp[--init[(Array[i] / ret) % index]] = Array[i];\n        }\n        \n        for (int i = 0; i < N; ++ i) {\n            Array[i] = temp[i];\n        }\n        ret *= index;\n    }\n}\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int* A = malloc(sizeof(int) * n);\n    for (int i = 0; i < n; ++ i) {\n        scanf(\"%d\", A + i);\n    }\n    RadixSort(A, n);\n    \n    for (int i = 0; i < n; ++ i) {\n        printf(\"%d\\t\", A[i]);\n    }\n}\n\n```\n\n#### Multilists\n\n### 1.5 Cursor Implementation of Linked Lists\n__In a language where pointers are not available, we use an array of structures to make Linked lists__\n\nWe use the following declaration\n```c\n/* A */\ntypedef int PtrToNode;\ntypedef PtrToNode Position;\ntypedef PtrToNode List;\n\nstruct Node {\n    ElementType Element;\n    Position Next;\n};\n\nstruct Node CursorSpace[ SpaceSize ];\n```\n\n__/* B - An initialized CursorSpace */__\n\nSlot|Element|Next\n----|----|----\n0 | | 1\n1 | | 2\n2 | | 3\n\n__/* Example */__\n\nif the value of L is 5 and the value of M is 3 \nThen L presents the list _a, b, e_ M presents _c, d, f_\n\nSlot|Element|Next\n--- | --- | ---\n0 | - | 6\n1 | b | 9\n2 | f | 0\n3 | header | 7\n4 | - | 0\n5 | header | 10\n6 | - | 4\n7 | c | 8\n8 | d | 2\n9 | e | 0\n10| a | 1\n\n//  Unknown Why It is implied like this\nWe keep a list ( the _freelist_ ) of cells that are not in any list.\nThe list will use cell 0 as a header -- Shown in `section B`\n\n```c\nstatic Position CursorAlloc( void ) {\n    Position P;\n    \n    P = CursorSpace[0].Next;\n    Cursor[0].Next = CursorSpace[P].Next;\n    \n    return P\n}\n\nstatic void CursorFree( Position P ) {\n    CursorSpace[P].Next = Cursor[0].Next;\n    CursorSpace[0].Next = P;\n}\n\nint IsEmpty( List L ) {\n    return CursorSpace[L].Next == 0\n}\n\nPosition Find( ElementType X, List L) {\n    Position = P;\n    \n    P = CursorSpace[L].Next;\n    while(P && CursorSpace[P].Element != X) {\n        P = CursorSpace[P].Next;\n    }\n    \n    return P;\n}\n\nvoid Delete( ElementType X, List L) {\n    Position P, TempCell;\n    \n    P = FindPrevious(X, L);\n    \n    if( !IsLast(P, L) ) {\n        TempCell = CursorSpace[P].Next;\n        CursorSpace[P].Next = CursorSpace[TempCell].Next;\n        CursorFree(TempCell);\n    }\n```\n\n## 2. The Stack ADT\n* A stack is a list with the restriction that insertions and deletions can only be performed in one position.\n* Stacks are sometimes known as `LIFO` ( Last in, First Out )\n* Stacks use `push` and `pop` and only the top element is accessiable\n\n![Figure 1](/images/stack.png)\n\n### 2.1 Implementations of Stacks\n#### 2.1.1 Linked List Implementation of Stacks\n```c\n#ifndef _Stack_h\n\nstruct Node;\ntypedef struct Node* PtrToNode;\ntypedef PtrToNode Stack;\n\nint IsEmpty( Stack S );\nStack CreateStack( void );\nvoid DisposeStack( Stack S );\nvoid MakeEmpty( Stack S );\nvoid Push( ElementType X, Stack S );\nElementType Top( Stack S );     //  Output the Top\nvoid Pop( Stack S);             //  Only Delete\n\n#endif\n\nstruct Node {\n    ElementType Element;\n    PtrToNode Next;\n}\n```\n\n__Operations__\n\n```c\nint IsEmpty( Stack S ) {\n    return S->Next == NULL;\n}\n\nStack CreateStack( void ) {\n    Stack S;\n    \n    S = malloc(sizeof( struct Node ));\n    if( S == NULL )\n        return NULL;\n    MakeEmpty( S )\n    return S;\nvoid MakeEmpty( Stack S ) {\n    if( S == NULL )\n        printf(\"ERROR NO STACK\\n\");\n    else\n        while( !IsEmpty( S ) )\n            Pop( S );\n}\n\nvoid Push( ElementType X, Stack S ) {\n    PtrToNode TempCell;\n    \n    TempCell = malloc( sizeof( struct Node ) );\n    if( TempCell == NULL )\n        FatalError(\"Out of Space\");\n    else {\n        TempCell->Element = X;\n        TempCell->Next = S->Next;\n        S->Next = TempCell;         //  Head Assumed\n}\n    \nvoid Pop( Stack S ) {\n    PtrToNode TempCell;\n    \n    if( IsEmpty( S ) ) {\n        printf( \"Empty Stack!\\n\" );\n    else {\n        TempCell = S->Next;\n        S->Next = S->Next->Next;\n        free(TempCell);\n    }\n}\n\nElementType Top( Stack S ) {\n    if( !IsEmpty( S ) ) {\n        return S->Next->Element;\n    FatalError(\"Empty Stack\\n\");\n    return 0;\n}\n\n```    \n\n#### 2.1.2 Array Implementation of Stacks\n\nThis is probably a more popular solution\n\n```c\ntypedef int ElementType;\n\n#ifndef _Stack_H\n#define _Stack_H\n\nstruct StackRecord;\ntypedef struct StackRecord *Stack;\n\nint IsEmpty( Stack S );\nint IsFull( Stack S );\nStack CreatStack( int MaxElements );\nvoid DisposeStack( Stack S );\nvoid MakeEmpty( Stack S );\nvoid Push( ElementType X, Stack S );\nElementType Top( Stack S );\nElementType TopAndPop( Stack S );\n\n#endif\n\n#define EmptyEOS (-1)\n#define MinStackSize (5)\n\nstruct StackRecord {\n    int Capacity;\n    int TopOfStack;\n    ElementType* Array;\n};\n```\n\n__Operations__\n```c\n/***** Create Stack *****/\n\nStack CreateStack( int MaxElements ) {\n    Stack S;\n    \n    if( MaxElements < MinStackSize ) {\n        Error(\"Stack too small.\");\n        \n    S = malloc(sizeof( struct StackRecord ));\n    if( S == NULL ) {\n        FatalError(\"Out of Space!\");\n    }\n    \n    S->Array = malloc( sizeof(ElementType) * MaxElements;\n    if( S->Array == NULL ) {\n        FatalError(\"Out of space!\");\n    }\n    S->Capacity = MaxElements;\n    MakeEmpty( S );\n    \n    return S;\n    \n    void DisposeStack( Stack S ) {\n        if( S != NULL ) {\n            free( S->Array );\n            free( S );\n        }\n    }\n    \n    int IsEmpty( Stack S ) {\n        return S->TopOfStack == EmptyTOS;\n    }\n    \n    void MakeEmpty( Stack S ) {\n        S->TopOfStack = EmptyTOS;\n    }\n    \n    void Push( ElementType X, Stack S ) {\n        if( IsFull( S ) ) {\n            Error(\"Full Stack\");\n        } else {\n            S->Array[++(S->TopOfStack)] = X;\n        }\n    }\n    \n    ElementType Top( Stack S ) {\n        if( !IsEmpty( S ) ) {\n            return S->Array[S->TopOfStack];\n        }\n        Error(\"Empty Stack\");\n        return 0;\n    }\n    \n    void Pop( Stack S ) {\n        if( IsEmpty( S ) ) {\n            Error(\"Empty Stack\");\n        } else {\n            S->TopOfStack --;\n        }\n    }\n```\n\n### 2.2.2 Applications\n#### 2.2.2.1 Balancing Symbols\n refer to [here](https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-7) to get a sample code\n#### 2.2.2.2 Postfix Expressions\nrefer to [here](https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-1) to get a sample Code\n#### 2.2.2.3 Function Calls\nThe algorithm to check balanced symbols suggests a way to implement function calls.\n\n## 3. The Queue ADTs\nLike stacks, _queues_ are lists.\n__insertion__ are done at one end, __deletion__ is performed at the other end.\n\n### 3.4.1 Queue Models\nThe basic operations on a queue are  _Enqueue_ and _Dequeue_\n\n### 3.4.2 Array Implementation of Queues \nAs with stacks, any implementation is legal for queues. Like stacks, both the linked lists and array implementation give fast __O(1)__ running times for every operation.  \n\nHere we will discuss Array implementation of queues.\n\n![Queues](/images/queue.png)\n\n- For each queue data structure, we keep an array __Queue[]__ \n- Keep the positions `Front` and `Rear`\n- We also keep track of the number of elements that are actually in the queue `Size`\n- To __Enqueue__ an element X, we increment `Size` and `Rear`, then set `Queue[Rear] = X`\n- To __Dequeue__ an element, we set the return value to `Queue[Front]`, decrement `Size` \n\n__Attention__ \n1. It's important to check the queue for emptiness \n2. Some programmers use different ways of representing the front and end of a queue.\n\n### 3.4.3 Queue definitions\n#### 3.4.3.1 Define a Queue\n```c\n#define ElementType int\n#ifndef _Queue_h\n#define _Queue_h\nstruct QueueRecord;\ntypedef struct QueueRecord* Queue;\n\nint IsEmpty( Queue Q );\nint IsFull( Queue Q );\nQueue CreateQueue( int MaxElements );\nvoid DisposeQueue( Queue Q );\nvoid MakeEmpty( Queue Q );\nvoid Enqueue( ElementType X, Queue Q );\nElementType Front( Queue Q );\nvoid Dequeue( Queue Q );\nElementType FrontAndDequeue( Queue Q );\n#endif\t/* _Queue_h */\n\nstruct QueueRecord\n{\n\tint Capacity;\n\tint Front;\n\tint Rear;\n\tint Size;\n\tElementType *Array;\n};\n```\n#### 3.4.3.2 Operations\n__IsEmpty, MakeEmpty, Enqueue__\n```c\nint IsEmpty( Queue Q ) {\n\treturn Q->Size == 0;\n}\n\nvoid MakeEmpty( Queue Q ) {\n\tQ->Size = 0;\n\tQ->Front = 1;\n\tQ->Rear = 0;\n}\n\nstatic int Succ( int Value, Queue Q ) {\n\tif (++Value == Queue->Capacity) {\n\t\tValue = 0;\n\t}\n\treturn Value;\n}\n\nvoid Enqueue( ElementType X, Queue Q ) {\n\tif (IsFull( Q )) {\n\t\tError(\"Error Full Queue\");\n\t} else {\n\t\tQ->Size++;\n\t\tQ->Rear = Succ(Q->Rear, Q);\n\t\tQ->Array[Q->Rear] = X;\n\t}\n}\n```\n### 3.4.4 Applications of Queues\n- Calls to large companies are generally placed in a queue when all operations are busy\n- In large universities when resources are limited","source":"_posts/2017-11-30-Lists-Stacks-and-Queues.md","raw":"title: Lists Stacks and Queues\nauthor: OCD\ncategory:\n  - Programming\ntags:\n  - Develop\n  - C\n  - Data Structure\ncategories:\n  - Programming\ndate: 2018-09-19 15:06:00\n---\nA Brief ADT Introduction to Lists Stacks and Queues\n\n<!-- more -->\n\n## 1. Lists\n### 1.1 Lists ADTs\n```c\n#ifndef _LIST_H\n#define _LIST_H\nstruct Node;\ntypedef struct Node *PtrToNode;\ntypedef PtrToNode List;\ntypedef PtrToNode Position;\ntypedef int ElementType;\n\nList MakeEmpty(List L);\nint IsEmpty(List L);\nint IsLast(Position P, List L);\nPosition Find( ElementType X, List L);\nvoid Delete( ElementType X, List L);\nPosition FindPrevious(ElementType X, List L);\nvoid Insert(ElementType X, List L, Position P);\nvoid DeleteList(List L);\nPosition Header(List L);\nPosition First(List L);\nPosition Advancde(Position P);\nElementType Retrieve(Position P);\n\n#endif /* main_h */\n\nstruct Node {\n    ElementType Element;\n    Position Next;\n};\n```\n#### 1.1.1 IsEmpty / IsLast\n```c\nint IsEmpty(List L) {\n    return L->Next == NULL;\n}\n\nint IsLast(Position P, List L) {\n    return P->Next == NULL;\n}\n```\n\n#### 1.1.2 Find / Delete / FindPrevious / Insert\n```c\nPosition Find( ElementType X, List L) {\n    Position P;\n    \n    P = L->Next;        // Because there is a head\n    while (P != NULL && P->Element != X) {\n        P = P->Next;\n    }\n    return P;\n}\n\nvoid Delete( ElementType X, List L) {\n    Position P, TempCell;\n    P = FindPrevious(X, L);\n    /* Avoid there is no such Element X */\n    if (!IsLast(P, L)) {\n        TempCell = P->Next;\n        P->Next = TempCell->Next;\n        free( TempCell );\n    }\n}\n\nPosition FindPrevious(ElementType X, List L) {\n    Position P;\n    P = L;\n    \n    while (P->Next != NULL && P->Next->Element != X) {\n        P = P->Next;\n    }\n    return P;\n}\n\nvoid Insert(ElementType X, List L, Position P) {\n    /* Insert X behind P */\n    Position TempCell;\n    \n    TempCell = malloc(sizeof(struct Node));\n    if (TempCell == NULL) {\n        printf(\"Error no memory.\\n\");\n    }\n    TempCell->Element = X;\n    TempCell->Next = P->Next;\n    P->Next = TempCell;\n}\n```\n\n### 1.2 Doubly Linked Lists\n\n### 1.3 Circularly Linked Lists\n\n### 1.4 Examples\n#### The Polynomial __ADT__\n\nPlease refer to my [Github Repo](https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-6) to see add and multiply.\n\n#### Radix Sort \n\nPlease refer to this [blog](http://austingwalters.com/radix-sort-in-c/) for some information.\n```c\n#include <stdio.h>\n#include <stdlib.h>\n\nvoid RadixSort(int* Array, int N) {\n    int max = Array[0];\n    int index = 10;\n    int ret = 1;\n    int* temp = malloc(sizeof(int) * N);\n    for (int i = 0; i < N; ++ i) {\n        if (max < Array[i]) {\n            max = Array[i];\n        }\n    }\n    while (max / ret > 0) {\n        int init[10] = {0};\n        for (int i = 0; i < N; ++ i) {\n            init[(Array[i]/ret)%index] ++;\n        }\n        \n        for (int i = 1; i < index; ++ i) {\n            init[i] += init[i - 1];\n        }\n        \n        for (int i = N - 1; i >= 0; -- i) {\n            temp[--init[(Array[i] / ret) % index]] = Array[i];\n        }\n        \n        for (int i = 0; i < N; ++ i) {\n            Array[i] = temp[i];\n        }\n        ret *= index;\n    }\n}\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    int* A = malloc(sizeof(int) * n);\n    for (int i = 0; i < n; ++ i) {\n        scanf(\"%d\", A + i);\n    }\n    RadixSort(A, n);\n    \n    for (int i = 0; i < n; ++ i) {\n        printf(\"%d\\t\", A[i]);\n    }\n}\n\n```\n\n#### Multilists\n\n### 1.5 Cursor Implementation of Linked Lists\n__In a language where pointers are not available, we use an array of structures to make Linked lists__\n\nWe use the following declaration\n```c\n/* A */\ntypedef int PtrToNode;\ntypedef PtrToNode Position;\ntypedef PtrToNode List;\n\nstruct Node {\n    ElementType Element;\n    Position Next;\n};\n\nstruct Node CursorSpace[ SpaceSize ];\n```\n\n__/* B - An initialized CursorSpace */__\n\nSlot|Element|Next\n----|----|----\n0 | | 1\n1 | | 2\n2 | | 3\n\n__/* Example */__\n\nif the value of L is 5 and the value of M is 3 \nThen L presents the list _a, b, e_ M presents _c, d, f_\n\nSlot|Element|Next\n--- | --- | ---\n0 | - | 6\n1 | b | 9\n2 | f | 0\n3 | header | 7\n4 | - | 0\n5 | header | 10\n6 | - | 4\n7 | c | 8\n8 | d | 2\n9 | e | 0\n10| a | 1\n\n//  Unknown Why It is implied like this\nWe keep a list ( the _freelist_ ) of cells that are not in any list.\nThe list will use cell 0 as a header -- Shown in `section B`\n\n```c\nstatic Position CursorAlloc( void ) {\n    Position P;\n    \n    P = CursorSpace[0].Next;\n    Cursor[0].Next = CursorSpace[P].Next;\n    \n    return P\n}\n\nstatic void CursorFree( Position P ) {\n    CursorSpace[P].Next = Cursor[0].Next;\n    CursorSpace[0].Next = P;\n}\n\nint IsEmpty( List L ) {\n    return CursorSpace[L].Next == 0\n}\n\nPosition Find( ElementType X, List L) {\n    Position = P;\n    \n    P = CursorSpace[L].Next;\n    while(P && CursorSpace[P].Element != X) {\n        P = CursorSpace[P].Next;\n    }\n    \n    return P;\n}\n\nvoid Delete( ElementType X, List L) {\n    Position P, TempCell;\n    \n    P = FindPrevious(X, L);\n    \n    if( !IsLast(P, L) ) {\n        TempCell = CursorSpace[P].Next;\n        CursorSpace[P].Next = CursorSpace[TempCell].Next;\n        CursorFree(TempCell);\n    }\n```\n\n## 2. The Stack ADT\n* A stack is a list with the restriction that insertions and deletions can only be performed in one position.\n* Stacks are sometimes known as `LIFO` ( Last in, First Out )\n* Stacks use `push` and `pop` and only the top element is accessiable\n\n![Figure 1](/images/stack.png)\n\n### 2.1 Implementations of Stacks\n#### 2.1.1 Linked List Implementation of Stacks\n```c\n#ifndef _Stack_h\n\nstruct Node;\ntypedef struct Node* PtrToNode;\ntypedef PtrToNode Stack;\n\nint IsEmpty( Stack S );\nStack CreateStack( void );\nvoid DisposeStack( Stack S );\nvoid MakeEmpty( Stack S );\nvoid Push( ElementType X, Stack S );\nElementType Top( Stack S );     //  Output the Top\nvoid Pop( Stack S);             //  Only Delete\n\n#endif\n\nstruct Node {\n    ElementType Element;\n    PtrToNode Next;\n}\n```\n\n__Operations__\n\n```c\nint IsEmpty( Stack S ) {\n    return S->Next == NULL;\n}\n\nStack CreateStack( void ) {\n    Stack S;\n    \n    S = malloc(sizeof( struct Node ));\n    if( S == NULL )\n        return NULL;\n    MakeEmpty( S )\n    return S;\nvoid MakeEmpty( Stack S ) {\n    if( S == NULL )\n        printf(\"ERROR NO STACK\\n\");\n    else\n        while( !IsEmpty( S ) )\n            Pop( S );\n}\n\nvoid Push( ElementType X, Stack S ) {\n    PtrToNode TempCell;\n    \n    TempCell = malloc( sizeof( struct Node ) );\n    if( TempCell == NULL )\n        FatalError(\"Out of Space\");\n    else {\n        TempCell->Element = X;\n        TempCell->Next = S->Next;\n        S->Next = TempCell;         //  Head Assumed\n}\n    \nvoid Pop( Stack S ) {\n    PtrToNode TempCell;\n    \n    if( IsEmpty( S ) ) {\n        printf( \"Empty Stack!\\n\" );\n    else {\n        TempCell = S->Next;\n        S->Next = S->Next->Next;\n        free(TempCell);\n    }\n}\n\nElementType Top( Stack S ) {\n    if( !IsEmpty( S ) ) {\n        return S->Next->Element;\n    FatalError(\"Empty Stack\\n\");\n    return 0;\n}\n\n```    \n\n#### 2.1.2 Array Implementation of Stacks\n\nThis is probably a more popular solution\n\n```c\ntypedef int ElementType;\n\n#ifndef _Stack_H\n#define _Stack_H\n\nstruct StackRecord;\ntypedef struct StackRecord *Stack;\n\nint IsEmpty( Stack S );\nint IsFull( Stack S );\nStack CreatStack( int MaxElements );\nvoid DisposeStack( Stack S );\nvoid MakeEmpty( Stack S );\nvoid Push( ElementType X, Stack S );\nElementType Top( Stack S );\nElementType TopAndPop( Stack S );\n\n#endif\n\n#define EmptyEOS (-1)\n#define MinStackSize (5)\n\nstruct StackRecord {\n    int Capacity;\n    int TopOfStack;\n    ElementType* Array;\n};\n```\n\n__Operations__\n```c\n/***** Create Stack *****/\n\nStack CreateStack( int MaxElements ) {\n    Stack S;\n    \n    if( MaxElements < MinStackSize ) {\n        Error(\"Stack too small.\");\n        \n    S = malloc(sizeof( struct StackRecord ));\n    if( S == NULL ) {\n        FatalError(\"Out of Space!\");\n    }\n    \n    S->Array = malloc( sizeof(ElementType) * MaxElements;\n    if( S->Array == NULL ) {\n        FatalError(\"Out of space!\");\n    }\n    S->Capacity = MaxElements;\n    MakeEmpty( S );\n    \n    return S;\n    \n    void DisposeStack( Stack S ) {\n        if( S != NULL ) {\n            free( S->Array );\n            free( S );\n        }\n    }\n    \n    int IsEmpty( Stack S ) {\n        return S->TopOfStack == EmptyTOS;\n    }\n    \n    void MakeEmpty( Stack S ) {\n        S->TopOfStack = EmptyTOS;\n    }\n    \n    void Push( ElementType X, Stack S ) {\n        if( IsFull( S ) ) {\n            Error(\"Full Stack\");\n        } else {\n            S->Array[++(S->TopOfStack)] = X;\n        }\n    }\n    \n    ElementType Top( Stack S ) {\n        if( !IsEmpty( S ) ) {\n            return S->Array[S->TopOfStack];\n        }\n        Error(\"Empty Stack\");\n        return 0;\n    }\n    \n    void Pop( Stack S ) {\n        if( IsEmpty( S ) ) {\n            Error(\"Empty Stack\");\n        } else {\n            S->TopOfStack --;\n        }\n    }\n```\n\n### 2.2.2 Applications\n#### 2.2.2.1 Balancing Symbols\n refer to [here](https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-7) to get a sample code\n#### 2.2.2.2 Postfix Expressions\nrefer to [here](https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-1) to get a sample Code\n#### 2.2.2.3 Function Calls\nThe algorithm to check balanced symbols suggests a way to implement function calls.\n\n## 3. The Queue ADTs\nLike stacks, _queues_ are lists.\n__insertion__ are done at one end, __deletion__ is performed at the other end.\n\n### 3.4.1 Queue Models\nThe basic operations on a queue are  _Enqueue_ and _Dequeue_\n\n### 3.4.2 Array Implementation of Queues \nAs with stacks, any implementation is legal for queues. Like stacks, both the linked lists and array implementation give fast __O(1)__ running times for every operation.  \n\nHere we will discuss Array implementation of queues.\n\n![Queues](/images/queue.png)\n\n- For each queue data structure, we keep an array __Queue[]__ \n- Keep the positions `Front` and `Rear`\n- We also keep track of the number of elements that are actually in the queue `Size`\n- To __Enqueue__ an element X, we increment `Size` and `Rear`, then set `Queue[Rear] = X`\n- To __Dequeue__ an element, we set the return value to `Queue[Front]`, decrement `Size` \n\n__Attention__ \n1. It's important to check the queue for emptiness \n2. Some programmers use different ways of representing the front and end of a queue.\n\n### 3.4.3 Queue definitions\n#### 3.4.3.1 Define a Queue\n```c\n#define ElementType int\n#ifndef _Queue_h\n#define _Queue_h\nstruct QueueRecord;\ntypedef struct QueueRecord* Queue;\n\nint IsEmpty( Queue Q );\nint IsFull( Queue Q );\nQueue CreateQueue( int MaxElements );\nvoid DisposeQueue( Queue Q );\nvoid MakeEmpty( Queue Q );\nvoid Enqueue( ElementType X, Queue Q );\nElementType Front( Queue Q );\nvoid Dequeue( Queue Q );\nElementType FrontAndDequeue( Queue Q );\n#endif\t/* _Queue_h */\n\nstruct QueueRecord\n{\n\tint Capacity;\n\tint Front;\n\tint Rear;\n\tint Size;\n\tElementType *Array;\n};\n```\n#### 3.4.3.2 Operations\n__IsEmpty, MakeEmpty, Enqueue__\n```c\nint IsEmpty( Queue Q ) {\n\treturn Q->Size == 0;\n}\n\nvoid MakeEmpty( Queue Q ) {\n\tQ->Size = 0;\n\tQ->Front = 1;\n\tQ->Rear = 0;\n}\n\nstatic int Succ( int Value, Queue Q ) {\n\tif (++Value == Queue->Capacity) {\n\t\tValue = 0;\n\t}\n\treturn Value;\n}\n\nvoid Enqueue( ElementType X, Queue Q ) {\n\tif (IsFull( Q )) {\n\t\tError(\"Error Full Queue\");\n\t} else {\n\t\tQ->Size++;\n\t\tQ->Rear = Succ(Q->Rear, Q);\n\t\tQ->Array[Q->Rear] = X;\n\t}\n}\n```\n### 3.4.4 Applications of Queues\n- Calls to large companies are generally placed in a queue when all operations are busy\n- In large universities when resources are limited","slug":"2017-11-30-Lists-Stacks-and-Queues","published":1,"updated":"2018-11-26T03:32:37.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh91z0045rmtuepfmyz2q","content":"<p>A Brief ADT Introduction to Lists Stacks and Queues</p>\n<a id=\"more\"></a>\n<h2 id=\"1-Lists\"><a href=\"#1-Lists\" class=\"headerlink\" title=\"1. Lists\"></a>1. Lists</h2><h3 id=\"1-1-Lists-ADTs\"><a href=\"#1-1-Lists-ADTs\" class=\"headerlink\" title=\"1.1 Lists ADTs\"></a>1.1 Lists ADTs</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _LIST_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _LIST_H</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">PtrToNode</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> PtrToNode List;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> PtrToNode Position;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElementType;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">List <span class=\"title\">MakeEmpty</span><span class=\"params\">(List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">(List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsLast</span><span class=\"params\">(Position P, List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">Find</span><span class=\"params\">( ElementType X, List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Delete</span><span class=\"params\">( ElementType X, List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">FindPrevious</span><span class=\"params\">(ElementType X, List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Insert</span><span class=\"params\">(ElementType X, List L, Position P)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DeleteList</span><span class=\"params\">(List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">Header</span><span class=\"params\">(List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">First</span><span class=\"params\">(List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">Advancde</span><span class=\"params\">(Position P)</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">Retrieve</span><span class=\"params\">(Position P)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* main_h */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">    ElementType Element;</span><br><span class=\"line\">    Position Next;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-1-1-IsEmpty-IsLast\"><a href=\"#1-1-1-IsEmpty-IsLast\" class=\"headerlink\" title=\"1.1.1 IsEmpty / IsLast\"></a>1.1.1 IsEmpty / IsLast</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">(List L)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L-&gt;Next == <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsLast</span><span class=\"params\">(Position P, List L)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> P-&gt;Next == <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-1-2-Find-Delete-FindPrevious-Insert\"><a href=\"#1-1-2-Find-Delete-FindPrevious-Insert\" class=\"headerlink\" title=\"1.1.2 Find / Delete / FindPrevious / Insert\"></a>1.1.2 Find / Delete / FindPrevious / Insert</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">Position <span class=\"title\">Find</span><span class=\"params\">( ElementType X, List L)</span> </span>&#123;</span><br><span class=\"line\">    Position P;</span><br><span class=\"line\">    </span><br><span class=\"line\">    P = L-&gt;Next;        <span class=\"comment\">// Because there is a head</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (P != <span class=\"literal\">NULL</span> &amp;&amp; P-&gt;Element != X) &#123;</span><br><span class=\"line\">        P = P-&gt;Next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Delete</span><span class=\"params\">( ElementType X, List L)</span> </span>&#123;</span><br><span class=\"line\">    Position P, TempCell;</span><br><span class=\"line\">    P = FindPrevious(X, L);</span><br><span class=\"line\">    <span class=\"comment\">/* Avoid there is no such Element X */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!IsLast(P, L)) &#123;</span><br><span class=\"line\">        TempCell = P-&gt;Next;</span><br><span class=\"line\">        P-&gt;Next = TempCell-&gt;Next;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>( TempCell );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">FindPrevious</span><span class=\"params\">(ElementType X, List L)</span> </span>&#123;</span><br><span class=\"line\">    Position P;</span><br><span class=\"line\">    P = L;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (P-&gt;Next != <span class=\"literal\">NULL</span> &amp;&amp; P-&gt;Next-&gt;Element != X) &#123;</span><br><span class=\"line\">        P = P-&gt;Next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Insert</span><span class=\"params\">(ElementType X, List L, Position P)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* Insert X behind P */</span></span><br><span class=\"line\">    Position TempCell;</span><br><span class=\"line\">    </span><br><span class=\"line\">    TempCell = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct Node));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (TempCell == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Error no memory.\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    TempCell-&gt;Element = X;</span><br><span class=\"line\">    TempCell-&gt;Next = P-&gt;Next;</span><br><span class=\"line\">    P-&gt;Next = TempCell;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-Doubly-Linked-Lists\"><a href=\"#1-2-Doubly-Linked-Lists\" class=\"headerlink\" title=\"1.2 Doubly Linked Lists\"></a>1.2 Doubly Linked Lists</h3><h3 id=\"1-3-Circularly-Linked-Lists\"><a href=\"#1-3-Circularly-Linked-Lists\" class=\"headerlink\" title=\"1.3 Circularly Linked Lists\"></a>1.3 Circularly Linked Lists</h3><h3 id=\"1-4-Examples\"><a href=\"#1-4-Examples\" class=\"headerlink\" title=\"1.4 Examples\"></a>1.4 Examples</h3><h4 id=\"The-Polynomial-ADT\"><a href=\"#The-Polynomial-ADT\" class=\"headerlink\" title=\"The Polynomial ADT\"></a>The Polynomial <strong>ADT</strong></h4><p>Please refer to my <a href=\"https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-6\" target=\"_blank\" rel=\"noopener\">Github Repo</a> to see add and multiply.</p>\n<h4 id=\"Radix-Sort\"><a href=\"#Radix-Sort\" class=\"headerlink\" title=\"Radix Sort\"></a>Radix Sort</h4><p>Please refer to this <a href=\"http://austingwalters.com/radix-sort-in-c/\" target=\"_blank\" rel=\"noopener\">blog</a> for some information.<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">RadixSort</span><span class=\"params\">(<span class=\"keyword\">int</span>* Array, <span class=\"keyword\">int</span> N)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> max = Array[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* temp = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * N);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; ++ i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (max &lt; Array[i]) &#123;</span><br><span class=\"line\">            max = Array[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (max / ret &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> init[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; ++ i) &#123;</span><br><span class=\"line\">            init[(Array[i]/ret)%index] ++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; index; ++ i) &#123;</span><br><span class=\"line\">            init[i] += init[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = N - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; -- i) &#123;</span><br><span class=\"line\">            temp[--init[(Array[i] / ret) % index]] = Array[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; ++ i) &#123;</span><br><span class=\"line\">            Array[i] = temp[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ret *= index;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* A = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++ i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, A + i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    RadixSort(A, n);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++ i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\t\"</span>, A[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Multilists\"><a href=\"#Multilists\" class=\"headerlink\" title=\"Multilists\"></a>Multilists</h4><h3 id=\"1-5-Cursor-Implementation-of-Linked-Lists\"><a href=\"#1-5-Cursor-Implementation-of-Linked-Lists\" class=\"headerlink\" title=\"1.5 Cursor Implementation of Linked Lists\"></a>1.5 Cursor Implementation of Linked Lists</h3><p><strong>In a language where pointers are not available, we use an array of structures to make Linked lists</strong></p>\n<p>We use the following declaration<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* A */</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> PtrToNode;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> PtrToNode Position;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> PtrToNode List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">    ElementType Element;</span><br><span class=\"line\">    Position Next;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> <span class=\"title\">CursorSpace</span>[ <span class=\"title\">SpaceSize</span> ];</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>/<em> B - An initialized CursorSpace </em>/</strong></p>\n<table>\n<thead>\n<tr>\n<th>Slot</th>\n<th>Element</th>\n<th>Next</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td></td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td></td>\n<td>2</td>\n</tr>\n<tr>\n<td>2</td>\n<td></td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p><strong>/<em> Example </em>/</strong></p>\n<p>if the value of L is 5 and the value of M is 3<br>Then L presents the list <em>a, b, e</em> M presents <em>c, d, f</em></p>\n<table>\n<thead>\n<tr>\n<th>Slot</th>\n<th>Element</th>\n<th>Next</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>-</td>\n<td>6</td>\n</tr>\n<tr>\n<td>1</td>\n<td>b</td>\n<td>9</td>\n</tr>\n<tr>\n<td>2</td>\n<td>f</td>\n<td>0</td>\n</tr>\n<tr>\n<td>3</td>\n<td>header</td>\n<td>7</td>\n</tr>\n<tr>\n<td>4</td>\n<td>-</td>\n<td>0</td>\n</tr>\n<tr>\n<td>5</td>\n<td>header</td>\n<td>10</td>\n</tr>\n<tr>\n<td>6</td>\n<td>-</td>\n<td>4</td>\n</tr>\n<tr>\n<td>7</td>\n<td>c</td>\n<td>8</td>\n</tr>\n<tr>\n<td>8</td>\n<td>d</td>\n<td>2</td>\n</tr>\n<tr>\n<td>9</td>\n<td>e</td>\n<td>0</td>\n</tr>\n<tr>\n<td>10</td>\n<td>a</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>//  Unknown Why It is implied like this<br>We keep a list ( the <em>freelist</em> ) of cells that are not in any list.<br>The list will use cell 0 as a header – Shown in <code>section B</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> Position <span class=\"title\">CursorAlloc</span><span class=\"params\">( <span class=\"keyword\">void</span> )</span> </span>&#123;</span><br><span class=\"line\">    Position P;</span><br><span class=\"line\">    </span><br><span class=\"line\">    P = CursorSpace[<span class=\"number\">0</span>].Next;</span><br><span class=\"line\">    Cursor[<span class=\"number\">0</span>].Next = CursorSpace[P].Next;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> P</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> CursorFree( Position P ) &#123;</span><br><span class=\"line\">    CursorSpace[P].Next = Cursor[<span class=\"number\">0</span>].Next;</span><br><span class=\"line\">    CursorSpace[<span class=\"number\">0</span>].Next = P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( List L )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> CursorSpace[L].Next == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Position Find( ElementType X, List L) &#123;</span><br><span class=\"line\">    Position = P;</span><br><span class=\"line\">    </span><br><span class=\"line\">    P = CursorSpace[L].Next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(P &amp;&amp; CursorSpace[P].Element != X) &#123;</span><br><span class=\"line\">        P = CursorSpace[P].Next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Delete</span><span class=\"params\">( ElementType X, List L)</span> </span>&#123;</span><br><span class=\"line\">    Position P, TempCell;</span><br><span class=\"line\">    </span><br><span class=\"line\">    P = FindPrevious(X, L);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>( !IsLast(P, L) ) &#123;</span><br><span class=\"line\">        TempCell = CursorSpace[P].Next;</span><br><span class=\"line\">        CursorSpace[P].Next = CursorSpace[TempCell].Next;</span><br><span class=\"line\">        CursorFree(TempCell);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-The-Stack-ADT\"><a href=\"#2-The-Stack-ADT\" class=\"headerlink\" title=\"2. The Stack ADT\"></a>2. The Stack ADT</h2><ul>\n<li>A stack is a list with the restriction that insertions and deletions can only be performed in one position.</li>\n<li>Stacks are sometimes known as <code>LIFO</code> ( Last in, First Out )</li>\n<li>Stacks use <code>push</code> and <code>pop</code> and only the top element is accessiable</li>\n</ul>\n<p><img src=\"/images/stack.png\" alt=\"Figure 1\"></p>\n<h3 id=\"2-1-Implementations-of-Stacks\"><a href=\"#2-1-Implementations-of-Stacks\" class=\"headerlink\" title=\"2.1 Implementations of Stacks\"></a>2.1 Implementations of Stacks</h3><h4 id=\"2-1-1-Linked-List-Implementation-of-Stacks\"><a href=\"#2-1-1-Linked-List-Implementation-of-Stacks\" class=\"headerlink\" title=\"2.1.1 Linked List Implementation of Stacks\"></a>2.1.1 Linked List Implementation of Stacks</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _Stack_h</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>* <span class=\"title\">PtrToNode</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> PtrToNode Stack;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\">Stack <span class=\"title\">CreateStack</span><span class=\"params\">( <span class=\"keyword\">void</span> )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DisposeStack</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MakeEmpty</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Push</span><span class=\"params\">( ElementType X, Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">Top</span><span class=\"params\">( Stack S )</span></span>;     <span class=\"comment\">//  Output the Top</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Pop</span><span class=\"params\">( Stack S)</span></span>;             <span class=\"comment\">//  Only Delete</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">    ElementType Element;</span><br><span class=\"line\">    PtrToNode Next;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>Operations</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( Stack S )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> S-&gt;Next == <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Stack <span class=\"title\">CreateStack</span><span class=\"params\">( <span class=\"keyword\">void</span> )</span> </span>&#123;</span><br><span class=\"line\">    Stack S;</span><br><span class=\"line\">    </span><br><span class=\"line\">    S = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>( struct Node ));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( S == <span class=\"literal\">NULL</span> )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    MakeEmpty( S )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> S;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MakeEmpty</span><span class=\"params\">( Stack S )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( S == <span class=\"literal\">NULL</span> )</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"ERROR NO STACK\\n\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>( !IsEmpty( S ) )</span><br><span class=\"line\">            Pop( S );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Push</span><span class=\"params\">( ElementType X, Stack S )</span> </span>&#123;</span><br><span class=\"line\">    PtrToNode TempCell;</span><br><span class=\"line\">    </span><br><span class=\"line\">    TempCell = <span class=\"built_in\">malloc</span>( <span class=\"keyword\">sizeof</span>( struct Node ) );</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( TempCell == <span class=\"literal\">NULL</span> )</span><br><span class=\"line\">        FatalError(<span class=\"string\">\"Out of Space\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        TempCell-&gt;Element = X;</span><br><span class=\"line\">        TempCell-&gt;Next = S-&gt;Next;</span><br><span class=\"line\">        S-&gt;Next = TempCell;         <span class=\"comment\">//  Head Assumed</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Pop</span><span class=\"params\">( Stack S )</span> </span>&#123;</span><br><span class=\"line\">    PtrToNode TempCell;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>( IsEmpty( S ) ) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>( <span class=\"string\">\"Empty Stack!\\n\"</span> );</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        TempCell = S-&gt;Next;</span><br><span class=\"line\">        S-&gt;Next = S-&gt;Next-&gt;Next;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>(TempCell);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">Top</span><span class=\"params\">( Stack S )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( !IsEmpty( S ) ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> S-&gt;Next-&gt;Element;</span><br><span class=\"line\">    FatalError(<span class=\"string\">\"Empty Stack\\n\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">```    </span><br><span class=\"line\"></span><br><span class=\"line\">#### <span class=\"number\">2.1</span><span class=\"number\">.2</span> Array Implementation of Stacks</span><br><span class=\"line\"></span><br><span class=\"line\">This is probably a more popular solution</span><br><span class=\"line\"></span><br><span class=\"line\">```c</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElementType;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _Stack_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _Stack_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackRecord</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackRecord</span> *<span class=\"title\">Stack</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsFull</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\">Stack <span class=\"title\">CreatStack</span><span class=\"params\">( <span class=\"keyword\">int</span> MaxElements )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DisposeStack</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MakeEmpty</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Push</span><span class=\"params\">( ElementType X, Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">Top</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">TopAndPop</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> EmptyEOS (-1)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MinStackSize (5)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackRecord</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> Capacity;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> TopOfStack;</span><br><span class=\"line\">    ElementType* Array;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>Operations</strong><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/***** Create Stack *****/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Stack <span class=\"title\">CreateStack</span><span class=\"params\">( <span class=\"keyword\">int</span> MaxElements )</span> </span>&#123;</span><br><span class=\"line\">    Stack S;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>( MaxElements &lt; MinStackSize ) &#123;</span><br><span class=\"line\">        Error(<span class=\"string\">\"Stack too small.\"</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">    S = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>( struct StackRecord ));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( S == <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\">        FatalError(<span class=\"string\">\"Out of Space!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    S-&gt;Array = <span class=\"built_in\">malloc</span>( <span class=\"keyword\">sizeof</span>(ElementType) * MaxElements;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( S-&gt;Array == <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\">        FatalError(<span class=\"string\">\"Out of space!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    S-&gt;Capacity = MaxElements;</span><br><span class=\"line\">    MakeEmpty( S );</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> S;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">void</span> DisposeStack( Stack S ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( S != <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">free</span>( S-&gt;Array );</span><br><span class=\"line\">            <span class=\"built_in\">free</span>( S );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> IsEmpty( Stack S ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> S-&gt;TopOfStack == EmptyTOS;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">void</span> MakeEmpty( Stack S ) &#123;</span><br><span class=\"line\">        S-&gt;TopOfStack = EmptyTOS;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">void</span> Push( ElementType X, Stack S ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( IsFull( S ) ) &#123;</span><br><span class=\"line\">            Error(<span class=\"string\">\"Full Stack\"</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            S-&gt;Array[++(S-&gt;TopOfStack)] = X;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    ElementType Top( Stack S ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( !IsEmpty( S ) ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> S-&gt;Array[S-&gt;TopOfStack];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Error(<span class=\"string\">\"Empty Stack\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">void</span> Pop( Stack S ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( IsEmpty( S ) ) &#123;</span><br><span class=\"line\">            Error(<span class=\"string\">\"Empty Stack\"</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            S-&gt;TopOfStack --;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-2-2-Applications\"><a href=\"#2-2-2-Applications\" class=\"headerlink\" title=\"2.2.2 Applications\"></a>2.2.2 Applications</h3><h4 id=\"2-2-2-1-Balancing-Symbols\"><a href=\"#2-2-2-1-Balancing-Symbols\" class=\"headerlink\" title=\"2.2.2.1 Balancing Symbols\"></a>2.2.2.1 Balancing Symbols</h4><p> refer to <a href=\"https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-7\" target=\"_blank\" rel=\"noopener\">here</a> to get a sample code</p>\n<h4 id=\"2-2-2-2-Postfix-Expressions\"><a href=\"#2-2-2-2-Postfix-Expressions\" class=\"headerlink\" title=\"2.2.2.2 Postfix Expressions\"></a>2.2.2.2 Postfix Expressions</h4><p>refer to <a href=\"https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-1\" target=\"_blank\" rel=\"noopener\">here</a> to get a sample Code</p>\n<h4 id=\"2-2-2-3-Function-Calls\"><a href=\"#2-2-2-3-Function-Calls\" class=\"headerlink\" title=\"2.2.2.3 Function Calls\"></a>2.2.2.3 Function Calls</h4><p>The algorithm to check balanced symbols suggests a way to implement function calls.</p>\n<h2 id=\"3-The-Queue-ADTs\"><a href=\"#3-The-Queue-ADTs\" class=\"headerlink\" title=\"3. The Queue ADTs\"></a>3. The Queue ADTs</h2><p>Like stacks, <em>queues</em> are lists.<br><strong>insertion</strong> are done at one end, <strong>deletion</strong> is performed at the other end.</p>\n<h3 id=\"3-4-1-Queue-Models\"><a href=\"#3-4-1-Queue-Models\" class=\"headerlink\" title=\"3.4.1 Queue Models\"></a>3.4.1 Queue Models</h3><p>The basic operations on a queue are  <em>Enqueue</em> and <em>Dequeue</em></p>\n<h3 id=\"3-4-2-Array-Implementation-of-Queues\"><a href=\"#3-4-2-Array-Implementation-of-Queues\" class=\"headerlink\" title=\"3.4.2 Array Implementation of Queues\"></a>3.4.2 Array Implementation of Queues</h3><p>As with stacks, any implementation is legal for queues. Like stacks, both the linked lists and array implementation give fast <strong>O(1)</strong> running times for every operation.  </p>\n<p>Here we will discuss Array implementation of queues.</p>\n<p><img src=\"/images/queue.png\" alt=\"Queues\"></p>\n<ul>\n<li>For each queue data structure, we keep an array <strong>Queue[]</strong> </li>\n<li>Keep the positions <code>Front</code> and <code>Rear</code></li>\n<li>We also keep track of the number of elements that are actually in the queue <code>Size</code></li>\n<li>To <strong>Enqueue</strong> an element X, we increment <code>Size</code> and <code>Rear</code>, then set <code>Queue[Rear] = X</code></li>\n<li>To <strong>Dequeue</strong> an element, we set the return value to <code>Queue[Front]</code>, decrement <code>Size</code> </li>\n</ul>\n<p><strong>Attention</strong> </p>\n<ol>\n<li>It’s important to check the queue for emptiness </li>\n<li>Some programmers use different ways of representing the front and end of a queue.</li>\n</ol>\n<h3 id=\"3-4-3-Queue-definitions\"><a href=\"#3-4-3-Queue-definitions\" class=\"headerlink\" title=\"3.4.3 Queue definitions\"></a>3.4.3 Queue definitions</h3><h4 id=\"3-4-3-1-Define-a-Queue\"><a href=\"#3-4-3-1-Define-a-Queue\" class=\"headerlink\" title=\"3.4.3.1 Define a Queue\"></a>3.4.3.1 Define a Queue</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ElementType int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _Queue_h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _Queue_h</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">QueueRecord</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">QueueRecord</span>* <span class=\"title\">Queue</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsFull</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\">Queue <span class=\"title\">CreateQueue</span><span class=\"params\">( <span class=\"keyword\">int</span> MaxElements )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DisposeQueue</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MakeEmpty</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Enqueue</span><span class=\"params\">( ElementType X, Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">Front</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dequeue</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">FrontAndDequeue</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span>\t<span class=\"comment\">/* _Queue_h */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">QueueRecord</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Capacity;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Front;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Rear;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Size;</span><br><span class=\"line\">\tElementType *Array;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-4-3-2-Operations\"><a href=\"#3-4-3-2-Operations\" class=\"headerlink\" title=\"3.4.3.2 Operations\"></a>3.4.3.2 Operations</h4><p><strong>IsEmpty, MakeEmpty, Enqueue</strong><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( Queue Q )</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Q-&gt;Size == <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MakeEmpty</span><span class=\"params\">( Queue Q )</span> </span>&#123;</span><br><span class=\"line\">\tQ-&gt;Size = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tQ-&gt;Front = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tQ-&gt;Rear = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">Succ</span><span class=\"params\">( <span class=\"keyword\">int</span> Value, Queue Q )</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (++Value == Queue-&gt;Capacity) &#123;</span><br><span class=\"line\">\t\tValue = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Enqueue</span><span class=\"params\">( ElementType X, Queue Q )</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (IsFull( Q )) &#123;</span><br><span class=\"line\">\t\tError(<span class=\"string\">\"Error Full Queue\"</span>);</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tQ-&gt;Size++;</span><br><span class=\"line\">\t\tQ-&gt;Rear = Succ(Q-&gt;Rear, Q);</span><br><span class=\"line\">\t\tQ-&gt;Array[Q-&gt;Rear] = X;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-4-4-Applications-of-Queues\"><a href=\"#3-4-4-Applications-of-Queues\" class=\"headerlink\" title=\"3.4.4 Applications of Queues\"></a>3.4.4 Applications of Queues</h3><ul>\n<li>Calls to large companies are generally placed in a queue when all operations are busy</li>\n<li>In large universities when resources are limited</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>A Brief ADT Introduction to Lists Stacks and Queues</p>","more":"<h2 id=\"1-Lists\"><a href=\"#1-Lists\" class=\"headerlink\" title=\"1. Lists\"></a>1. Lists</h2><h3 id=\"1-1-Lists-ADTs\"><a href=\"#1-1-Lists-ADTs\" class=\"headerlink\" title=\"1.1 Lists ADTs\"></a>1.1 Lists ADTs</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _LIST_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _LIST_H</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> *<span class=\"title\">PtrToNode</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> PtrToNode List;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> PtrToNode Position;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElementType;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">List <span class=\"title\">MakeEmpty</span><span class=\"params\">(List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">(List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsLast</span><span class=\"params\">(Position P, List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">Find</span><span class=\"params\">( ElementType X, List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Delete</span><span class=\"params\">( ElementType X, List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">FindPrevious</span><span class=\"params\">(ElementType X, List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Insert</span><span class=\"params\">(ElementType X, List L, Position P)</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DeleteList</span><span class=\"params\">(List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">Header</span><span class=\"params\">(List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">First</span><span class=\"params\">(List L)</span></span>;</span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">Advancde</span><span class=\"params\">(Position P)</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">Retrieve</span><span class=\"params\">(Position P)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* main_h */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">    ElementType Element;</span><br><span class=\"line\">    Position Next;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-1-1-IsEmpty-IsLast\"><a href=\"#1-1-1-IsEmpty-IsLast\" class=\"headerlink\" title=\"1.1.1 IsEmpty / IsLast\"></a>1.1.1 IsEmpty / IsLast</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">(List L)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> L-&gt;Next == <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsLast</span><span class=\"params\">(Position P, List L)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> P-&gt;Next == <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-1-2-Find-Delete-FindPrevious-Insert\"><a href=\"#1-1-2-Find-Delete-FindPrevious-Insert\" class=\"headerlink\" title=\"1.1.2 Find / Delete / FindPrevious / Insert\"></a>1.1.2 Find / Delete / FindPrevious / Insert</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">Position <span class=\"title\">Find</span><span class=\"params\">( ElementType X, List L)</span> </span>&#123;</span><br><span class=\"line\">    Position P;</span><br><span class=\"line\">    </span><br><span class=\"line\">    P = L-&gt;Next;        <span class=\"comment\">// Because there is a head</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (P != <span class=\"literal\">NULL</span> &amp;&amp; P-&gt;Element != X) &#123;</span><br><span class=\"line\">        P = P-&gt;Next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Delete</span><span class=\"params\">( ElementType X, List L)</span> </span>&#123;</span><br><span class=\"line\">    Position P, TempCell;</span><br><span class=\"line\">    P = FindPrevious(X, L);</span><br><span class=\"line\">    <span class=\"comment\">/* Avoid there is no such Element X */</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!IsLast(P, L)) &#123;</span><br><span class=\"line\">        TempCell = P-&gt;Next;</span><br><span class=\"line\">        P-&gt;Next = TempCell-&gt;Next;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>( TempCell );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Position <span class=\"title\">FindPrevious</span><span class=\"params\">(ElementType X, List L)</span> </span>&#123;</span><br><span class=\"line\">    Position P;</span><br><span class=\"line\">    P = L;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (P-&gt;Next != <span class=\"literal\">NULL</span> &amp;&amp; P-&gt;Next-&gt;Element != X) &#123;</span><br><span class=\"line\">        P = P-&gt;Next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Insert</span><span class=\"params\">(ElementType X, List L, Position P)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* Insert X behind P */</span></span><br><span class=\"line\">    Position TempCell;</span><br><span class=\"line\">    </span><br><span class=\"line\">    TempCell = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(struct Node));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (TempCell == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"Error no memory.\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    TempCell-&gt;Element = X;</span><br><span class=\"line\">    TempCell-&gt;Next = P-&gt;Next;</span><br><span class=\"line\">    P-&gt;Next = TempCell;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-2-Doubly-Linked-Lists\"><a href=\"#1-2-Doubly-Linked-Lists\" class=\"headerlink\" title=\"1.2 Doubly Linked Lists\"></a>1.2 Doubly Linked Lists</h3><h3 id=\"1-3-Circularly-Linked-Lists\"><a href=\"#1-3-Circularly-Linked-Lists\" class=\"headerlink\" title=\"1.3 Circularly Linked Lists\"></a>1.3 Circularly Linked Lists</h3><h3 id=\"1-4-Examples\"><a href=\"#1-4-Examples\" class=\"headerlink\" title=\"1.4 Examples\"></a>1.4 Examples</h3><h4 id=\"The-Polynomial-ADT\"><a href=\"#The-Polynomial-ADT\" class=\"headerlink\" title=\"The Polynomial ADT\"></a>The Polynomial <strong>ADT</strong></h4><p>Please refer to my <a href=\"https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-6\" target=\"_blank\" rel=\"noopener\">Github Repo</a> to see add and multiply.</p>\n<h4 id=\"Radix-Sort\"><a href=\"#Radix-Sort\" class=\"headerlink\" title=\"Radix Sort\"></a>Radix Sort</h4><p>Please refer to this <a href=\"http://austingwalters.com/radix-sort-in-c/\" target=\"_blank\" rel=\"noopener\">blog</a> for some information.<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">RadixSort</span><span class=\"params\">(<span class=\"keyword\">int</span>* Array, <span class=\"keyword\">int</span> N)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> max = Array[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ret = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* temp = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * N);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; ++ i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (max &lt; Array[i]) &#123;</span><br><span class=\"line\">            max = Array[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (max / ret &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> init[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; ++ i) &#123;</span><br><span class=\"line\">            init[(Array[i]/ret)%index] ++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; index; ++ i) &#123;</span><br><span class=\"line\">            init[i] += init[i - <span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = N - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; -- i) &#123;</span><br><span class=\"line\">            temp[--init[(Array[i] / ret) % index]] = Array[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; ++ i) &#123;</span><br><span class=\"line\">            Array[i] = temp[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ret *= index;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">int</span>* A = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(<span class=\"keyword\">int</span>) * n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++ i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>, A + i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    RadixSort(A, n);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; ++ i) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\t\"</span>, A[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Multilists\"><a href=\"#Multilists\" class=\"headerlink\" title=\"Multilists\"></a>Multilists</h4><h3 id=\"1-5-Cursor-Implementation-of-Linked-Lists\"><a href=\"#1-5-Cursor-Implementation-of-Linked-Lists\" class=\"headerlink\" title=\"1.5 Cursor Implementation of Linked Lists\"></a>1.5 Cursor Implementation of Linked Lists</h3><p><strong>In a language where pointers are not available, we use an array of structures to make Linked lists</strong></p>\n<p>We use the following declaration<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* A */</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> PtrToNode;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> PtrToNode Position;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> PtrToNode List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">    ElementType Element;</span><br><span class=\"line\">    Position Next;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> <span class=\"title\">CursorSpace</span>[ <span class=\"title\">SpaceSize</span> ];</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>/<em> B - An initialized CursorSpace </em>/</strong></p>\n<table>\n<thead>\n<tr>\n<th>Slot</th>\n<th>Element</th>\n<th>Next</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td></td>\n<td>1</td>\n</tr>\n<tr>\n<td>1</td>\n<td></td>\n<td>2</td>\n</tr>\n<tr>\n<td>2</td>\n<td></td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<p><strong>/<em> Example </em>/</strong></p>\n<p>if the value of L is 5 and the value of M is 3<br>Then L presents the list <em>a, b, e</em> M presents <em>c, d, f</em></p>\n<table>\n<thead>\n<tr>\n<th>Slot</th>\n<th>Element</th>\n<th>Next</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>-</td>\n<td>6</td>\n</tr>\n<tr>\n<td>1</td>\n<td>b</td>\n<td>9</td>\n</tr>\n<tr>\n<td>2</td>\n<td>f</td>\n<td>0</td>\n</tr>\n<tr>\n<td>3</td>\n<td>header</td>\n<td>7</td>\n</tr>\n<tr>\n<td>4</td>\n<td>-</td>\n<td>0</td>\n</tr>\n<tr>\n<td>5</td>\n<td>header</td>\n<td>10</td>\n</tr>\n<tr>\n<td>6</td>\n<td>-</td>\n<td>4</td>\n</tr>\n<tr>\n<td>7</td>\n<td>c</td>\n<td>8</td>\n</tr>\n<tr>\n<td>8</td>\n<td>d</td>\n<td>2</td>\n</tr>\n<tr>\n<td>9</td>\n<td>e</td>\n<td>0</td>\n</tr>\n<tr>\n<td>10</td>\n<td>a</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>//  Unknown Why It is implied like this<br>We keep a list ( the <em>freelist</em> ) of cells that are not in any list.<br>The list will use cell 0 as a header – Shown in <code>section B</code></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> Position <span class=\"title\">CursorAlloc</span><span class=\"params\">( <span class=\"keyword\">void</span> )</span> </span>&#123;</span><br><span class=\"line\">    Position P;</span><br><span class=\"line\">    </span><br><span class=\"line\">    P = CursorSpace[<span class=\"number\">0</span>].Next;</span><br><span class=\"line\">    Cursor[<span class=\"number\">0</span>].Next = CursorSpace[P].Next;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> P</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> CursorFree( Position P ) &#123;</span><br><span class=\"line\">    CursorSpace[P].Next = Cursor[<span class=\"number\">0</span>].Next;</span><br><span class=\"line\">    CursorSpace[<span class=\"number\">0</span>].Next = P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( List L )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> CursorSpace[L].Next == <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Position Find( ElementType X, List L) &#123;</span><br><span class=\"line\">    Position = P;</span><br><span class=\"line\">    </span><br><span class=\"line\">    P = CursorSpace[L].Next;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(P &amp;&amp; CursorSpace[P].Element != X) &#123;</span><br><span class=\"line\">        P = CursorSpace[P].Next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> P;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Delete</span><span class=\"params\">( ElementType X, List L)</span> </span>&#123;</span><br><span class=\"line\">    Position P, TempCell;</span><br><span class=\"line\">    </span><br><span class=\"line\">    P = FindPrevious(X, L);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>( !IsLast(P, L) ) &#123;</span><br><span class=\"line\">        TempCell = CursorSpace[P].Next;</span><br><span class=\"line\">        CursorSpace[P].Next = CursorSpace[TempCell].Next;</span><br><span class=\"line\">        CursorFree(TempCell);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-The-Stack-ADT\"><a href=\"#2-The-Stack-ADT\" class=\"headerlink\" title=\"2. The Stack ADT\"></a>2. The Stack ADT</h2><ul>\n<li>A stack is a list with the restriction that insertions and deletions can only be performed in one position.</li>\n<li>Stacks are sometimes known as <code>LIFO</code> ( Last in, First Out )</li>\n<li>Stacks use <code>push</code> and <code>pop</code> and only the top element is accessiable</li>\n</ul>\n<p><img src=\"/images/stack.png\" alt=\"Figure 1\"></p>\n<h3 id=\"2-1-Implementations-of-Stacks\"><a href=\"#2-1-Implementations-of-Stacks\" class=\"headerlink\" title=\"2.1 Implementations of Stacks\"></a>2.1 Implementations of Stacks</h3><h4 id=\"2-1-1-Linked-List-Implementation-of-Stacks\"><a href=\"#2-1-1-Linked-List-Implementation-of-Stacks\" class=\"headerlink\" title=\"2.1.1 Linked List Implementation of Stacks\"></a>2.1.1 Linked List Implementation of Stacks</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _Stack_h</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>* <span class=\"title\">PtrToNode</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> PtrToNode Stack;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\">Stack <span class=\"title\">CreateStack</span><span class=\"params\">( <span class=\"keyword\">void</span> )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DisposeStack</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MakeEmpty</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Push</span><span class=\"params\">( ElementType X, Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">Top</span><span class=\"params\">( Stack S )</span></span>;     <span class=\"comment\">//  Output the Top</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Pop</span><span class=\"params\">( Stack S)</span></span>;             <span class=\"comment\">//  Only Delete</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span> &#123;</span></span><br><span class=\"line\">    ElementType Element;</span><br><span class=\"line\">    PtrToNode Next;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>Operations</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( Stack S )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> S-&gt;Next == <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Stack <span class=\"title\">CreateStack</span><span class=\"params\">( <span class=\"keyword\">void</span> )</span> </span>&#123;</span><br><span class=\"line\">    Stack S;</span><br><span class=\"line\">    </span><br><span class=\"line\">    S = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>( struct Node ));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( S == <span class=\"literal\">NULL</span> )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    MakeEmpty( S )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> S;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MakeEmpty</span><span class=\"params\">( Stack S )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( S == <span class=\"literal\">NULL</span> )</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"ERROR NO STACK\\n\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>( !IsEmpty( S ) )</span><br><span class=\"line\">            Pop( S );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Push</span><span class=\"params\">( ElementType X, Stack S )</span> </span>&#123;</span><br><span class=\"line\">    PtrToNode TempCell;</span><br><span class=\"line\">    </span><br><span class=\"line\">    TempCell = <span class=\"built_in\">malloc</span>( <span class=\"keyword\">sizeof</span>( struct Node ) );</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( TempCell == <span class=\"literal\">NULL</span> )</span><br><span class=\"line\">        FatalError(<span class=\"string\">\"Out of Space\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        TempCell-&gt;Element = X;</span><br><span class=\"line\">        TempCell-&gt;Next = S-&gt;Next;</span><br><span class=\"line\">        S-&gt;Next = TempCell;         <span class=\"comment\">//  Head Assumed</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Pop</span><span class=\"params\">( Stack S )</span> </span>&#123;</span><br><span class=\"line\">    PtrToNode TempCell;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>( IsEmpty( S ) ) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>( <span class=\"string\">\"Empty Stack!\\n\"</span> );</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        TempCell = S-&gt;Next;</span><br><span class=\"line\">        S-&gt;Next = S-&gt;Next-&gt;Next;</span><br><span class=\"line\">        <span class=\"built_in\">free</span>(TempCell);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">Top</span><span class=\"params\">( Stack S )</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( !IsEmpty( S ) ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> S-&gt;Next-&gt;Element;</span><br><span class=\"line\">    FatalError(<span class=\"string\">\"Empty Stack\\n\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">```    </span><br><span class=\"line\"></span><br><span class=\"line\">#### <span class=\"number\">2.1</span><span class=\"number\">.2</span> Array Implementation of Stacks</span><br><span class=\"line\"></span><br><span class=\"line\">This is probably a more popular solution</span><br><span class=\"line\"></span><br><span class=\"line\">```c</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">int</span> ElementType;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _Stack_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _Stack_H</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackRecord</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackRecord</span> *<span class=\"title\">Stack</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsFull</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\">Stack <span class=\"title\">CreatStack</span><span class=\"params\">( <span class=\"keyword\">int</span> MaxElements )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DisposeStack</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MakeEmpty</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Push</span><span class=\"params\">( ElementType X, Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">Top</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">TopAndPop</span><span class=\"params\">( Stack S )</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> EmptyEOS (-1)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MinStackSize (5)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">StackRecord</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> Capacity;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> TopOfStack;</span><br><span class=\"line\">    ElementType* Array;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><strong>Operations</strong><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/***** Create Stack *****/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">Stack <span class=\"title\">CreateStack</span><span class=\"params\">( <span class=\"keyword\">int</span> MaxElements )</span> </span>&#123;</span><br><span class=\"line\">    Stack S;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>( MaxElements &lt; MinStackSize ) &#123;</span><br><span class=\"line\">        Error(<span class=\"string\">\"Stack too small.\"</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">    S = <span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>( struct StackRecord ));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( S == <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\">        FatalError(<span class=\"string\">\"Out of Space!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    S-&gt;Array = <span class=\"built_in\">malloc</span>( <span class=\"keyword\">sizeof</span>(ElementType) * MaxElements;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>( S-&gt;Array == <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\">        FatalError(<span class=\"string\">\"Out of space!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    S-&gt;Capacity = MaxElements;</span><br><span class=\"line\">    MakeEmpty( S );</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> S;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">void</span> DisposeStack( Stack S ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( S != <span class=\"literal\">NULL</span> ) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">free</span>( S-&gt;Array );</span><br><span class=\"line\">            <span class=\"built_in\">free</span>( S );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> IsEmpty( Stack S ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> S-&gt;TopOfStack == EmptyTOS;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">void</span> MakeEmpty( Stack S ) &#123;</span><br><span class=\"line\">        S-&gt;TopOfStack = EmptyTOS;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">void</span> Push( ElementType X, Stack S ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( IsFull( S ) ) &#123;</span><br><span class=\"line\">            Error(<span class=\"string\">\"Full Stack\"</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            S-&gt;Array[++(S-&gt;TopOfStack)] = X;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    ElementType Top( Stack S ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( !IsEmpty( S ) ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> S-&gt;Array[S-&gt;TopOfStack];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Error(<span class=\"string\">\"Empty Stack\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">void</span> Pop( Stack S ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>( IsEmpty( S ) ) &#123;</span><br><span class=\"line\">            Error(<span class=\"string\">\"Empty Stack\"</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            S-&gt;TopOfStack --;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-2-2-Applications\"><a href=\"#2-2-2-Applications\" class=\"headerlink\" title=\"2.2.2 Applications\"></a>2.2.2 Applications</h3><h4 id=\"2-2-2-1-Balancing-Symbols\"><a href=\"#2-2-2-1-Balancing-Symbols\" class=\"headerlink\" title=\"2.2.2.1 Balancing Symbols\"></a>2.2.2.1 Balancing Symbols</h4><p> refer to <a href=\"https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-7\" target=\"_blank\" rel=\"noopener\">here</a> to get a sample code</p>\n<h4 id=\"2-2-2-2-Postfix-Expressions\"><a href=\"#2-2-2-2-Postfix-Expressions\" class=\"headerlink\" title=\"2.2.2.2 Postfix Expressions\"></a>2.2.2.2 Postfix Expressions</h4><p>refer to <a href=\"https://github.com/hellobbn/C-Program/tree/master/C-Programs/P-1\" target=\"_blank\" rel=\"noopener\">here</a> to get a sample Code</p>\n<h4 id=\"2-2-2-3-Function-Calls\"><a href=\"#2-2-2-3-Function-Calls\" class=\"headerlink\" title=\"2.2.2.3 Function Calls\"></a>2.2.2.3 Function Calls</h4><p>The algorithm to check balanced symbols suggests a way to implement function calls.</p>\n<h2 id=\"3-The-Queue-ADTs\"><a href=\"#3-The-Queue-ADTs\" class=\"headerlink\" title=\"3. The Queue ADTs\"></a>3. The Queue ADTs</h2><p>Like stacks, <em>queues</em> are lists.<br><strong>insertion</strong> are done at one end, <strong>deletion</strong> is performed at the other end.</p>\n<h3 id=\"3-4-1-Queue-Models\"><a href=\"#3-4-1-Queue-Models\" class=\"headerlink\" title=\"3.4.1 Queue Models\"></a>3.4.1 Queue Models</h3><p>The basic operations on a queue are  <em>Enqueue</em> and <em>Dequeue</em></p>\n<h3 id=\"3-4-2-Array-Implementation-of-Queues\"><a href=\"#3-4-2-Array-Implementation-of-Queues\" class=\"headerlink\" title=\"3.4.2 Array Implementation of Queues\"></a>3.4.2 Array Implementation of Queues</h3><p>As with stacks, any implementation is legal for queues. Like stacks, both the linked lists and array implementation give fast <strong>O(1)</strong> running times for every operation.  </p>\n<p>Here we will discuss Array implementation of queues.</p>\n<p><img src=\"/images/queue.png\" alt=\"Queues\"></p>\n<ul>\n<li>For each queue data structure, we keep an array <strong>Queue[]</strong> </li>\n<li>Keep the positions <code>Front</code> and <code>Rear</code></li>\n<li>We also keep track of the number of elements that are actually in the queue <code>Size</code></li>\n<li>To <strong>Enqueue</strong> an element X, we increment <code>Size</code> and <code>Rear</code>, then set <code>Queue[Rear] = X</code></li>\n<li>To <strong>Dequeue</strong> an element, we set the return value to <code>Queue[Front]</code>, decrement <code>Size</code> </li>\n</ul>\n<p><strong>Attention</strong> </p>\n<ol>\n<li>It’s important to check the queue for emptiness </li>\n<li>Some programmers use different ways of representing the front and end of a queue.</li>\n</ol>\n<h3 id=\"3-4-3-Queue-definitions\"><a href=\"#3-4-3-Queue-definitions\" class=\"headerlink\" title=\"3.4.3 Queue definitions\"></a>3.4.3 Queue definitions</h3><h4 id=\"3-4-3-1-Define-a-Queue\"><a href=\"#3-4-3-1-Define-a-Queue\" class=\"headerlink\" title=\"3.4.3.1 Define a Queue\"></a>3.4.3.1 Define a Queue</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ElementType int</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifndef</span> _Queue_h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> _Queue_h</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">QueueRecord</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">QueueRecord</span>* <span class=\"title\">Queue</span>;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsFull</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\">Queue <span class=\"title\">CreateQueue</span><span class=\"params\">( <span class=\"keyword\">int</span> MaxElements )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">DisposeQueue</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MakeEmpty</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Enqueue</span><span class=\"params\">( ElementType X, Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">Front</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Dequeue</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"function\">ElementType <span class=\"title\">FrontAndDequeue</span><span class=\"params\">( Queue Q )</span></span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span>\t<span class=\"comment\">/* _Queue_h */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">QueueRecord</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Capacity;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Front;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Rear;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Size;</span><br><span class=\"line\">\tElementType *Array;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-4-3-2-Operations\"><a href=\"#3-4-3-2-Operations\" class=\"headerlink\" title=\"3.4.3.2 Operations\"></a>3.4.3.2 Operations</h4><p><strong>IsEmpty, MakeEmpty, Enqueue</strong><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">IsEmpty</span><span class=\"params\">( Queue Q )</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Q-&gt;Size == <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">MakeEmpty</span><span class=\"params\">( Queue Q )</span> </span>&#123;</span><br><span class=\"line\">\tQ-&gt;Size = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tQ-&gt;Front = <span class=\"number\">1</span>;</span><br><span class=\"line\">\tQ-&gt;Rear = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">Succ</span><span class=\"params\">( <span class=\"keyword\">int</span> Value, Queue Q )</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (++Value == Queue-&gt;Capacity) &#123;</span><br><span class=\"line\">\t\tValue = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> Value;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Enqueue</span><span class=\"params\">( ElementType X, Queue Q )</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (IsFull( Q )) &#123;</span><br><span class=\"line\">\t\tError(<span class=\"string\">\"Error Full Queue\"</span>);</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tQ-&gt;Size++;</span><br><span class=\"line\">\t\tQ-&gt;Rear = Succ(Q-&gt;Rear, Q);</span><br><span class=\"line\">\t\tQ-&gt;Array[Q-&gt;Rear] = X;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-4-4-Applications-of-Queues\"><a href=\"#3-4-4-Applications-of-Queues\" class=\"headerlink\" title=\"3.4.4 Applications of Queues\"></a>3.4.4 Applications of Queues</h3><ul>\n<li>Calls to large companies are generally placed in a queue when all operations are busy</li>\n<li>In large universities when resources are limited</li>\n</ul>"},{"title":"ConcurrentLinkedQueue使用","author":"OCD","date":"2018-12-21T13:01:34.000Z","_content":"\nConcurrentLinkedQueue 笔记\n\n\n## 定义\n\n一个基于链接节点的无界线程安全列队. 此列队按照 FIFO (先进先出) 原则对元素进行排序. 队列的头部是队列中时间最长的元素. 队列的尾部是队列中时间最短的元素.\n新的元素插入到队列的尾部, 队列获取操作从队列头部获取元素. 当多个线程共享访问一个公共 collection 时, ConcurrentLinkedQueue 是一个恰当的选择. 此队列不允许使用 null 元素.\n\n\n## offer 和 poll\n\n[offer](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#offer(E))([E](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html) e)\n将指定元素插入此队列的尾部.\n\n[poll](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#poll())\n获取并移除此队列的头, 如果此队列为空, 则返回null.\n\n``` java\npublic static void main(String[] args) {\n    ConcurrentLinkedQueue queue = new ConcurrentLinkedQueue();\n    queue.offer(\"嘤嘤嘤\");\n    System.out.println(\"offer 后，队列是否空？\" + queue.isEmpty());\n    System.out.println(\"从队列中 poll：\" + queue.poll());\n    System.out.println(\"pool 后，队列是否空？\" + queue.isEmpty());\n}\n```\n\noffer 是往队列添加元素, poll是从队列取出元素并且删除该元素.\n\n执行结果:\n> offer 后, 队列是否为空? false\n从队列 poll: 嘤嘤嘤\npool 后, 队列是否为空? true\n\nConcurrentLinkedQueue 中的 add() 和 offer() 完全一样, 都是往队列尾部添加元素.\n\n\n## 还有个取出元素方法 peek\n\n[peek](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#peek())\n获取但不移除此队列的头; 如果此队列为空, 则返回null\n\n``` java\npublic static void main(String[] args) {\n    ConcurrentLinkedQueue queue = new ConcurrentLinkedQueue();\n    queue.offer(\"emmm\");\n    System.out.println(\"offer 后, 队列是否空?\" + queue.isEmpty());\n    System.out.println(\"从队列中 peek: \" + queue.peek());\n    System.out.println(\"从队列中 peek: \" + queue.peek());\n    System.out.println(\"从队列中 peek: \" + queue.peek());\n    System.out.println(\"pool 后. 队列是否空? \" + queue.isEmpty());\n}\n```\n\n执行结果:\n> offer 后，队列是否空? false\n从队列中 peek: emmm\n从队列中 peek: emmm\n从队列中 peek: emmm\npool 后, 队列是否空? false\n\n\n## remove\n\n[remove](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#remove(java.lang.Object))([Object](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/lang/Object.html) o)\n从队列中移除指定元素的单个实例(如果存在)\n\n``` java\npublic static void main(String[] args) {\n    ConcurrentLinkedQueue queue = new ConcurrentLinkedQueue();\n    queue.offer(\"hhh\");\n    System.out.println(\"offer 后, 队列是否空? \" + queue.isEmpty());\n    System.out.println(\"从队列中 remove 已存在元素: \" + queue.remove(\"xxx\"));\n    System.out.println(\"从队列中 remove 不存在元素: \" + queue.remove(\"123\"));\n    System.out.println(\"remove 后, 队列是否空? \" + queue.isEmpty());\n    }\n```\n\nremove 一个元素, 会返回 true, remove 不存在元素, 返回 false.\n\n执行结果:\n\n> offer 后, 队列是否空? false\n从队列中 remove 已存在元素: true\n从队列中 remove 不存在元素: false\nremove 后, 队列是否空? true\n\n\n## size or isEmpty\n\n[size](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#size())()\n返回此队列中的元素数量\n\n__注意:__\n> 如果此队列包含的元素大于 \bInteger.MAX_VALUE, 则返回 Integer.MAX_VALUE. 需要小心的是, 与大多数 collection 不同, 此方法不是一个固定时间操作. 由于这些队列的异步特性, 确定当前的\b元素数需要进行一次花费 O(n) 时间的遍历.\n所以在需要\b判断队列是否为空时, 尽量不要用 queue.size()>0, 而是用 !queue.isEmpty()\n\n比较 size() 和 isEmpty() 效率的实例:\n场景: 10000个人去饭店吃饭, 10张桌子, 分别比较 size() 和 isEmpty() 的耗时\n\n``` java\npublic class Test01ConcurrentLinkedQueue {\n    public static void main(String[] args) throws InterruptedException {\n        int peopleNum = 10000;//吃饭人数\n        int tableNum = 10;//饭桌数量\n\n        ConcurrentLinkedQueue<String> queue = new ConcurrentLinkedQueue<>();\n        CountDownLatch count = new CountDownLatch(tableNum);//计数器\n\n        //将吃饭人数放入队列（吃饭的人进行排队）\n        for(int i=1;i<=peopleNum;i++){\n            queue.offer(\"消费者_\" + i);\n        }\n        //执行10个线程从队列取出元素（10个桌子开始供饭）\n        System.out.println(\"-----------------------------------开饭了-----------------------------------\");\n        long start = System.currentTimeMillis();\n        ExecutorService executorService = Executors.newFixedThreadPool(tableNum);\n        for(int i=0;i<tableNum;i++) {\n            executorService.submit(new Dinner(\"00\" + (i+1), queue, count));\n        }\n        //计数器等待，知道队列为空（所有人吃完）\n        count.await();\n        long time = System.currentTimeMillis() - start;\n        System.out.println(\"-----------------------------------所有人已经吃完-----------------------------------\");\n        System.out.println(\"共耗时：\" + time);\n        //停止线程池\n        executorService.shutdown();\n    }\n\n    private static class Dinner implements Runnable{\n        private String name;\n        private ConcurrentLinkedQueue<String> queue;\n        private CountDownLatch count;\n\n        public Dinner(String name, ConcurrentLinkedQueue<String> queue, CountDownLatch count) {\n            this.name = name;\n            this.queue = queue;\n            this.count = count;\n        }\n\n        @Override\n        public void run() {\n            //while (queue.size() > 0){\n            while (!queue.isEmpty()){\n                //从队列取出一个元素 排队的人少一个\n                System.out.println(\"【\" +queue.poll() + \"】----已吃完...， 饭桌编号：\" + name);\n            }\n            count.countDown();//计数器-1\n        }\n    }\n}\n```\n\n执行结果:\n> 使用 size 耗时: 757ms\n![](https://ws3.sinaimg.cn/large/006tNbRwgy1fyepm8ds8ij30g0049t91.jpg)\n使用 isEmpty 耗时: 210ms\n![](https://ws1.sinaimg.cn/large/006tNbRwgy1fyepmvpgvdj30iw049dg5.jpg)\n\n当数据\b越大, 这种耗时差距越明显. 所以这种判断用 isEmpty 更加合理.\n\n\n## contains\n\n[contains](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#contains(java.lang.Object))([Object](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/lang/Object.html) o)\n如果此列队包含指定元素, 则返回 true\n\n``` java\npublic static void main(String[] args) throws InterruptedException {\n    ConcurrentLinkedQueue queue = new ConcurrentLinkedQueue();\n    queue.offer(\"123\");\n    System.out.println(queue.contains(\"123\"));\n    System.out.println(queue.contains(\"234\"));\n}\n```\n\n执行结果:\n> ![](https://ws3.sinaimg.cn/large/006tNbRwgy1fyeprtdib4j306z01at8h.jpg)\n\n\n## toArray\n\n[toArray](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#toArray())\n返回以恰当顺序包含此队列所有元素的数组\n\n[toArray](T[] a)\n返回以恰当顺序包含此队列所有元素的数组, 返回数组的运行时类型是指数组的运行时类型\n``` java\npublic static void main(String[] args) throws InterruptedException {\n    ConcurrentLinkedQueue<String> queue = new ConcurrentLinkedQueue<String>();\n    queue.offer(\"123\");\n    queue.offer(\"234\");\n    Object[] objects = queue.toArray();\n    System.out.println(objects[0] + \", \" + objects[1]);\n\n    //将数据存储到指定数组\n    String[] strs = new String[2];\n    queue.toArray(strs);\n    System.out.println(strs[0] + \", \" + strs[1]);\n}\n```\n\n执行结果:\n> ![](https://ws1.sinaimg.cn/large/006tNbRwgy1fyepuyo52ej305e01kjr6.jpg)\n\n\n## iterator\n\n[ierator](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#iterator())()\n返回在此队列元素上以恰当顺序进行迭代的迭代器\n\n``` java\npublic static void main(String[] args) throws InterruptedException {\n    ConcurrentLinkedQueue<String> queue = new ConcurrentLinkedQueue<String>();\n    queue.offer(\"123\");\n    queue.offer(\"234\");\n    Iterator<String> iterator = queue.iterator();\n    while (iterator.hasNext()){\n        System.out.println(iterator.next());\n    }\n}\n```\n\n![](https://ws1.sinaimg.cn/large/006tNbRwgy1fyepyiyx30j305601f3ya.jpg)","source":"_posts/ConcurrentLinkedQueue使用.md","raw":"---\ntitle: ConcurrentLinkedQueue使用\nauthor: \"OCD\"\ndate: 2018-12-21 21:01:34\ncategory:\n    - java\ntags:\n    - java\n    - android\n---\n\nConcurrentLinkedQueue 笔记\n\n\n## 定义\n\n一个基于链接节点的无界线程安全列队. 此列队按照 FIFO (先进先出) 原则对元素进行排序. 队列的头部是队列中时间最长的元素. 队列的尾部是队列中时间最短的元素.\n新的元素插入到队列的尾部, 队列获取操作从队列头部获取元素. 当多个线程共享访问一个公共 collection 时, ConcurrentLinkedQueue 是一个恰当的选择. 此队列不允许使用 null 元素.\n\n\n## offer 和 poll\n\n[offer](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#offer(E))([E](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html) e)\n将指定元素插入此队列的尾部.\n\n[poll](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#poll())\n获取并移除此队列的头, 如果此队列为空, 则返回null.\n\n``` java\npublic static void main(String[] args) {\n    ConcurrentLinkedQueue queue = new ConcurrentLinkedQueue();\n    queue.offer(\"嘤嘤嘤\");\n    System.out.println(\"offer 后，队列是否空？\" + queue.isEmpty());\n    System.out.println(\"从队列中 poll：\" + queue.poll());\n    System.out.println(\"pool 后，队列是否空？\" + queue.isEmpty());\n}\n```\n\noffer 是往队列添加元素, poll是从队列取出元素并且删除该元素.\n\n执行结果:\n> offer 后, 队列是否为空? false\n从队列 poll: 嘤嘤嘤\npool 后, 队列是否为空? true\n\nConcurrentLinkedQueue 中的 add() 和 offer() 完全一样, 都是往队列尾部添加元素.\n\n\n## 还有个取出元素方法 peek\n\n[peek](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#peek())\n获取但不移除此队列的头; 如果此队列为空, 则返回null\n\n``` java\npublic static void main(String[] args) {\n    ConcurrentLinkedQueue queue = new ConcurrentLinkedQueue();\n    queue.offer(\"emmm\");\n    System.out.println(\"offer 后, 队列是否空?\" + queue.isEmpty());\n    System.out.println(\"从队列中 peek: \" + queue.peek());\n    System.out.println(\"从队列中 peek: \" + queue.peek());\n    System.out.println(\"从队列中 peek: \" + queue.peek());\n    System.out.println(\"pool 后. 队列是否空? \" + queue.isEmpty());\n}\n```\n\n执行结果:\n> offer 后，队列是否空? false\n从队列中 peek: emmm\n从队列中 peek: emmm\n从队列中 peek: emmm\npool 后, 队列是否空? false\n\n\n## remove\n\n[remove](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#remove(java.lang.Object))([Object](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/lang/Object.html) o)\n从队列中移除指定元素的单个实例(如果存在)\n\n``` java\npublic static void main(String[] args) {\n    ConcurrentLinkedQueue queue = new ConcurrentLinkedQueue();\n    queue.offer(\"hhh\");\n    System.out.println(\"offer 后, 队列是否空? \" + queue.isEmpty());\n    System.out.println(\"从队列中 remove 已存在元素: \" + queue.remove(\"xxx\"));\n    System.out.println(\"从队列中 remove 不存在元素: \" + queue.remove(\"123\"));\n    System.out.println(\"remove 后, 队列是否空? \" + queue.isEmpty());\n    }\n```\n\nremove 一个元素, 会返回 true, remove 不存在元素, 返回 false.\n\n执行结果:\n\n> offer 后, 队列是否空? false\n从队列中 remove 已存在元素: true\n从队列中 remove 不存在元素: false\nremove 后, 队列是否空? true\n\n\n## size or isEmpty\n\n[size](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#size())()\n返回此队列中的元素数量\n\n__注意:__\n> 如果此队列包含的元素大于 \bInteger.MAX_VALUE, 则返回 Integer.MAX_VALUE. 需要小心的是, 与大多数 collection 不同, 此方法不是一个固定时间操作. 由于这些队列的异步特性, 确定当前的\b元素数需要进行一次花费 O(n) 时间的遍历.\n所以在需要\b判断队列是否为空时, 尽量不要用 queue.size()>0, 而是用 !queue.isEmpty()\n\n比较 size() 和 isEmpty() 效率的实例:\n场景: 10000个人去饭店吃饭, 10张桌子, 分别比较 size() 和 isEmpty() 的耗时\n\n``` java\npublic class Test01ConcurrentLinkedQueue {\n    public static void main(String[] args) throws InterruptedException {\n        int peopleNum = 10000;//吃饭人数\n        int tableNum = 10;//饭桌数量\n\n        ConcurrentLinkedQueue<String> queue = new ConcurrentLinkedQueue<>();\n        CountDownLatch count = new CountDownLatch(tableNum);//计数器\n\n        //将吃饭人数放入队列（吃饭的人进行排队）\n        for(int i=1;i<=peopleNum;i++){\n            queue.offer(\"消费者_\" + i);\n        }\n        //执行10个线程从队列取出元素（10个桌子开始供饭）\n        System.out.println(\"-----------------------------------开饭了-----------------------------------\");\n        long start = System.currentTimeMillis();\n        ExecutorService executorService = Executors.newFixedThreadPool(tableNum);\n        for(int i=0;i<tableNum;i++) {\n            executorService.submit(new Dinner(\"00\" + (i+1), queue, count));\n        }\n        //计数器等待，知道队列为空（所有人吃完）\n        count.await();\n        long time = System.currentTimeMillis() - start;\n        System.out.println(\"-----------------------------------所有人已经吃完-----------------------------------\");\n        System.out.println(\"共耗时：\" + time);\n        //停止线程池\n        executorService.shutdown();\n    }\n\n    private static class Dinner implements Runnable{\n        private String name;\n        private ConcurrentLinkedQueue<String> queue;\n        private CountDownLatch count;\n\n        public Dinner(String name, ConcurrentLinkedQueue<String> queue, CountDownLatch count) {\n            this.name = name;\n            this.queue = queue;\n            this.count = count;\n        }\n\n        @Override\n        public void run() {\n            //while (queue.size() > 0){\n            while (!queue.isEmpty()){\n                //从队列取出一个元素 排队的人少一个\n                System.out.println(\"【\" +queue.poll() + \"】----已吃完...， 饭桌编号：\" + name);\n            }\n            count.countDown();//计数器-1\n        }\n    }\n}\n```\n\n执行结果:\n> 使用 size 耗时: 757ms\n![](https://ws3.sinaimg.cn/large/006tNbRwgy1fyepm8ds8ij30g0049t91.jpg)\n使用 isEmpty 耗时: 210ms\n![](https://ws1.sinaimg.cn/large/006tNbRwgy1fyepmvpgvdj30iw049dg5.jpg)\n\n当数据\b越大, 这种耗时差距越明显. 所以这种判断用 isEmpty 更加合理.\n\n\n## contains\n\n[contains](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#contains(java.lang.Object))([Object](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/lang/Object.html) o)\n如果此列队包含指定元素, 则返回 true\n\n``` java\npublic static void main(String[] args) throws InterruptedException {\n    ConcurrentLinkedQueue queue = new ConcurrentLinkedQueue();\n    queue.offer(\"123\");\n    System.out.println(queue.contains(\"123\"));\n    System.out.println(queue.contains(\"234\"));\n}\n```\n\n执行结果:\n> ![](https://ws3.sinaimg.cn/large/006tNbRwgy1fyeprtdib4j306z01at8h.jpg)\n\n\n## toArray\n\n[toArray](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#toArray())\n返回以恰当顺序包含此队列所有元素的数组\n\n[toArray](T[] a)\n返回以恰当顺序包含此队列所有元素的数组, 返回数组的运行时类型是指数组的运行时类型\n``` java\npublic static void main(String[] args) throws InterruptedException {\n    ConcurrentLinkedQueue<String> queue = new ConcurrentLinkedQueue<String>();\n    queue.offer(\"123\");\n    queue.offer(\"234\");\n    Object[] objects = queue.toArray();\n    System.out.println(objects[0] + \", \" + objects[1]);\n\n    //将数据存储到指定数组\n    String[] strs = new String[2];\n    queue.toArray(strs);\n    System.out.println(strs[0] + \", \" + strs[1]);\n}\n```\n\n执行结果:\n> ![](https://ws1.sinaimg.cn/large/006tNbRwgy1fyepuyo52ej305e01kjr6.jpg)\n\n\n## iterator\n\n[ierator](http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#iterator())()\n返回在此队列元素上以恰当顺序进行迭代的迭代器\n\n``` java\npublic static void main(String[] args) throws InterruptedException {\n    ConcurrentLinkedQueue<String> queue = new ConcurrentLinkedQueue<String>();\n    queue.offer(\"123\");\n    queue.offer(\"234\");\n    Iterator<String> iterator = queue.iterator();\n    while (iterator.hasNext()){\n        System.out.println(iterator.next());\n    }\n}\n```\n\n![](https://ws1.sinaimg.cn/large/006tNbRwgy1fyepyiyx30j305601f3ya.jpg)","slug":"ConcurrentLinkedQueue使用","published":1,"updated":"2018-12-21T14:08:18.699Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjqvsh9220047rmtungpbiklz","content":"<p>ConcurrentLinkedQueue 笔记</p>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>一个基于链接节点的无界线程安全列队. 此列队按照 FIFO (先进先出) 原则对元素进行排序. 队列的头部是队列中时间最长的元素. 队列的尾部是队列中时间最短的元素.<br>新的元素插入到队列的尾部, 队列获取操作从队列头部获取元素. 当多个线程共享访问一个公共 collection 时, ConcurrentLinkedQueue 是一个恰当的选择. 此队列不允许使用 null 元素.</p>\n<h2 id=\"offer-和-poll\"><a href=\"#offer-和-poll\" class=\"headerlink\" title=\"offer 和 poll\"></a>offer 和 poll</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#offer(E\" target=\"_blank\" rel=\"noopener\">offer</a>)(<a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html\" target=\"_blank\" rel=\"noopener\">E</a> e)<br>将指定元素插入此队列的尾部.</p>\n<p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#poll(\" target=\"_blank\" rel=\"noopener\">poll</a>)<br>获取并移除此队列的头, 如果此队列为空, 则返回null.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"嘤嘤嘤\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"offer 后，队列是否空？\"</span> + queue.isEmpty());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 poll：\"</span> + queue.poll());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"pool 后，队列是否空？\"</span> + queue.isEmpty());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>offer 是往队列添加元素, poll是从队列取出元素并且删除该元素.</p>\n<p>执行结果:</p>\n<blockquote>\n<p>offer 后, 队列是否为空? false<br>从队列 poll: 嘤嘤嘤<br>pool 后, 队列是否为空? true</p>\n</blockquote>\n<p>ConcurrentLinkedQueue 中的 add() 和 offer() 完全一样, 都是往队列尾部添加元素.</p>\n<h2 id=\"还有个取出元素方法-peek\"><a href=\"#还有个取出元素方法-peek\" class=\"headerlink\" title=\"还有个取出元素方法 peek\"></a>还有个取出元素方法 peek</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#peek(\" target=\"_blank\" rel=\"noopener\">peek</a>)<br>获取但不移除此队列的头; 如果此队列为空, 则返回null</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"emmm\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"offer 后, 队列是否空?\"</span> + queue.isEmpty());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 peek: \"</span> + queue.peek());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 peek: \"</span> + queue.peek());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 peek: \"</span> + queue.peek());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"pool 后. 队列是否空? \"</span> + queue.isEmpty());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<blockquote>\n<p>offer 后，队列是否空? false<br>从队列中 peek: emmm<br>从队列中 peek: emmm<br>从队列中 peek: emmm<br>pool 后, 队列是否空? false</p>\n</blockquote>\n<h2 id=\"remove\"><a href=\"#remove\" class=\"headerlink\" title=\"remove\"></a>remove</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#remove(java.lang.Object\" target=\"_blank\" rel=\"noopener\">remove</a>)(<a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/lang/Object.html\" target=\"_blank\" rel=\"noopener\">Object</a> o)<br>从队列中移除指定元素的单个实例(如果存在)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"hhh\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"offer 后, 队列是否空? \"</span> + queue.isEmpty());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 remove 已存在元素: \"</span> + queue.remove(<span class=\"string\">\"xxx\"</span>));</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 remove 不存在元素: \"</span> + queue.remove(<span class=\"string\">\"123\"</span>));</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"remove 后, 队列是否空? \"</span> + queue.isEmpty());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>remove 一个元素, 会返回 true, remove 不存在元素, 返回 false.</p>\n<p>执行结果:</p>\n<blockquote>\n<p>offer 后, 队列是否空? false<br>从队列中 remove 已存在元素: true<br>从队列中 remove 不存在元素: false<br>remove 后, 队列是否空? true</p>\n</blockquote>\n<h2 id=\"size-or-isEmpty\"><a href=\"#size-or-isEmpty\" class=\"headerlink\" title=\"size or isEmpty\"></a>size or isEmpty</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#size(\" target=\"_blank\" rel=\"noopener\">size</a>)()<br>返回此队列中的元素数量</p>\n<p><strong>注意:</strong></p>\n<blockquote>\n<p>如果此队列包含的元素大于 \bInteger.MAX_VALUE, 则返回 Integer.MAX_VALUE. 需要小心的是, 与大多数 collection 不同, 此方法不是一个固定时间操作. 由于这些队列的异步特性, 确定当前的\b元素数需要进行一次花费 O(n) 时间的遍历.<br>所以在需要\b判断队列是否为空时, 尽量不要用 queue.size()&gt;0, 而是用 !queue.isEmpty()</p>\n</blockquote>\n<p>比较 size() 和 isEmpty() 效率的实例:<br>场景: 10000个人去饭店吃饭, 10张桌子, 分别比较 size() 和 isEmpty() 的耗时</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test01ConcurrentLinkedQueue</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> peopleNum = <span class=\"number\">10000</span>;<span class=\"comment\">//吃饭人数</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> tableNum = <span class=\"number\">10</span>;<span class=\"comment\">//饭桌数量</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ConcurrentLinkedQueue&lt;String&gt; queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue&lt;&gt;();</span><br><span class=\"line\">        CountDownLatch count = <span class=\"keyword\">new</span> CountDownLatch(tableNum);<span class=\"comment\">//计数器</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//将吃饭人数放入队列（吃饭的人进行排队）</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=peopleNum;i++)&#123;</span><br><span class=\"line\">            queue.offer(<span class=\"string\">\"消费者_\"</span> + i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//执行10个线程从队列取出元素（10个桌子开始供饭）</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"-----------------------------------开饭了-----------------------------------\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">long</span> start = System.currentTimeMillis();</span><br><span class=\"line\">        ExecutorService executorService = Executors.newFixedThreadPool(tableNum);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;tableNum;i++) &#123;</span><br><span class=\"line\">            executorService.submit(<span class=\"keyword\">new</span> Dinner(<span class=\"string\">\"00\"</span> + (i+<span class=\"number\">1</span>), queue, count));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//计数器等待，知道队列为空（所有人吃完）</span></span><br><span class=\"line\">        count.await();</span><br><span class=\"line\">        <span class=\"keyword\">long</span> time = System.currentTimeMillis() - start;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"-----------------------------------所有人已经吃完-----------------------------------\"</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"共耗时：\"</span> + time);</span><br><span class=\"line\">        <span class=\"comment\">//停止线程池</span></span><br><span class=\"line\">        executorService.shutdown();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dinner</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> ConcurrentLinkedQueue&lt;String&gt; queue;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> CountDownLatch count;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Dinner</span><span class=\"params\">(String name, ConcurrentLinkedQueue&lt;String&gt; queue, CountDownLatch count)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.queue = queue;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.count = count;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//while (queue.size() &gt; 0)&#123;</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (!queue.isEmpty())&#123;</span><br><span class=\"line\">                <span class=\"comment\">//从队列取出一个元素 排队的人少一个</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"【\"</span> +queue.poll() + <span class=\"string\">\"】----已吃完...， 饭桌编号：\"</span> + name);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            count.countDown();<span class=\"comment\">//计数器-1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<blockquote>\n<p>使用 size 耗时: 757ms<br><img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fyepm8ds8ij30g0049t91.jpg\" alt=\"\"><br>使用 isEmpty 耗时: 210ms<br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fyepmvpgvdj30iw049dg5.jpg\" alt=\"\"></p>\n</blockquote>\n<p>当数据\b越大, 这种耗时差距越明显. 所以这种判断用 isEmpty 更加合理.</p>\n<h2 id=\"contains\"><a href=\"#contains\" class=\"headerlink\" title=\"contains\"></a>contains</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#contains(java.lang.Object\" target=\"_blank\" rel=\"noopener\">contains</a>)(<a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/lang/Object.html\" target=\"_blank\" rel=\"noopener\">Object</a> o)<br>如果此列队包含指定元素, 则返回 true</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"123\"</span>);</span><br><span class=\"line\">    System.out.println(queue.contains(<span class=\"string\">\"123\"</span>));</span><br><span class=\"line\">    System.out.println(queue.contains(<span class=\"string\">\"234\"</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<blockquote>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fyeprtdib4j306z01at8h.jpg\" alt=\"\"></p>\n</blockquote>\n<h2 id=\"toArray\"><a href=\"#toArray\" class=\"headerlink\" title=\"toArray\"></a>toArray</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#toArray(\" target=\"_blank\" rel=\"noopener\">toArray</a>)<br>返回以恰当顺序包含此队列所有元素的数组</p>\n<p><a href=\"T[] a\">toArray</a><br>返回以恰当顺序包含此队列所有元素的数组, 返回数组的运行时类型是指数组的运行时类型<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue&lt;String&gt; queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue&lt;String&gt;();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"123\"</span>);</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"234\"</span>);</span><br><span class=\"line\">    Object[] objects = queue.toArray();</span><br><span class=\"line\">    System.out.println(objects[<span class=\"number\">0</span>] + <span class=\"string\">\", \"</span> + objects[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//将数据存储到指定数组</span></span><br><span class=\"line\">    String[] strs = <span class=\"keyword\">new</span> String[<span class=\"number\">2</span>];</span><br><span class=\"line\">    queue.toArray(strs);</span><br><span class=\"line\">    System.out.println(strs[<span class=\"number\">0</span>] + <span class=\"string\">\", \"</span> + strs[<span class=\"number\">1</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>执行结果:</p>\n<blockquote>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fyepuyo52ej305e01kjr6.jpg\" alt=\"\"></p>\n</blockquote>\n<h2 id=\"iterator\"><a href=\"#iterator\" class=\"headerlink\" title=\"iterator\"></a>iterator</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#iterator(\" target=\"_blank\" rel=\"noopener\">ierator</a>)()<br>返回在此队列元素上以恰当顺序进行迭代的迭代器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue&lt;String&gt; queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue&lt;String&gt;();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"123\"</span>);</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"234\"</span>);</span><br><span class=\"line\">    Iterator&lt;String&gt; iterator = queue.iterator();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (iterator.hasNext())&#123;</span><br><span class=\"line\">        System.out.println(iterator.next());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fyepyiyx30j305601f3ya.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>ConcurrentLinkedQueue 笔记</p>\n<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>一个基于链接节点的无界线程安全列队. 此列队按照 FIFO (先进先出) 原则对元素进行排序. 队列的头部是队列中时间最长的元素. 队列的尾部是队列中时间最短的元素.<br>新的元素插入到队列的尾部, 队列获取操作从队列头部获取元素. 当多个线程共享访问一个公共 collection 时, ConcurrentLinkedQueue 是一个恰当的选择. 此队列不允许使用 null 元素.</p>\n<h2 id=\"offer-和-poll\"><a href=\"#offer-和-poll\" class=\"headerlink\" title=\"offer 和 poll\"></a>offer 和 poll</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#offer(E\" target=\"_blank\" rel=\"noopener\">offer</a>)(<a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html\" target=\"_blank\" rel=\"noopener\">E</a> e)<br>将指定元素插入此队列的尾部.</p>\n<p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#poll(\" target=\"_blank\" rel=\"noopener\">poll</a>)<br>获取并移除此队列的头, 如果此队列为空, 则返回null.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"嘤嘤嘤\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"offer 后，队列是否空？\"</span> + queue.isEmpty());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 poll：\"</span> + queue.poll());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"pool 后，队列是否空？\"</span> + queue.isEmpty());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>offer 是往队列添加元素, poll是从队列取出元素并且删除该元素.</p>\n<p>执行结果:</p>\n<blockquote>\n<p>offer 后, 队列是否为空? false<br>从队列 poll: 嘤嘤嘤<br>pool 后, 队列是否为空? true</p>\n</blockquote>\n<p>ConcurrentLinkedQueue 中的 add() 和 offer() 完全一样, 都是往队列尾部添加元素.</p>\n<h2 id=\"还有个取出元素方法-peek\"><a href=\"#还有个取出元素方法-peek\" class=\"headerlink\" title=\"还有个取出元素方法 peek\"></a>还有个取出元素方法 peek</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#peek(\" target=\"_blank\" rel=\"noopener\">peek</a>)<br>获取但不移除此队列的头; 如果此队列为空, 则返回null</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"emmm\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"offer 后, 队列是否空?\"</span> + queue.isEmpty());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 peek: \"</span> + queue.peek());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 peek: \"</span> + queue.peek());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 peek: \"</span> + queue.peek());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"pool 后. 队列是否空? \"</span> + queue.isEmpty());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<blockquote>\n<p>offer 后，队列是否空? false<br>从队列中 peek: emmm<br>从队列中 peek: emmm<br>从队列中 peek: emmm<br>pool 后, 队列是否空? false</p>\n</blockquote>\n<h2 id=\"remove\"><a href=\"#remove\" class=\"headerlink\" title=\"remove\"></a>remove</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#remove(java.lang.Object\" target=\"_blank\" rel=\"noopener\">remove</a>)(<a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/lang/Object.html\" target=\"_blank\" rel=\"noopener\">Object</a> o)<br>从队列中移除指定元素的单个实例(如果存在)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"hhh\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"offer 后, 队列是否空? \"</span> + queue.isEmpty());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 remove 已存在元素: \"</span> + queue.remove(<span class=\"string\">\"xxx\"</span>));</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"从队列中 remove 不存在元素: \"</span> + queue.remove(<span class=\"string\">\"123\"</span>));</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"remove 后, 队列是否空? \"</span> + queue.isEmpty());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>remove 一个元素, 会返回 true, remove 不存在元素, 返回 false.</p>\n<p>执行结果:</p>\n<blockquote>\n<p>offer 后, 队列是否空? false<br>从队列中 remove 已存在元素: true<br>从队列中 remove 不存在元素: false<br>remove 后, 队列是否空? true</p>\n</blockquote>\n<h2 id=\"size-or-isEmpty\"><a href=\"#size-or-isEmpty\" class=\"headerlink\" title=\"size or isEmpty\"></a>size or isEmpty</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#size(\" target=\"_blank\" rel=\"noopener\">size</a>)()<br>返回此队列中的元素数量</p>\n<p><strong>注意:</strong></p>\n<blockquote>\n<p>如果此队列包含的元素大于 \bInteger.MAX_VALUE, 则返回 Integer.MAX_VALUE. 需要小心的是, 与大多数 collection 不同, 此方法不是一个固定时间操作. 由于这些队列的异步特性, 确定当前的\b元素数需要进行一次花费 O(n) 时间的遍历.<br>所以在需要\b判断队列是否为空时, 尽量不要用 queue.size()&gt;0, 而是用 !queue.isEmpty()</p>\n</blockquote>\n<p>比较 size() 和 isEmpty() 效率的实例:<br>场景: 10000个人去饭店吃饭, 10张桌子, 分别比较 size() 和 isEmpty() 的耗时</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test01ConcurrentLinkedQueue</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> peopleNum = <span class=\"number\">10000</span>;<span class=\"comment\">//吃饭人数</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> tableNum = <span class=\"number\">10</span>;<span class=\"comment\">//饭桌数量</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ConcurrentLinkedQueue&lt;String&gt; queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue&lt;&gt;();</span><br><span class=\"line\">        CountDownLatch count = <span class=\"keyword\">new</span> CountDownLatch(tableNum);<span class=\"comment\">//计数器</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//将吃饭人数放入队列（吃饭的人进行排队）</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=peopleNum;i++)&#123;</span><br><span class=\"line\">            queue.offer(<span class=\"string\">\"消费者_\"</span> + i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//执行10个线程从队列取出元素（10个桌子开始供饭）</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"-----------------------------------开饭了-----------------------------------\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">long</span> start = System.currentTimeMillis();</span><br><span class=\"line\">        ExecutorService executorService = Executors.newFixedThreadPool(tableNum);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;tableNum;i++) &#123;</span><br><span class=\"line\">            executorService.submit(<span class=\"keyword\">new</span> Dinner(<span class=\"string\">\"00\"</span> + (i+<span class=\"number\">1</span>), queue, count));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//计数器等待，知道队列为空（所有人吃完）</span></span><br><span class=\"line\">        count.await();</span><br><span class=\"line\">        <span class=\"keyword\">long</span> time = System.currentTimeMillis() - start;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"-----------------------------------所有人已经吃完-----------------------------------\"</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"共耗时：\"</span> + time);</span><br><span class=\"line\">        <span class=\"comment\">//停止线程池</span></span><br><span class=\"line\">        executorService.shutdown();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Dinner</span> <span class=\"keyword\">implements</span> <span class=\"title\">Runnable</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> ConcurrentLinkedQueue&lt;String&gt; queue;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> CountDownLatch count;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Dinner</span><span class=\"params\">(String name, ConcurrentLinkedQueue&lt;String&gt; queue, CountDownLatch count)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.queue = queue;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.count = count;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">//while (queue.size() &gt; 0)&#123;</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (!queue.isEmpty())&#123;</span><br><span class=\"line\">                <span class=\"comment\">//从队列取出一个元素 排队的人少一个</span></span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"【\"</span> +queue.poll() + <span class=\"string\">\"】----已吃完...， 饭桌编号：\"</span> + name);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            count.countDown();<span class=\"comment\">//计数器-1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<blockquote>\n<p>使用 size 耗时: 757ms<br><img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fyepm8ds8ij30g0049t91.jpg\" alt=\"\"><br>使用 isEmpty 耗时: 210ms<br><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fyepmvpgvdj30iw049dg5.jpg\" alt=\"\"></p>\n</blockquote>\n<p>当数据\b越大, 这种耗时差距越明显. 所以这种判断用 isEmpty 更加合理.</p>\n<h2 id=\"contains\"><a href=\"#contains\" class=\"headerlink\" title=\"contains\"></a>contains</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#contains(java.lang.Object\" target=\"_blank\" rel=\"noopener\">contains</a>)(<a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/lang/Object.html\" target=\"_blank\" rel=\"noopener\">Object</a> o)<br>如果此列队包含指定元素, 则返回 true</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"123\"</span>);</span><br><span class=\"line\">    System.out.println(queue.contains(<span class=\"string\">\"123\"</span>));</span><br><span class=\"line\">    System.out.println(queue.contains(<span class=\"string\">\"234\"</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<blockquote>\n<p><img src=\"https://ws3.sinaimg.cn/large/006tNbRwgy1fyeprtdib4j306z01at8h.jpg\" alt=\"\"></p>\n</blockquote>\n<h2 id=\"toArray\"><a href=\"#toArray\" class=\"headerlink\" title=\"toArray\"></a>toArray</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#toArray(\" target=\"_blank\" rel=\"noopener\">toArray</a>)<br>返回以恰当顺序包含此队列所有元素的数组</p>\n<p><a href=\"T[] a\">toArray</a><br>返回以恰当顺序包含此队列所有元素的数组, 返回数组的运行时类型是指数组的运行时类型<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue&lt;String&gt; queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue&lt;String&gt;();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"123\"</span>);</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"234\"</span>);</span><br><span class=\"line\">    Object[] objects = queue.toArray();</span><br><span class=\"line\">    System.out.println(objects[<span class=\"number\">0</span>] + <span class=\"string\">\", \"</span> + objects[<span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//将数据存储到指定数组</span></span><br><span class=\"line\">    String[] strs = <span class=\"keyword\">new</span> String[<span class=\"number\">2</span>];</span><br><span class=\"line\">    queue.toArray(strs);</span><br><span class=\"line\">    System.out.println(strs[<span class=\"number\">0</span>] + <span class=\"string\">\", \"</span> + strs[<span class=\"number\">1</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>执行结果:</p>\n<blockquote>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fyepuyo52ej305e01kjr6.jpg\" alt=\"\"></p>\n</blockquote>\n<h2 id=\"iterator\"><a href=\"#iterator\" class=\"headerlink\" title=\"iterator\"></a>iterator</h2><p><a href=\"http://tool.oschina.net/uploads/apidocs/jdk-zh/java/util/concurrent/ConcurrentLinkedQueue.html#iterator(\" target=\"_blank\" rel=\"noopener\">ierator</a>)()<br>返回在此队列元素上以恰当顺序进行迭代的迭代器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> InterruptedException </span>&#123;</span><br><span class=\"line\">    ConcurrentLinkedQueue&lt;String&gt; queue = <span class=\"keyword\">new</span> ConcurrentLinkedQueue&lt;String&gt;();</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"123\"</span>);</span><br><span class=\"line\">    queue.offer(<span class=\"string\">\"234\"</span>);</span><br><span class=\"line\">    Iterator&lt;String&gt; iterator = queue.iterator();</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (iterator.hasNext())&#123;</span><br><span class=\"line\">        System.out.println(iterator.next());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://ws1.sinaimg.cn/large/006tNbRwgy1fyepyiyx30j305601f3ya.jpg\" alt=\"\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjqvsh8w90008rmtuwmeqdgoh","category_id":"cjqvsh8w70005rmtuw3t5944m","_id":"cjqvsh8wg000ermtun2rxa6wy"},{"post_id":"cjqvsh8w10001rmtuixtf8clr","category_id":"cjqvsh8w70005rmtuw3t5944m","_id":"cjqvsh8wi000jrmtu6xac60yz"},{"post_id":"cjqvsh8wd000crmtu6gb63h9f","category_id":"cjqvsh8w70005rmtuw3t5944m","_id":"cjqvsh8wj000mrmtuco4hpio3"},{"post_id":"cjqvsh8w50003rmtu6aq13hoq","category_id":"cjqvsh8w70005rmtuw3t5944m","_id":"cjqvsh8wk000qrmtuk5kr0pq0"},{"post_id":"cjqvsh8wf000drmtu8chesh79","category_id":"cjqvsh8w70005rmtuw3t5944m","_id":"cjqvsh8wl000urmtug62s7xzw"},{"post_id":"cjqvsh8wh000irmtuxxqshm3c","category_id":"cjqvsh8w70005rmtuw3t5944m","_id":"cjqvsh8wn000yrmtuuzwpslkq"},{"post_id":"cjqvsh8w80007rmtuwssqtzhm","category_id":"cjqvsh8w70005rmtuw3t5944m","_id":"cjqvsh8wo0012rmtuwtmbqh0u"},{"post_id":"cjqvsh8wl000trmtuhvbh8lk4","category_id":"cjqvsh8w70005rmtuw3t5944m","_id":"cjqvsh8wp0016rmtu6qaq42f4"},{"post_id":"cjqvsh8wm000xrmtun7lqt5eg","category_id":"cjqvsh8wl000rrmtuqif97c2z","_id":"cjqvsh8wq0019rmtuzcx7a7i5"},{"post_id":"cjqvsh8wk000prmtu90oyypo4","category_id":"cjqvsh8wo0011rmtu3eh0cglb","_id":"cjqvsh8ws001grmtuyvc1t7zr"},{"post_id":"cjqvsh8wj000lrmtujflh5700","category_id":"cjqvsh8wl000rrmtuqif97c2z","_id":"cjqvsh8wv001nrmtutychvyoi"},{"post_id":"cjqvsh8wj000lrmtujflh5700","category_id":"cjqvsh8wq001armtum8medifd","_id":"cjqvsh8ww001rrmtux5jnaqna"},{"post_id":"cjqvsh8wn0010rmtu4922c2f9","category_id":"cjqvsh8wt001irmtu4nm31l4d","_id":"cjqvsh8wx001urmtufvkh0t9x"},{"post_id":"cjqvsh8wo0015rmtuqhxfan2k","category_id":"cjqvsh8wv001prmtuv871fut3","_id":"cjqvsh8wz0021rmtu850exhs9"},{"post_id":"cjqvsh8wq0018rmtu5ps3qxyr","category_id":"cjqvsh8wy001wrmtu271mmdf5","_id":"cjqvsh8wz0024rmtu2iowceom"},{"post_id":"cjqvsh8wr001crmtuiarekv95","category_id":"cjqvsh8wz0022rmtun0h6sgo8","_id":"cjqvsh8x0002armtum6zuokrb"},{"post_id":"cjqvsh8ws001ermtug1ncak34","category_id":"cjqvsh8wt001irmtu4nm31l4d","_id":"cjqvsh8x0002crmtu7uvu3oor"},{"post_id":"cjqvsh8wt001jrmtunov40jx4","category_id":"cjqvsh8x00029rmtutap71fde","_id":"cjqvsh8x1002irmtuy6t3q2uz"},{"post_id":"cjqvsh8wu001lrmtuwlb11rwx","category_id":"cjqvsh8wy001wrmtu271mmdf5","_id":"cjqvsh8x2002lrmtu7qz9c3vq"},{"post_id":"cjqvsh8wv001qrmtue8pmixuy","category_id":"cjqvsh8wv001prmtuv871fut3","_id":"cjqvsh8x2002ormtu2hwzean3"},{"post_id":"cjqvsh8ww001srmtu63qlvqqi","category_id":"cjqvsh8x2002krmtuby2wg4hj","_id":"cjqvsh8x3002srmtu9zn65j6n"},{"post_id":"cjqvsh8wy001yrmtu8dtwd38q","category_id":"cjqvsh8wz0022rmtun0h6sgo8","_id":"cjqvsh8x3002wrmtusk4rz48r"},{"post_id":"cjqvsh91z0045rmtuepfmyz2q","category_id":"cjqvsh8w70005rmtuw3t5944m","_id":"cjqvsh925004crmtuns0b36do"},{"post_id":"cjqvsh9220047rmtungpbiklz","category_id":"cjqvsh9250049rmtuyex3sfrh","_id":"cjqvsh926004frmtupimf6ocf"}],"PostTag":[{"post_id":"cjqvsh8wd000crmtu6gb63h9f","tag_id":"cjqvsh8w80006rmtu9bq42x4w","_id":"cjqvsh8wh000hrmtunllcpguc"},{"post_id":"cjqvsh8wd000crmtu6gb63h9f","tag_id":"cjqvsh8wb000brmtuxbuctu27","_id":"cjqvsh8wi000krmtugbi7vbeg"},{"post_id":"cjqvsh8w10001rmtuixtf8clr","tag_id":"cjqvsh8w80006rmtu9bq42x4w","_id":"cjqvsh8wk000ormtue2y4jz56"},{"post_id":"cjqvsh8w10001rmtuixtf8clr","tag_id":"cjqvsh8wb000brmtuxbuctu27","_id":"cjqvsh8wl000srmtu1lkyxw4f"},{"post_id":"cjqvsh8wh000irmtuxxqshm3c","tag_id":"cjqvsh8w80006rmtu9bq42x4w","_id":"cjqvsh8wm000wrmtuy3u7ucp7"},{"post_id":"cjqvsh8wh000irmtuxxqshm3c","tag_id":"cjqvsh8wb000brmtuxbuctu27","_id":"cjqvsh8wn000zrmtu7junj8fn"},{"post_id":"cjqvsh8w50003rmtu6aq13hoq","tag_id":"cjqvsh8w80006rmtu9bq42x4w","_id":"cjqvsh8wo0014rmturaqsy9dc"},{"post_id":"cjqvsh8w50003rmtu6aq13hoq","tag_id":"cjqvsh8wb000brmtuxbuctu27","_id":"cjqvsh8wq0017rmtuzxk6z4kk"},{"post_id":"cjqvsh8w80007rmtuwssqtzhm","tag_id":"cjqvsh8w80006rmtu9bq42x4w","_id":"cjqvsh8ws001drmtub4yxc1xn"},{"post_id":"cjqvsh8w80007rmtuwssqtzhm","tag_id":"cjqvsh8wb000brmtuxbuctu27","_id":"cjqvsh8ws001frmtuebgvqp0p"},{"post_id":"cjqvsh8w90008rmtuwmeqdgoh","tag_id":"cjqvsh8w80006rmtu9bq42x4w","_id":"cjqvsh8wu001krmtufmokln35"},{"post_id":"cjqvsh8w90008rmtuwmeqdgoh","tag_id":"cjqvsh8wb000brmtuxbuctu27","_id":"cjqvsh8wv001mrmtunj7bilj3"},{"post_id":"cjqvsh8wa0009rmtu29061wlr","tag_id":"cjqvsh8ws001hrmtu3dgcy0fj","_id":"cjqvsh8wy001xrmtumkqww9o5"},{"post_id":"cjqvsh8wa0009rmtu29061wlr","tag_id":"cjqvsh8wb000brmtuxbuctu27","_id":"cjqvsh8wz001zrmtuawtvli3n"},{"post_id":"cjqvsh8wf000drmtu8chesh79","tag_id":"cjqvsh8wx001trmtun5q9mi11","_id":"cjqvsh8x00026rmtuopo5aks6"},{"post_id":"cjqvsh8wf000drmtu8chesh79","tag_id":"cjqvsh8wz0020rmtu28jxc64f","_id":"cjqvsh8x00027rmtugzqyl3mv"},{"post_id":"cjqvsh8wf000drmtu8chesh79","tag_id":"cjqvsh8wb000brmtuxbuctu27","_id":"cjqvsh8x0002brmtulpug3quh"},{"post_id":"cjqvsh8wj000lrmtujflh5700","tag_id":"cjqvsh8wz0023rmtuuwrdkgxq","_id":"cjqvsh8x1002frmtuell5t5pn"},{"post_id":"cjqvsh8wj000lrmtujflh5700","tag_id":"cjqvsh8x00028rmtuujhq7wkb","_id":"cjqvsh8x1002grmtujrf21d6s"},{"post_id":"cjqvsh8wk000prmtu90oyypo4","tag_id":"cjqvsh8x0002drmtuc3jwmgph","_id":"cjqvsh8x2002nrmtullq95rjd"},{"post_id":"cjqvsh8wk000prmtu90oyypo4","tag_id":"cjqvsh8x1002jrmtuo8yo0j6x","_id":"cjqvsh8x2002prmtug6iswu4n"},{"post_id":"cjqvsh8wl000trmtuhvbh8lk4","tag_id":"cjqvsh8wx001trmtun5q9mi11","_id":"cjqvsh8x3002urmtun4bcdp5m"},{"post_id":"cjqvsh8wl000trmtuhvbh8lk4","tag_id":"cjqvsh8wz0020rmtu28jxc64f","_id":"cjqvsh8x3002vrmtu32l3vrww"},{"post_id":"cjqvsh8wl000trmtuhvbh8lk4","tag_id":"cjqvsh8wb000brmtuxbuctu27","_id":"cjqvsh8x4002yrmtu92aqgyej"},{"post_id":"cjqvsh8wm000xrmtun7lqt5eg","tag_id":"cjqvsh8x3002trmtukab72opu","_id":"cjqvsh8x4002zrmtu71vktj0v"},{"post_id":"cjqvsh8wn0010rmtu4922c2f9","tag_id":"cjqvsh8x3002xrmtuohpxj1gj","_id":"cjqvsh8x40031rmtupbrbm5px"},{"post_id":"cjqvsh8wo0015rmtuqhxfan2k","tag_id":"cjqvsh8x40030rmtuz0ksdm8v","_id":"cjqvsh8x50033rmtu6kelxqhh"},{"post_id":"cjqvsh8wq0018rmtu5ps3qxyr","tag_id":"cjqvsh8x40032rmtu87ryualu","_id":"cjqvsh8x50035rmtu6deywbz0"},{"post_id":"cjqvsh8wr001crmtuiarekv95","tag_id":"cjqvsh8x50034rmtubafwbkjs","_id":"cjqvsh8x60038rmtu4ph0k8yf"},{"post_id":"cjqvsh8wr001crmtuiarekv95","tag_id":"cjqvsh8wz0023rmtuuwrdkgxq","_id":"cjqvsh8x60039rmtuyoq4lbyc"},{"post_id":"cjqvsh8ws001ermtug1ncak34","tag_id":"cjqvsh8x60037rmtus9oubpgj","_id":"cjqvsh8x6003brmtuhexqoqfr"},{"post_id":"cjqvsh8wt001jrmtunov40jx4","tag_id":"cjqvsh8x6003armtu2dpok1vr","_id":"cjqvsh8x7003frmtuf7au44ag"},{"post_id":"cjqvsh8wt001jrmtunov40jx4","tag_id":"cjqvsh8x7003crmtuvutasrc7","_id":"cjqvsh8x7003grmtue09k73ap"},{"post_id":"cjqvsh8wt001jrmtunov40jx4","tag_id":"cjqvsh8x7003drmtuiy5dydrf","_id":"cjqvsh8x8003irmtuh2soi0u2"},{"post_id":"cjqvsh8wu001lrmtuwlb11rwx","tag_id":"cjqvsh8wz0023rmtuuwrdkgxq","_id":"cjqvsh8x8003mrmtuswx7a66k"},{"post_id":"cjqvsh8wu001lrmtuwlb11rwx","tag_id":"cjqvsh8x7003hrmtu2c0piuqg","_id":"cjqvsh8x8003nrmtut5cbtk4k"},{"post_id":"cjqvsh8wu001lrmtuwlb11rwx","tag_id":"cjqvsh8x8003jrmtuqxflo71d","_id":"cjqvsh8x9003prmtum0o1pwlk"},{"post_id":"cjqvsh8wu001lrmtuwlb11rwx","tag_id":"cjqvsh8x8003krmtumuj0nymh","_id":"cjqvsh8x9003qrmtusl7g4urm"},{"post_id":"cjqvsh8wv001qrmtue8pmixuy","tag_id":"cjqvsh8x8003lrmtu9os15a3s","_id":"cjqvsh8x9003srmtuobkw5rvf"},{"post_id":"cjqvsh8wv001qrmtue8pmixuy","tag_id":"cjqvsh8x8003ormtum5w15043","_id":"cjqvsh8x9003trmtuedvycc0h"},{"post_id":"cjqvsh8ww001srmtu63qlvqqi","tag_id":"cjqvsh8x9003rrmtu9r3jnd52","_id":"cjqvsh8x9003wrmtumoseynp1"},{"post_id":"cjqvsh8ww001srmtu63qlvqqi","tag_id":"cjqvsh8x9003urmtuax7i752o","_id":"cjqvsh8x9003xrmtuyqfodyzz"},{"post_id":"cjqvsh8wx001vrmtu90tsxi03","tag_id":"cjqvsh8x9003vrmtu1sli6j3j","_id":"cjqvsh8xa0040rmtuhpt0x0dn"},{"post_id":"cjqvsh8wx001vrmtu90tsxi03","tag_id":"cjqvsh8x9003yrmtuvf1umgcr","_id":"cjqvsh8xa0041rmtuxpmpgxf0"},{"post_id":"cjqvsh8wy001yrmtu8dtwd38q","tag_id":"cjqvsh8x6003armtu2dpok1vr","_id":"cjqvsh8xa0043rmtubaaj60p9"},{"post_id":"cjqvsh8wy001yrmtu8dtwd38q","tag_id":"cjqvsh8xa0042rmtuyi5sjjuq","_id":"cjqvsh8xb0044rmtuu0jkd152"},{"post_id":"cjqvsh91z0045rmtuepfmyz2q","tag_id":"cjqvsh8wb000brmtuxbuctu27","_id":"cjqvsh9240048rmtufz3oq3df"},{"post_id":"cjqvsh91z0045rmtuepfmyz2q","tag_id":"cjqvsh8wx001trmtun5q9mi11","_id":"cjqvsh925004brmtupz9bh99v"},{"post_id":"cjqvsh91z0045rmtuepfmyz2q","tag_id":"cjqvsh8wz0020rmtu28jxc64f","_id":"cjqvsh925004drmtu123epg67"},{"post_id":"cjqvsh9220047rmtungpbiklz","tag_id":"cjqvsh925004armtut3ltw2ox","_id":"cjqvsh926004grmtuj4x59oqb"},{"post_id":"cjqvsh9220047rmtungpbiklz","tag_id":"cjqvsh926004ermtuz5kif6r5","_id":"cjqvsh927004hrmtusitgi99b"}],"Tag":[{"name":"Python","_id":"cjqvsh8w80006rmtu9bq42x4w"},{"name":"Develop","_id":"cjqvsh8wb000brmtuxbuctu27"},{"name":"Android build","_id":"cjqvsh8ws001hrmtu3dgcy0fj"},{"name":"C","_id":"cjqvsh8wx001trmtun5q9mi11"},{"name":"Data Structure","_id":"cjqvsh8wz0020rmtu28jxc64f"},{"name":"MacOS","_id":"cjqvsh8wz0023rmtuuwrdkgxq"},{"name":"Time Machine","_id":"cjqvsh8x00028rmtuujhq7wkb"},{"name":"Senior Year","_id":"cjqvsh8x0002drmtuc3jwmgph"},{"name":"New Year","_id":"cjqvsh8x1002jrmtuo8yo0j6x"},{"name":"ArchLinux","_id":"cjqvsh8x3002trmtukab72opu"},{"name":"广告过滤","_id":"cjqvsh8x3002xrmtuohpxj1gj"},{"name":"NexT","_id":"cjqvsh8x40030rmtuz0ksdm8v"},{"name":"windows","_id":"cjqvsh8x40032rmtu87ryualu"},{"name":"Android Build","_id":"cjqvsh8x50034rmtubafwbkjs"},{"name":"OpenWRT","_id":"cjqvsh8x60037rmtus9oubpgj"},{"name":"sony","_id":"cjqvsh8x6003armtu2dpok1vr"},{"name":"sony headphone connect","_id":"cjqvsh8x7003crmtuvutasrc7"},{"name":"android app 反编译修改","_id":"cjqvsh8x7003drmtuiy5dydrf"},{"name":"Clover","_id":"cjqvsh8x7003hrmtu2c0piuqg"},{"name":"iMessage","_id":"cjqvsh8x8003jrmtuqxflo71d"},{"name":"FaceTime","_id":"cjqvsh8x8003krmtumuj0nymh"},{"name":"theme-NexT","_id":"cjqvsh8x8003lrmtu9os15a3s"},{"name":"unsplash","_id":"cjqvsh8x8003ormtum5w15043"},{"name":"raspi","_id":"cjqvsh8x9003rrmtu9r3jnd52"},{"name":"Serial Communications","_id":"cjqvsh8x9003urmtuax7i752o"},{"name":"Next","_id":"cjqvsh8x9003vrmtu1sli6j3j"},{"name":"Hexo","_id":"cjqvsh8x9003yrmtuvf1umgcr"},{"name":"android build download","_id":"cjqvsh8xa0042rmtuyi5sjjuq"},{"name":"java","_id":"cjqvsh925004armtut3ltw2ox"},{"name":"android","_id":"cjqvsh926004ermtuz5kif6r5"}]}}