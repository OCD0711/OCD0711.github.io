<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Trees]]></title>
    <url>%2F2018%2F11%2F26%2F2017-12-08-Trees%2F</url>
    <content type="text"><![CDATA[In a Tree, the running time for most operations is O(logN) 4.1 Preliminaries A tree can be defined in several ways. One natural way to define a tree is recursively. A tree is a collection of nodes. If not empty, a tree consists of a distinguished node _r_, called the root, and zero or more nonempty (sub)trees _T1_, _T2_, …. , _Tk_, each of whose roots are connected by a directed edge from _r_ The root of each subtree is said to be a child of _r_, and _r_ is the parent of each subtree root. Figure 4.1 A tree 4.1.1 Implementation of TreesThe solution is simple: Keep the children of each node in a linked list of tree nodes.1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950#define ElementType inttypedef struct TreeNode* PtrToNode;struct TreeNode&#123; ElementType Element; PtrToNode FirstChild; PtrToNode NextSibling;&#125;;``` `FirstChild` points to the head of its child `NextSibling` points to its brother in the linked list### 4.1.2 Tree Traversals with an ApplicationThe structure of a Unix file system.`/usr`__Codes to imply this idea:__```cstatic void ListDir( DirectoryOrFile D, int Depth )&#123; if (D is a legitimate entry) &#123; PrintName(D, Depth); if (D is an directory ) &#123; for each child, C of D ListDir(C, Depth+1); &#125; &#125;&#125;void ListDirectory( DirectoryOrFile D )&#123; ListDir(D, 0);&#125;static void SizeOfDirectory( DirectoryOrFile D )&#123; int TotalSize; TotalSize = 0; if( D is a legitimate entry ) &#123; TotalSize = FileSize( D ); if( D is a directory ) for each child C of D TotalSize += SizeOfDirectory( C ); &#125; return TotalSize;&#125; 4.2 Binary TreesA binary tree is a tree in which no node can have more than two children. 4.2.1 Implementation Because a binary tree has most two children, we can keep direct pointers to them. In that a node is a structure consists of the Key information plus two pointers (left and right) to other nodes. 123456789typedef struct TreeNode* PtrToNode;typedef struct PtrToNode Tree;struct TreeNode&#123; ElementType Element; Tree Left; Tree Right;&#125;; 4.2.2 Expression TreesWe can produce an (overly parenthesized) infix expression by recursively producing a parenthesized left expression, then print out the operator at the root, and finally recursively producing a right parenthesized expression. This general strategy is known as an inorder traversal; it is easy to remember because of the type of expression it produces. There are two alternative strategies. See the book for more examples. Constructing an Expression TreeWe now give an algorithm to convert a postfix expression into an expression tree.As an example, suppose the input is: a b + c d e + * *Codes can be found here. 4.3 AVL TreeAn AVL tree is a search tree with a balance condition. Require the left and right subtrees have the same height Every node must have left and right trees with the same height. An AVL tree is identical to a binary search tree, except that for every node in the tree, the height of the left and right subtrees can differ at most 1. (The height of a empty tree is defined to be -1)Figure: A AVL tree Note: Balanced factor (Wikipedia)In a binary tree the balance factor of a node N is defined to be the height difference BalanceFactor(N) := Height(RightSubtree(N)) – Height(LeftSubtree(N)) of its two child subtrees. A binary tree is defined to be an AVL tree if the invariant BalanceFactor(N) ∈ {–1,0,+1} holds for every node N in the tree. A node N with BalanceFactor(N) &lt; 0 is called “left-heavy”, one with BalanceFactor(N) &gt; 0 is called “right-heavy”, and one with BalanceFactor(N) = 0 is sometimes simply called “balanced”. The minimum number of nodes, S(h) , in an AVL tree of height h is given by S(h) = S(h-1) + S(h-2) + 1 Thus, all the tree operations can be performed in O($$log(N)$$) time, except possibly insertion( we will assume lazy deletion ). When we do a insertion, we need to update all the balancing information for the nodes on the path back to the root, but the reason that insertion is potentially difficult is that inserting a node could violate the AVL Tree property. If this is the case, then the property has to be resorted before the insertion step is considered over. It turns out that this can always be done with a simple modification to the tree, known as a rotation After insertion, only nodes that are on the path from the insertion point to the root might have their balance altered because only those nodes have their subtrees altered. As we follow the path up to the root and update the balancing information, we may find a node whose new balance violates the AVL condition. Lets call the node that must be rebalanced $${\alpha}$$. Since any node has at most two children, and a height imbalance requires that $${\alpha}$$’s two subtrees’ height differ by two, it is easy to see that a violation might occur in four cases: An insertion into the left subtree of the left child of $${\alpha}$$; An insertion into the right subtree of the left child of $${\alpha}$$. An insertion into the left subtree of the right child of $${\alpha}$$. An insertion into the left subtree of the right child of $${\alpha}$$. The first case (left-left right-right) is fixed by a single rotation of the tree and the second case (left-right right-left) is handled by a more complex double rotation.]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Develop</tag>
        <tag>C</tag>
        <tag>Data Structure</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Use Apple Time-Machine on Raspberry Pi with ArchLinux ARM]]></title>
    <url>%2F2018%2F11%2F26%2F2018-03-29-Use-TM-On-RPi-With-Arch-Linux%2F</url>
    <content type="text"><![CDATA[作为下次设置的备份. 1. 要求 A Raspberry A hard drive A stable internet connection 2. Installation 使用 yaourt 进行环境设置 2.1 Pre-install123# Install required Packagesyaourt -Syuyaourt -S avahi nss-mdns netatalk hfsplus Note:In the process you may encounter architecture errors like1==&gt; ERROR: xxx is not available for the &apos;aarch64&apos; architecture. then just edit the PKGBUILD and set the arch = &#39;any&#39; to silent the warning 2.2 Set up device and folder2.2.1. We should set up the device (hard drive)12# Check if the device is connected sudo blkid Here is the output of my Pi: 123456789➜ sudo blkid/dev/mmcblk0p1: SEC_TYPE=&quot;msdos&quot; UUID=&quot;120A-474C&quot; TYPE=&quot;vfat&quot; PARTUUID=&quot;31203949-01&quot;/dev/mmcblk0p2: UUID=&quot;66ffe290-de04-4547-b091-82fc1854bd20&quot; TYPE=&quot;ext4&quot; PARTUUID=&quot;31203949-02&quot;/dev/sda1: LABEL=&quot;EFI&quot; UUID=&quot;67E3-17ED&quot; TYPE=&quot;vfat&quot; PARTLABEL=&quot;EFI System Partition&quot; PARTUUID=&quot;1e03d7c8-468b-40f0-a9f8-dcade8ea43e7&quot;/dev/sda2: LABEL=&quot;SeagateExpansionMedia&quot; UUID=&quot;18E4C435E4C41742&quot; TYPE=&quot;ntfs&quot; PARTUUID=&quot;f47076b7-b738-4136-aba3-7ce886844070&quot;/dev/sda3: UUID=&quot;d4394cd9-7e11-38db-95a9-7d781e0cbde0&quot; LABEL=&quot;MacOnDisk&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;4c697e1f-5b89-4c97-8bf3-11c819cb117e&quot;/dev/sda4: UUID=&quot;74f09d9f-73b2-30d5-9f89-b9ac88490538&quot; LABEL=&quot;Recovery HD&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;9a17bdc7-3761-458f-b000-4a00debeb31b&quot;/dev/sda5: UUID=&quot;3a161221-c554-3e56-ac93-b30c37087812&quot; LABEL=&quot;Time-Machine&quot; TYPE=&quot;hfsplus&quot; PARTUUID=&quot;2c0ebe1f-1af8-4928-98a3-ce615891e9f0&quot;/dev/mmcblk0: PTUUID=&quot;31203949&quot; PTTYPE=&quot;dos&quot; As you can see here, and I want to backup my Mac to /dev/sda5 which labelled as Time-Machine 2.2.2. Add a user to the machineSo that we can separate the account with others 123sudo useradd timemachinesudo passed timemachine# Then add the password you like for the user timechine 2.2.3. Set up a folder12345# Folder in /media/Time-Machinesudo mkdir -p /media/Time-Machine# Give it permissionsudo chown -R timemachine:users /media/Time-Machine 2.2.4 Set fstabSo that we can mount it automatically to the folder 1sudo nano /etc/fstab and add:1/dev/sda5 /media/Time-Machine hfsplus force,rw,user,auto 0 0 and use:1sudo mount to mount the desired folder. 2.3 Configuration2.3.1 configure afp.conf1234567891011sudo nano /etc/afp.conf``` and input the following lines:```conf[global]UAM list = uams_guest.so, uams_dhx.so, uams_dhx2.so,[Time Machine]path = /media/Time-Machinetime machine = yes 2.3.2 configure Service1sudo nano /etc/avahi/services/afpd.service and paste these lines: 1234567891011121314&lt;?xml version="1.0" standalone='no'?&gt;&lt;!--*-nxml-*--&gt;&lt;!DOCTYPE service-group SYSTEM "avahi-service.dtd"&gt;&lt;service-group&gt; &lt;name replace-wildcards="yes"&gt;%h&lt;/name&gt; &lt;service&gt; &lt;type&gt;_afpovertcp._tcp&lt;/type&gt; &lt;port&gt;548&lt;/port&gt; &lt;/service&gt; &lt;service&gt; &lt;type&gt;_device-info._tcp&lt;/type&gt; &lt;port&gt;0&lt;/port&gt; &lt;txt-record&gt;model=TimeCapsule&lt;/txt-record&gt; &lt;/service&gt;&lt;/service-group&gt; 3. StartNow we can start the service123sudo systemctl enable netatalk.servicesudo systemctl start netatalk.servicesudo systemctl start avahi-daemon.service Done!Just Open your Time Machine Preferences and back your things up Note:the username is timemachinethe password is the password you entered before Credits https://github.com/mr-bt/raspberrypi-timemachine https://www.pihomeserver.fr/en/2013/01/16/raspberry-pi-home-server-arch-linux-sauvegarder-son-mac-avec-time-machine/]]></content>
      <categories>
        <category>Computer</category>
        <category>Raspberry Pi</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
        <tag>Time Machine</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Install ArchLinux on MacBook 2016 and later]]></title>
    <url>%2F2018%2F11%2F26%2F2018-06-08-Install-Arch-Linux-Macbook-13%2F</url>
    <content type="text"><![CDATA[This passage introduces a way to install Arch Linux on MacBook that releases in 2016 and 2017 Caution: You should be aware that some functions may not work properly. Do it on your own risk! 1. OverviewWhat works: 1. On booting Booting Disks HiDPI Accelerated Video Keyboard Backlight USB Screen Brightness Control Sensors Bluetooth 2. Require modules installed Keyboard, touchbar and trackpad 3. Partly Working WiFi (Has some improving method) 4. Not work Suspend/Resume Audio (two cards show up, and intel driver is loaded, but no sound) Notice: You may refer to roadrunner’s Gist for a more accurate list. 2. Preparation2.1 HardwareIn this installation, you need a USB Stick more than 2 GB, a Keybord, A stable internet connection through tethering, and also, USB Hubs. Notice: This guide uses phone USB tethering and you had better not directly connect to WiFi as it is unstable. 2.2 Software Download the latest ArchLinux iso Burn it to your USB sticker - Use the command dd to achieve this. rEFInd Boot Manager - Used to boot your MacBook to ArchLinux Notice: Refer to dd and rEFInd‘s manual for more information! 3. Basic Installation3.1 Booting &amp; Setting up Insert USB Sticker and reboot your MacBook, in the rEFInd menu, select the efi option for booting ArchLinux, and enter the Installation Environment. Connect your keyboard and your phone to MacBook (your phone may need to connect to WiFi in order to not result in high Cellar fee.) Set up tethering: In your phone, click Settings &gt; Network &amp; Internet &gt; Hotspot &amp; tethering &gt; USB Tethering and turn it on. In the computer, type dhcpcd to set up the carrier interface and use ping archlinux.org to test your connection. 3.2 PartitioningWarning: Do it carefully! Use fdisk -l to check your partition table. Look for the disk you want to install ArchLinux (sda sdb …) If you could see a EFI Partition then please ignore the section with the mark * Use fdisk sdX to dig into your disk. Enter p for a table. Partition your Disk. ( * You should create a partition of about 500M at the start the partition table) * Set EFI Partition 12parted sdXset 1 boot on Format 12mkfs.ext4 /dev/sdXymkfs.vfat /dev/sda1* Mount 123mount /dev/sdXy /mntmkdir -p /mnt/bootmount /dev/sda /mnt/boot 3.3 Install Notice: You may need to edit /etc/pacman.d/mirrorlist to choose a mirror 12pacstrap /mnt base base-devel grub efibootmgr wireless_tools vimgenfstab -U /mnt &gt;&gt; /mnt/etc/fstab 3.4 ChrootChroot into the system 1arch-chroot /mnt and follow the official ArchLinux Instruction set up your hostname timezone etc. 3.4.1 Install GRUB ( Loader )Stay in the chroot mode and use the following command: 12grub-install --efi-directory=/bootgrub-mkconfig -o /boot/grub/grub.cfg 4. MacBook Specified Configurations4.1 Make Keyboard WorkInstall the Driver: 1234567pacman -S linux-headersgit clone https://github.com/roadrunner2/macbook12-spi-driver.gitpushd macbook12-spi-drivergit checkout touchbar-driver-hid-driversudo ln -s `pwd` /usr/src/applespi-0.1sudo dkms install applespi/0.1popd Configure mkinitcpio.conf 1sudo nano /etc/mkinitcpio.conf and in the modules section add : 1Modules = (applespi intel_lpss_pci spi_pxa2xx_platform appletb) Then use mkinitcpio -p linux to load them on next boot. Change sensitivity:Save the two following two files to /etc/udev/hwdb.d/: 61-evdev-local.hwdb61-libinput-local.hwdb Note: You can also see them in the appendix. Reboot and enjoy. 4.2 WiFi improvementsThere are two ways to change the bad WiFi condition and the discussion is here. 4.2.1 Edit the driverAs here suggests:Use hex editor to change the /lib/firmware/brcm/brcmfmac43602-pcie.bin12345678910/lib/firmware/brcm/brcmfmac43602-pcie.bin offset 0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF 0 1 2 3 4 5 6 7 8 9 A B C D E F 0123456789ABCDEF0x00000000 80f140b882f1a4b982f1b0b982f1bcb9 ..@............. 80f140b882f1a4b982f1b0b982f1bcb9 ..@.............0x00000010 82f1cbb982f1dab982f1e9b982f1f8b9 ................ 82f1cbb982f1dab982f1e9b982f1f8b9 ...................0x0007c820! 30643a66343a33650063636f64653d58 0d:f4:3e.ccode=X 30643a66343a33650063636f64653d30 0d:f4:3e.ccode=00x0007c830! 30007265677265763d31350061613267 0.regrev=15.aa2g 00007265677265763d30000061613267 ..regrev=0..aa2g0x0007c840 3d3700616135673d370061676267303d =7.aa5g=7.agbg0= 3d3700616135673d370061676267303d =7.aa5g=7.agbg0=0x0007c850 37310061676267313d37310061676267 71.agbg1=71.agbg 37310061676267313d37310061676267 71.agbg1=71.agbg... Note: As I changed the file, I cannot connect to any WiFi networks. More Investigation required. 4.2.2 Change the txpowerThis is simple (see #10) 12ip link set wlp2s0 up # if not already upiwconfig wlp2s0 txpower 10dBm 5. Appendix61-evdev-local.hwdb 12345678910111213141516171819202122232425# MacBook8,1 (2015), MacBook9,1 (2016), MacBook10,1 (2017)evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook8,1:*evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook9,1:*evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBook10,1:* EVDEV_ABS_00=::95 EVDEV_ABS_01=::90 EVDEV_ABS_35=::95 EVDEV_ABS_36=::90# MacBookPro13,* (Late 2016), MacBookPro14,* (Mid 2017)evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,1:*evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,2:*evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,1:*evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,2:* EVDEV_ABS_00=::96 EVDEV_ABS_01=::94 EVDEV_ABS_35=::96 EVDEV_ABS_36=::94evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro13,3:*evdev:name:Apple SPI Touchpad:dmi:*:svnAppleInc.:pnMacBookPro14,3:* EVDEV_ABS_00=::96 EVDEV_ABS_01=::95 EVDEV_ABS_35=::96 EVDEV_ABS_36=::95 61-libinput-local.hwdb 12345libinput:name:*Apple SPI Touchpad*:dmi:*LIBINPUT_MODEL_APPLE_TOUCHPAD=1LIBINPUT_ATTR_KEYBOARD_INTEGRATION=internalLIBINPUT_ATTR_TOUCH_SIZE_RANGE=200:150LIBINPUT_ATTR_PALM_SIZE_THRESHOLD=1200 6. Credits Roadrunner’s gist Many awesome people in bugzilla]]></content>
      <categories>
        <category>Computer</category>
      </categories>
      <tags>
        <tag>ArchLinux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[用户输入和 while 循环]]></title>
    <url>%2F2018%2F11%2F26%2F2017-11-23-User-input-and-while-loop%2F</url>
    <content type="text"><![CDATA[使用 input() 处理用户输入 7.1 函数 input() 工作原理E.g:12message = input("Tell me something, and I will repeat it back to you: ")print(message) Output:123Tell me something, and I will repeat it back to you: Hello, Everyone!Hello, Everyone! 7.1.1 编写清晰的程序没当你编写函数 input() 时, 都应指定清晰而易于明白的提示如下所示:E.g:12name = input("Please enter your name")print("Hello, " + name + "!") Output:12Please enter your name: EricHello, Eric! 7.1.2 使用 int() 来获取数值输入使用函数 input() 时, Python 会将用户输入解读为字符串, 为解决此问题, 可使用函数 int() E.g:12age = input(&quot;How old are you?&quot;)age = int(age) 7.1.3 求模运算符 %E.g: even_or_odd.py1234567number = input("Enter a number, and I'll tell you whether it is even or odd: ")number = int(number)if number % 2 == 0: print("\nThe number " + str(number) + " is even.")else: print("\nThe number " + str(number) + " is odd.") Output:123Enter a number, and I&apos;ll tell you whether it is even or odd: 43The number 43 is odd 7.2 while 循环简介7.2.1 使用 while 循环E.g: counting.py1234current_number = 1while current_number &lt;= 5: print(current_number) current_number += 1 Output:1234512345 7.2.2 让用户选择何时退出we can define a variable and evaluate it when entering whileE.g: parrot.py12345678prompt = "\nTell me something, and I will repeat it back to you: "prompt += "\nEnter 'quit' to end the program: "message = ""while message != 'quit': message = input(prompt) if message != 'quit': print(message) Output:12345678910Tell me something, and I will repeat it back to you:Enter &apos;quit&apos; to end the program: hellohelloTell me something, and I will repeat it back to you:Enter &apos;quit&apos; to end the program: 11Tell me something, and I will repeat it back to you:Enter &apos;quit&apos; to end the program: quit 7.2.3 使用标志E.g: improved_parrot.py1234567891011prompt = "\nTell me something, and I will repeat it back to you: "prompt += "\nEnter 'quit' to end the program: "message = ""active = Truewhile active == True: message = input(prompt) if message == 'quit': active = False else: print(message) Output: same as above7.2.4 Use break to quit a loopE.g: second_inproved_parrot.py12345678910prompt = "\nTell me something, and I will repeat it back to you: "prompt += "\nEnter 'quit' to end the program: "message = ""while True: message = input(prompt) if message == 'quit': break else: print(message) 注: 在任何循环中都可使用 break 7.2.5 Use continueE.g: counting.py1234567current_number = 0while current_number &lt; 10: current_number += 1 if current_number %2 == 0: continue print(current_number) Output:1234513579 7.2.6 避免无限循环7.3 使用 while 处理列表和字典7.3.1 在列表中移动元素E.g: confirmed_users.py123456789101112131415unconfirmed_users = ['alice', 'brian', 'candace']confirmed_users = []while unconfirmed_users: current_user = unconfirmed_users.pop() print("Verifying user: " + current_user.title()) confirmed_users.append(current_user) print("\nThe following users have been confirmed: ")for confirmed_user in confirmed_users: print(confirmed_user.title())``` ###### Output: Verifying user: CandaceVerifying user: BrianVerifying user: Alice The following users have been confirmed:CandaceBrianAlice123456789101112### 7.3.2 删除包含特定值的所有列表元素在第二章中, 我们使用函数 `remove()` 来删除列表中的特定值, 现在要删除多个相同元素:__E.g:__ pets.py```pythonpets = [&apos;dog&apos;, &apos;cat&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;cat&apos;, &apos;rabbit&apos;, &apos;cat&apos;]print(pets)while &apos;cat&apos; in pets: pets.remove(&apos;cat&apos;) print(pets) Output12[&apos;dog&apos;, &apos;cat&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;cat&apos;, &apos;rabbit&apos;, &apos;cat&apos;][&apos;dog&apos;, &apos;dog&apos;, &apos;goldfish&apos;, &apos;rabbit&apos;] 7.3.3 使用用户输入填充字典E.g: mountain_poll.py1234567891011121314151617responses = &#123;&#125;polling_active = Truewhile polling_active: name = input("\nWhat is your name? ") response = input("Which mountain would you like to climb someday? ") responses[name] = response repeat = input("Would you like to let another person respond? (yes/no)") if repeat == 'no': polling_active = False print("\n--- Poll Result ---\n")for name, mountain in responses.items(): print(name.title() + " would like to climb " + mountain.title() + ".") Output:1234567What is your name? bbnWhich mountain would you like to climb someday? aWould you like to let another person respond? (yes/no)no--- Poll Result ---Bbn would like to climb a.]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Develop</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Algorithm Analysis]]></title>
    <url>%2F2018%2F11%2F26%2F2017-11-26-Algorithm-Analysis%2F</url>
    <content type="text"><![CDATA[Showing two possible Algorithms: 1. Maximum Subsequence SumA. O( N*logN )This example uses a divide and conquer strategyExample: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667//// main.c// Temp//// Created by clfbbn on 2017/11/26.// Copyright © 2017年 clfbbn. All rights reserved.//#include &lt;stdio.h&gt;int Max3(int a, int b, int c) &#123; int max; if (a &gt; b) &#123; max = a; &#125; else&#123; max = b; &#125; if (max &lt; c) &#123; max = c; &#125; return max;&#125;static int MaxSubSum( const int A[8], int Left, int Right) &#123; int MaxLeftSum, MaxRightSum; int MaxLeftBroaderSum, MaxRightBroaderSum; int LeftBroaderSum, RightBroaderSum; int Center, i; if (Left == Right) &#123; if (A[ Left ] &gt; 0) &#123; return A[ Left ]; &#125; else&#123; return 0; &#125; &#125; Center = (Left + Right) / 2; MaxLeftSum = MaxSubSum(A, Left, Center); MaxRightSum = MaxSubSum(A, Center + 1, Right); MaxLeftBroaderSum = 0; MaxRightBroaderSum = 0; LeftBroaderSum = 0; RightBroaderSum = 0; for (i = Center; i &gt;= Left; --i) &#123; LeftBroaderSum += A[i]; if (LeftBroaderSum &gt; MaxLeftBroaderSum) &#123; MaxLeftBroaderSum = LeftBroaderSum; &#125; &#125; for (i = Center + 1; i &lt;= Right; ++i) &#123; RightBroaderSum += A[i]; if (RightBroaderSum &gt; MaxRightBroaderSum) &#123; MaxRightBroaderSum = RightBroaderSum; &#125; &#125; return Max3( MaxLeftSum, MaxRightSum, MaxRightBroaderSum + MaxLeftBroaderSum);&#125;int MaxSubsequenceSum(const int A[], int N)&#123; return MaxSubSum(A, 0, N - 1);&#125;int main() &#123; int array[8] = &#123;4, -3, 5, -2, -1, 2, 6, -2,&#125;; printf("%d\n", MaxSubsequenceSum(array, 8)); return 0;&#125; B. O(N)12345678910111213141516int MaxSunsequenceSum_New( const int A[], int N) &#123; int ThisSum, MaxSum, j; ThisSum = MaxSum = 0; for (j = 0; j &lt; N; j++) &#123; ThisSum += A[j]; if (ThisSum &lt; 0) &#123; ThisSum = 0; &#125; if (ThisSum &gt; MaxSum) &#123; MaxSum = ThisSum; &#125; &#125; return MaxSum;&#125; 2. Binary Search ( O(logN) )12345678910111213141516171819202122232425262728#define ElementType int#include &lt;stdio.h&gt;int BinarySearch(const ElementType A[], int N, ElementType x) &#123; int Low, High, Mid; Low = 0; High = N - 1; while (Low &lt;= High) &#123; Mid = (Low + High) / 2; if (x &lt; A[Mid]) &#123; High = Mid; &#125; else if (x &gt; A[Mid]) &#123; Low = Mid + 1; &#125; else &#123; return Mid; &#125; &#125; return -1;&#125;int main() &#123; ElementType Array[] = &#123;1, 7, 4, 3, 2, 5, 7&#125;; printf("%d\n", BinarySearch(Array, 0, 7)); return 0;&#125; 3. Euclid’s Algorithm ( O(logN) )123456789101112131415int gcd(int x, int y) &#123; int t; if (x &lt; y) &#123; t = x; x = y; y = t; &#125; while (y &gt; 0) &#123; t = x; x = y; y = t % y; &#125; return x;&#125; 4. Exponentiation12345678910long int Pow( int X, int N ) &#123; if (N == 0) &#123; return 1; &#125; else if( N % 2 == 0) &#123; return Pow(X * X, N / 2); &#125; else &#123; return Pow(X * X, N / 2) * X; &#125; &#125; 5. Exercises5.1 Calculate $$\sum_{i=0}^N A_iX^i$$12345678long int Cal(int A[], int X, int N)&#123; long int sum = 0; sum = A[0]; for (int i = 0; i &lt; N - 1 ; i++) &#123; sum = X * sum + A[i + 1]; &#125; return sum;&#125; 5.2 Three Ways to generate numbers between A and BWay 112345678910111213141516171819202122232425int inIt(int * arr, int x, int n) &#123; for (int i = 0; i &lt; n; ++ i) &#123; if (x == arr[i]) &#123; return 1; &#125; &#125; return 0;&#125;int* generateA(const int x, const int y) &#123; int* A = malloc(sizeof(int) * (y - x + 1)); int generated; srand((unsigned int)time(NULL)); int i = 0; for (int i = 0; i &lt; y - x + 1; ++i) &#123; A[i] = -1; &#125; while (i &lt; (y - x + 1)) &#123; generated = rand() % (y - x + 1); if (inIt(A, generated, i) == 0) &#123; A[i++] = generated; &#125; &#125; return A;&#125; Way 2123456789101112131415161718int* generateB(const int x, const int y) &#123; int* A = malloc(sizeof(int) * (y - x + 1)); int generated; srand((unsigned int)time(NULL)); int* Used = malloc(sizeof(int) * (y - x + 1)); for (int i = 0; i &lt; y - x + 1; ++i) &#123; Used[i] = 0; &#125; int i = 0; while (i &lt; (y - x + 1)) &#123; generated = rand() % (y - x + 1); if (Used[generated] == 0) &#123; Used[generated] = 1; A[i++] = generated; &#125; &#125; return A;&#125; Way 312345678910int* generateC(const int x, const int y) &#123; int* A = malloc(sizeof(int) * (y - x + 1)); for (int i = 0; i &lt; y - x + 1; ++i) &#123; A[i] = i ; &#125; for (int i = 0; i &lt; y - x + 1; ++ i) &#123; swap(&amp;A[i], &amp;A[RandonInt(0, i)]); &#125; return A;&#125;]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Develop</tag>
        <tag>C</tag>
        <tag>Data Structure</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python-Functions]]></title>
    <url>%2F2018%2F11%2F26%2F2017-11-26-Function%2F</url>
    <content type="text"><![CDATA[要执行函数定义的特定任务, 可调用 函数 8.1 定义函数E.g: greeter.py12345def greet_user(): # Line 1 """Show simple greetings""" # Line 2 print("Hello!") # Line 3 greet_user() # Line 4 Output:1Hello! 解释:Line 1: def 表明你要定义一个函数, 后面缩进构成函数体Line 2: 文档字符串, 由三个引号引起Line 3: 函数代码Line 4: 函数调用 8.1.1 向函数传递信息E.g: improved_greeter.py12345def greet_user(username): # A - 1 """Show simple greeting message""" print("Hello, " + username.title() + "!") greet_user('jesse') # A - 2 Output:1Hello, Jesse! 8.1.2 实参和形参在 A - 1 中, username 是一个形参在 A - 2 中, &#39;jesse&#39; 是一个实参 8.2 传递实参8.2.1 位置实参你调用函数时, Python 必须根据调用中的每个实参都关联到函数定义中的一个形参, 为此, 最简单的关联方式是基于实参的顺序这种调用方式被称为 位置实参 E.g: pets.py1234567def describe_pet(animal_type, pet_name): """Show pets' information""" print("\nI have a " + animal_type + ".") print("My " + animal_type + "'s name is " + pet_name.title() + ".") describe_pet('hamster', 'harry')describe_pet('dog', 'willie') Output123456I have a hamster.My hamster&apos;s name is Harry.I have a dog.My dog&apos;s name is Willie. 8.2.2 关键字实参E.g: new_pets.py1234567def describe_pet(animal_type, pet_name): """Show pets' information""" print("\nI have a " + animal_type + ".") print("My " + animal_type + "'s name is " + pet_name.title() + ".") describe_pet(pet_name = 'harry', animal_type = 'hamster')describe_pet('dog', 'willie') Output is the same as above8.2.3 默认值E.g: new2_pets.py1234567def describe_pet(animal_type = 'dog', pet_name): """Show pets' information""" print("\nI have a " + animal_type + ".") print("My " + animal_type + "'s name is " + pet_name.title() + ".") describe_pet(pet_name = 'harry', animal_type = 'hamster')describe_pet(pet_name = 'willie') Output123456I have a hamster.My hamster&apos;s name is Harry.I have a dog.My dog&apos;s name is Willie. 注: 使用默认值时, 在形参列表中必须先列出没有默认值的形参 8.2.4 等效的函数调用注意到在之前的函数定义: def describe_pet(pet_name, animal_type = &#39;dog&#39;) 在任何情况下都必须给 pet_name 提供实参 略 23333 8.2.5 避免实参错误8.3 返回值8.3.1 简单返回值E.g: formatted_name.py12345678def get_formatted_name(first_name, last_name): """Return Formatted Names""" full_name = first_name + ' ' + last_name return full_name.title() musician = get_formatted_name('jimi', 'hendrix')print(musician) Output1Jimi Hendrix 8.3.2 使实参可选E.g:1def get_formatted_name(first_name, last_name, middle_name = '') 8.3.3 返回字典E.g: person.py123456789def build_person(first_name, last_name, age = ''): """return a Dictionary""" person = &#123;'first': first_name, 'last': last_name&#125; if age: person['age'] = age return person musician = build_person('jimi', 'henrix', age = 27)print(musician) Output:1&#123;&apos;first&apos;: &apos;jimi&apos;, &apos;last&apos;: &apos;henrix&apos;, &apos;age&apos;: 27&#125; 8.3.4 结合使用函数和 while 循环E.g:1234567891011121314def get_formatted_name(first_name, last_name): """Return Formatted Names""" full_name = first_name + ' ' + last_name return full_name.title()# Infinite Loop!while True: print("\nPlease tell me your name: ") f_name = input("First name: ") l_name = input("Last name: ") formatted_name = get_formatted_name(f_name, l_name) print("\nHello, " + formatted_name.title()) 8.4 传递列表E.g: greet_users.py1234567def greet_users(names): """Send greetings to everyone in the list""" for name in names: print("Hello, " + name.title() + "!") usernames = ['hannah', 'ty', 'margot']greet_users(usernames) Output:123Hello, Hannah!Hello, Ty!Hello, Margot! 8.4.1 在函数中修改列表E.g: printing_models.py1234567891011121314151617def print_models(unprinted_designs, completed_models): """ ... """ while unprinted_designs: current_design = unprinted_designs.pop() print("Print model: " + current_design) completed_models.append(current_design) def show_completed_models(completed_models): print("\nThe following models have been printed: ") for completed_model in completed_models: print(completed_model) unprinted_designs = ['iphone case', 'rebot pendant', 'dodecahedron']completed_models = []print_models(unprinted_designs, completed_models)show_completed_models(completed_models) Output:12345678Print model: dodecahedronPrint model: rebot pendantPrint model: iphone caseThe following models have been printed: dodecahedronrebot pendantiphone case 8.4.2 禁止函数修改列表Use function[:] to pass a copy of the list to a sunction切片法表示创建列表副本 8.5 传递任意数量的实参E.g: pizza.py12345def make_pizza(*toppings): print(toppings) make_pizza('pepperoni')make_pizza('mushrooms', 'green peppers', 'extra cheese') Output:12(&apos;pepperoni&apos;,)(&apos;mushrooms&apos;, &apos;green peppers&apos;, &apos;extra cheese&apos;) Explanation:*toppings 创建了一个名为 toppings 的空元组, 并把所有值封装到元组中 8.5.1 结合使用位置实参和任意数量实参E.g: new_pizza.py1234567def make_pizza(size, *toppings): print("\nMaking a " + str(size) + "-inch pizza with the following toppings:") for topping in toppings: print("- " + topping) make_pizza(16, 'pepperoni')make_pizza(12, 'mushrooms', 'green peppers', 'extra cheese') Output1234567Making a 16-inch pizza with the following toppings:- pepperoniMaking a 12-inch pizza with the following toppings:- mushrooms- green peppers- extra cheese]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Develop</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[If Statement]]></title>
    <url>%2F2018%2F11%2F26%2F2017-11-11-if-statements%2F</url>
    <content type="text"><![CDATA[An class for if STATEMENT 3.1 An simple examplecars.py1234567cars = ['audi', 'bmw', 'subaru', 'toyota']for car in cars: if car == 'bmw': print(car.upper()) else: print(car.title()) Output:Audi BMW Subaru Toyota 3.2 条件测试3.2.1 检查是否相等car == &#39;bmw&#39; will output like True or FalseThe following code will always be true12car = 'audi'car == 'audi' Output: True3.2.1.1 检查是否相等时不考虑大小写Use lower() or upper E.g:123car = 'Audi'print(car.lower() == 'audi')print(car) Output:TrueAudi–&gt; 操作不影响存储在变量 car 中的值 3.2.2 检查是否不相等Use != E.g: toppings.py1234requested_topping = 'mushrooms'if requested_topping != 'anchovies': print("Hold the anchovies!") Output: Hold the anchovies!3.2.3 比较数字also use == and != E.g: magic_number.py1234answer = 17if answer != 42: print("This is not the correct answer. please try again!") Output: This is not the correct answer. please try again!3.2.4 检查多个条件Use and and or 3.2.4.1 使用 and 检查多个条件E.g:12345age_0 = 22age_1 = 18print(age_0 &gt;= 21 and age_1 &gt;= 21) # Falseage_1 = 22print(age_0 &gt;= 21 and age_1 &gt;= 21) # True 3.2.4.2 使用 or 检查多个条件同上 3.2.5 检查特定值是否在表中使用关键词 in E.g:123requested_toppings = ['mushrooms', 'onions', 'pineapple']print('mushrooms' in requested_toppings) # Trueprint('pepperoni' in requested_toppings) # false 3.2.6 检查特定元素不在列表中使用关键字 not in E.g: banned_users.py12345banned_users = ['andrew', 'carolina', david']user = 'marie'if user not in banned_users: print(user.title() + ", you can post a response if you wish.") Output:Marie, you can post a response if you wish 3.2.7 bool expression条件测试的别名, 要么为 True 要么为 False E.g:12game_active = Truecan_edit = False 3.3 If语句3.3.1 简单的 if 语句一个测试一个操作 E.g:12if condition_test: do something 1234age = 19if age &gt;= 18: print("You are old enough to vote!") print("Have you registered to vote yet?") this will print two lines Output:You are old enough to vote!Have you registered to vote yet? if age is less than 18, the program will give no output. 3.3.2 if-else 语句else 在if不成立时执行 E.g:1234567age = 17if age &gt;= 18: print("You are old enough to vote") print("Have you registered to vote yet?")else: print("Sorry, you are too young to vote.") print("Please register to cote as soon as you turn 18!") Output:Sorry, you are too young to vote.Please register to cote as soon as you turn 18! 3.3.3 if-elif-else 结构检查超过两个条件的情形 12345678age = 12if age &lt; 4: print("Your admission cost is $0")elif age &lt; 18 print("Your admission cost is $5")else print("Your admission cost is $10") Output: Your admission cost is $53.3.4 使用多个 elif 代码块3.3.5 省略 else 代码块3.3.6 测试多个条件3.4 使用 if 语句处理列表3.4.1 检查特殊元素E.g: toppings.py123456requested_toppings = ['mushrooms', 'green_peppers', extra cheese']for requested_topping in requested_toppings: print("Adding " + requested_topping + '.') print("\nFinished making your pizza") OutputAdding mushrooms.Adding green_peppers.Adding extra cheese. Finished making your pizza A polished version123456789requested_toppings = ['mushrooms', 'green_peppers', extra cheese']for requested_topping in requested_toppings: if requested_topping == 'green_peppers': print(“Sorry we are out of green peppers right now.") else: print("Adding " + requested_topping + '.') print("\nFinished making your pizza") Output:Adding mushroomsSorry we are out of green peppers right now.Adding extra cheese Finished making your pizza 3.4.2 确定列表不是空的使用 for E.g:12345678requested_toppings = []if requested_toppings: for requested_topping in requested_toppings: print("Adding " + requested_topping + '.') print("Finished making your pizza")else print("Are you sure you want a plain pizza?") Output:Are you sure you want a plain pizza? 3.4.3 使用多个列表Skipped]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Develop</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 入门]]></title>
    <url>%2F2018%2F11%2F26%2F2017-11-11-new-to-python%2F</url>
    <content type="text"><![CDATA[Python - A powerful language 1.1. A simple programHello, world12#!/usr/bin/env python3print("Hello", "World") 1.2. 数据类型int and str 1.2.1. str Usage123456print(name.title()) # 首字母大写print(name.upper()) # 全部大写print(name.lower()) # 全部小写print(favourite_language.rstrip()) # 去处末尾空格print(favourite_language.lstrip()) # 去处开头空格print(favourite_language.strip()) # 去除所有空格 1.2.2. int Usage+ - * / 运算]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Develop</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 列表]]></title>
    <url>%2F2018%2F11%2F26%2F2017-11-11-python-list%2F</url>
    <content type="text"><![CDATA[使用 [] 表示列表 2.1. Example – bicycles.py12bicycles = ['trek', 'cannondale', 'redline', 'specialized'] print( bicycles) The output is [&#39;trek&#39;, &#39;cannondale&#39;, &#39;redline&#39;, &#39;specialized&#39;] 输出元素 –&gt; print(bicycles[0]) to print trek START FROM 0!!!!!注: 使用 bicycle[-1] 以取得 bicycle 中的倒数第一个元素&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;bicycle[-2] 以取得 bicycle 中的倒数第二个元素&ensp;&ensp;&ensp;&ensp;·······&ensp;&ensp;&ensp;&ensp;依次类推 2.2. 改变一个元素的值 Example –&gt; change ‘trek’ to ‘test’1bicycles[0] = 'test' 2.3. 使用append() 将元素添加到列表末尾1bicycles.append('test_end') one more example here 12345motorbicycles = []motorbicycles.append('cannondale')motorbicycles.append('redline')motorbicycles.append('specialized')print(motorbicycles) Output [&#39;cannondale&#39;, &#39;reline&#39;, &#39;specialized&#39;] 2.4. 使用 insert() 向列表添加元素注: motorbicycles 与上文相同.12motorbicycles.insert(0, 'ducati')print(motorbicycles) Output [&#39;ducati&#39;, &#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;] 2.5. 删除语句2.5.1 使用 del 语句12del motorbicycles[0]print(motorbicycles) Output [&#39;cannondale&#39;, &#39;realine&#39;, &#39;specialized&#39;]2.5.2 使用 pop() 删除元素pop()可删除列表末尾的元素，并让你能够接着使用它。12345motorcycles = ['honda', 'yamaha', 'suzuki']print(motorcycles)popped_motorcycle = motorcycles.pop()print(motorcycles)print(popped_motorcycle) Output:[&#39;honda&#39;, &#39;yamaha&#39;, &#39;suzuki&#39;][&#39;honda&#39;, &#39;yamaha&#39;]suzuki使用 pop(int) 来确定弹出位置 motorcycles.pop(0) 为弹出第0(1)个位置的 honda 2.5.3 使用 remove 按值删除元素motorcycles.remove(&#39;honda&#39;) 会删除 honda 2.6 使用 sort() 对列表进行永久排序 cars.py12345cars = ['bmw', 'audi', 'toyota', 'subaru']cars.sort()print(cars)cars.sort(reverse=True)print(cars) output:[&#39;audi&#39;, &#39;bmw&#39;, &#39;subaru&#39;, &#39;toyota&#39;] [&#39;toyota&#39;, &#39;subaru&#39;, &#39;bmw&#39;, &#39;audi&#39;] 2.7 使用 sorted() 对列表进行临时排序123456cars = ['bmw', 'audi', 'toyota', 'subaru']#cars.sort()print(cars)print(sorted(cars))print(cars)print(sorted(cars, reverse=True)) output:[&#39;bmw&#39;, &#39;audi&#39;, &#39;toyota&#39;, &#39;subaru&#39;] [&#39;audi&#39;, &#39;bmw&#39;, &#39;subaru&#39;, &#39;toyota&#39;] [&#39;bmw&#39;, &#39;audi&#39;, &#39;toyota&#39;, &#39;subaru&#39;] [&#39;toyota&#39;, &#39;subaru&#39;, &#39;bmw&#39;, &#39;audi&#39;] 2.8 使用 len() 确定列表长度1len(cars) 2.9 遍历整个列表for 循环 123magicians = ['alice', 'david', 'carolina']for magician in magicians: print(magician) 每次从列表取名字, 存在 magician 中并打印 (print)每个缩进的代码行都是循环的一部分，且将针对列表中的每个值都执行一次。因此，可对列表中的每个值执行任意次数的操作。 2.10 创建数值列表2.10.1 使用 range()12for value in range(1,5) print(value) Output:1234 在这个示例 中，range()只是打印数字1~ 4， 这是你在编程语言中经常看到的差一行为的结果。函数 range() 让 Python 从你指定的第一个值开始 数，并在到达你 指定的第二个值后停止，因此输出不包含 第二个值（这里 为 5）。 E.g: To print 1 2 3 4 5, use: 12for value in range(1, 6) print(value) 2.10.2 使用 list() 和 range() 建表12345numbers = list(range(1,6))print(numbers)# 设置步长even_number = list(range(2,11,2))print(even_number) Output:[1, 2, 3, 4, 5][2, 4, 6, 8, 10] 平方数组12345squares = []for value in range(1, 11): squares.append(value**2) print(squares) 2.11 对数字列表进行简单计算1234digits = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]print(min(digits))print(max(digits))print(sum(digits)) Output:0945 2.11.1列表解析12squares = [value**2 for value in range(1, 11)]print(squares) Output: [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]2.12 切片12players = ['charles', 'martina', 'michael', 'florence', 'eli']print(players[0:3] Output: [&#39;charles&#39;, &#39;martina&#39;, &#39;michael&#39;]遍历切片处理 列表 的 部分 元素—— Python 称之为 切片。 12for player in players[:3]: print(player.title()) 2.13 复制列表foods.py12345678my_foods = ['pizza', 'falafel', 'carrot cake']friends_foods = my_foods[:]print("My favorite foods are:")print(my_foods)print("\nMy friend's favorite foods are:")print(friend_foods) 这实际上产生了2个列表，他们是独立的。E.g:123friends_foods.append('ice cream')print(my_foods)print(friends_foods) 此代码中输出并不相同，可见相互独立。 需要用切片复制列表，否则不能得到两个列表123456789my_foods = ['pizza', 'falafel', 'carrot cake']friend_foods = my_foodsmy_foods.append('cannoli')friend_food.append('ice cream')print(my_foods)print(friend_food) 实际上, 输出是一样的 2.14 元组Python 将不能修改的值称为不可变的，而不可变的列表被称为元组。 2.14.1 定义元组使用圆括号标识 dimensions.py123dimensions = (200, 50)print(dimensions[0])print(dimensions[1]) Output:20050 值不能被改变:dimensions[0] = 50 Output:1Traceback (most recent call last): File &quot;dimensions.py&quot;, line 3, in &lt; module&gt; dimensions[ 0] = 250 TypeError: &apos;tuple&apos; object does not support item assignment 遍历元组中所有值123dimensions = (50, 200)for dimension in dimensions: print(dimension) Output:20050]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Develop</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在 macOS 编译 Android 的尝试]]></title>
    <url>%2F2018%2F11%2F26%2F2017-11-15-Build-Android-on-MacOS%2F</url>
    <content type="text"><![CDATA[尝试在 macOS 10.13 上编译 Android LineageOS 14.1 备份以便将来使用 1. 环境搭建1.1 repo1brew install repo 1.2 准备硬盘(镜像)我的办法使直接从移动硬盘上割了一块以储存 Android 源码, 格式应当设置为 macOS拓展 日志式 区分大小写 1.3 准备源码从 GitHub 同步 Lineage 14.1 源码 12repo init -u git://github.com/LineageOS/android.git -b cm-14.1repo sync -j4 唔，作为 IPv6 用户，同步速度 10M/s 无压力呀。如遇速度慢请使用 USTC 镜像代替 Google Source 进行同步，必要时可能需要爱国XD～ 1.4 Xcode 降级在同步代码的时候，我们可以进行一些其他工作为编译的顺畅进行做好准备Xcode 9 的 SDK 对 Android 7.1 十分不友好， 因此，建议从 Apple Developer 下载 Xcode 8.3.3.将 Xcode8.3.3.app 移动到 /Application 中， 然后运行 1xcode-select -p /Application/Xcode8.3.3.app 1.5 Java 安装编译 Lineage14.1 需要 JDK8, 如果安装了JDK 9 你还是先卸了吧。。。毕竟我是没法子转 JDK Version. 12345#卸载Java9sudo rm -fr /Library/Internet\ Plug-Ins/JavaAppletPlugin.pluginsudo rm -fr /Library/PreferencePanes/JavaControlPanel.prefPanesudo rm -fr ~/Library/Application\ Support/Javasudo rm -fr /Library/Java/JavaVirtualMachines/jdk-9.jdk 然后即可安装 JDK 8.安装后确认: 1234➜ java -versionjava version "1.8.0_151"Java(TM) SE Runtime Environment (build 1.8.0_151-b12)Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode) 1.6 依赖安装唔 这个参考 Android Source 2. 开始编译2.1 设置环境变量1234# ccacheexport USE_CCACHE=1 # 开启 CCACHEexport CCACHE_DIR=/&lt;path_of_your_choice&gt;/.ccache # 设置 CCACHE 文件夹prebuilts/misc/darwin-x86/ccache/ccache -M 50G # 设置 CCACHE 大小 也可以将上述写入 ~/.bash_profile 以避免重复输入。。 2.2 对内核进行修改2.2.1 gsed我们注意到 brew install gnu-sed 使用的是 gsed 命令。因此我们要对 kernel source 中的脚本进行修改。 12345--- a/scripts/headers_install.sh+++ b/scripts/headers_install.sh- sed -r \+ gsed -r \ 12345--- a/arch/arm64/kernel/vdso/gen_vdso_offsets.sh+++ b/arch/arm64/kernel/vdso/gen_vdso_offsets.sh- sed -n -e 's/^00*/0/' -e \+ gsed -n -e 's/^00*/0/' -e \ 2.2.2 xargsMac 的 xargs 与Linux存在差别，因此进行修改: 1brew install findutils 12345--- a/scripts/Makefile.modpost+++ b/scripts/Makefile.modpost- MODLISTCMD := find $(MODVERDIR) -name '*.mod' | xargs -r grep -h '\.ko$$' | sort -u+ MODLISTCMD := find $(MODVERDIR) -name '*.mod' | gxargs -r grep -h '\.ko$$' | sort -u 2.3 BisonBison requires a commit to work. 12345678# in the root of the source codecd external/bisongit cherry-pick c0c852bd6fe462b148475476d9124fd740eba160cd ../../mm bisoncp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/# Credits: https://groups.google.com/forum/#!topic/android-building/D1-c5lZ9Oco 3. Here wo go12345breakfast &lt;device_name&gt; # 从 Lineage 的 repo 上下载 device kernel 等git clone https://github.com/TheMuppets/&lt;repo&gt; vendor/&lt;device_name&gt; # 从 TheMuppets 的 repo 下载 vendor 文件lunch lineage_&lt;device_name&gt;-userdebugmake -j&lt;cpu_num&gt; bacon # 开始编译 3.1 out of memory error诶机器差的命啊: 123export JACK_SERVER_VM_ARGUMENTS="-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4096m" \jack-admin kill-server &amp;&amp; jack-admin start-server \make -j&lt;cpu_num&gt; bacon 4. Job done没什么好写的233333我什么也不会呀 注: 当初找 xargs 的 GNU 版本找了很久, 现在发现奇淫技巧: 12➜ brew search --desc xargsfindutils: Collection of GNU find, xargs, and locate Special Thanks@Asuka@XINGRZ]]></content>
      <tags>
        <tag>Develop</tag>
        <tag>Android build</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Sony_Headphone_Connect_update_google_assistant]]></title>
    <url>%2F2018%2F11%2F09%2FSony-Headphone-Connect-update-google-assistant%2F</url>
    <content type="text"><![CDATA[前阵子 jd 入了个大法的 WH-1000XM2, 国行缺少了 google assistant,外加大妈的中文提示语音…实在是难受, 然后找刷成国际版的方法. google 一圈貌似已经发布了 2.0.1 的固件, 但配套的程序没提示更新. 警告这篇讲的内容并不受 Sony 官方支持, 本人也并不对此造成的保修作废、耳机变砖、耳机电池爆炸等等问题负责. 尝试此方法带来的任何后果自负. 本文内容仅适用于 WH-1000XM2, 其余型号请自行研究. 本文所提供的内容针对 Sony Headphone Connect 3.2.0 版本. 准备工具 apktool 一个靠谱的文本编辑器 过程 提醒: 你用别的方法反编译后类、方法、命名空间等的命名方式不一定与我的相同, 建议善用文本搜索 手机上抓包,发现软件启动的时候请求 https://info.update.sony.net/HP001/MDRID289202/info/info.xml, 居然返回的是404. 不负责的猜测了一下 MDRID289202 是机身的内部型号(包括版本号). 全局搜索了下源码发现MDRID289202 在 com.sony.songpal.mdr.automagic.AutoMagicManager 里面. 123456789101112131415private URL m9721d(String str, String str2) &#123; String str3 = "info.update.sony.net"; if (str == null) &#123; throw new IllegalStateException(String.format(Locale.getDefault(), "%s:code=%d", new Object[]&#123;"AutoMagicManagerErrorDomain", Integer.valueOf(AutoMagicError.NoCategoryID.ordinal())&#125;)); &#125; else if (str2 == null) &#123; throw new IllegalStateException(String.format(Locale.getDefault(), "%s:code=%d", new Object[]&#123;"AutoMagicManagerErrorDomain", Integer.valueOf(AutoMagicError.NoServiceID.ordinal())&#125;)); &#125; else &#123; try &#123; return new URL(String.format(Locale.getDefault(), "http://%s/%s/%s/info/%s", new Object[]&#123;str3, str, str2, "info.xml"&#125;)); &#125; catch (Throwable e) &#123; SpLog.m12039a(f5487a, e); return null; &#125; &#125;&#125; 这玩意用了两个字符串类的参数, 然后在 URL 里面就是 HP001 和 MDRID289202, 于是猜测假如我篡改这个参数的获取程序使其获取成国外行货的代码, 大概就能强制更新了(前提是硬件完全一样). 顺藤摸瓜检查 m9271d 这方法的调用, 查到了保存这个参数的类 com.sony.songpal.mdr.application.p061b.C1702a. 1234567891011121314151617181920212223242526272829303132333435void m7942a(C2503b c2503b) &#123; if (Command.fromByteCode(c2503b.m11224a()) == Command.UPDT_RET_PARAM) &#123; cm cmVar = (cm) c2503b; if (cmVar.m11579e() != this.f4438n) &#123; SpLog.m12040b(f4425a, this.f4438n + " expected, but received " + cmVar.m11579e()); return; &#125; af f = cmVar.m11580f(); switch (cmVar.m11579e()) &#123; case CATEGORY_ID: this.f4429e = ((ag) f).m11716a(); break; case SERVICE_ID: this.f4430f = ((ag) f).m11716a(); break; case NATION_CODE: this.f4431g = ((ag) f).m11716a(); break; case LANGUAGE: this.f4432h = ((ag) f).m11716a(); break; case SERIAL_NUMBER: this.f4433i = ((ag) f).m11716a(); break; case BATTERY_POWER_THRESHOLD: this.f4434j = ((ae) f).m11711a(); break; default: throw new IllegalStateException("Invalid inquired type " + cmVar.m11579e() + " was expected"); &#125; if (this.f4437m != null) &#123; this.f4437m.countDown(); &#125; &#125;&#125; SMALI 指令码对应如下(com.sony.songpal.mdr.application.b.a) 1234567891011.line 156 :pswitch_1 check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag; invoke-virtual &#123;v0&#125;, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String; move-result-object v0 iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;-&gt;f:Ljava/lang/String; goto :goto_1 把这玩意的SERVICE_ID那改成外国行货的ID就好了. 比如 123case SERVICE_ID: this.f4430f = "MDRID123456"; break; 但问题来了, 不知道外国行货的 ID 是多少, 可能ID是连着的, 于是我试了试 MDRID289200, 确认有这个型号. 于是修改 Apktool 解包的 SMALI 为 12345678910111213.line 156 :pswitch_1 #check-cast v0, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag; #invoke-virtual &#123;v0&#125;, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String; #move-result-object v0 const-string v0, &quot;MDRID289200&quot; iput-object v0, p0, Lcom/sony/songpal/mdr/application/b/a;-&gt;f:Ljava/lang/String; goto :goto_1 重新用 Apktool 打包, 然后用自己的证书签名. 传到手机那, 成功检测到更新. 实测貌似没啥毛病，更新成了国外版本的 2.0.1 固件并且语音变成了英文. 于是自己也试了一下, 更新后貌似确实没啥毛病. 装回原版程序后再次用抓包抓了一下, 发现请求的 service id 已经变成了 MDRID289200. 大概不用担心以后又变回国行固件的问题. 简要教程 用Apktool解包: apktool d a.apk (我为了方便文件名改成了a.apk), 这一步会创建一个名为a的文件夹 进入文件夹, 全局搜索invoke-virtual {v0}, Lcom/sony/songpal/tandemfamily/message/mdr/param/ag;-&gt;a()Ljava/lang/String;, 打开包含这一行的文件. 跳至 .line 156, 把里面的内容修改成我上面所述的内容. 重新打包: apktool b a -o b.apk, 这会生成b.apk 给b.apk签名, 这个网上都有教程我就不写了 把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行 把原本的App卸掉, 安装这个APK, 然后连接耳机, 如果没毛病的话应该会见到底部的更新提示, 按部就班更新就行]]></content>
      <categories>
        <category>Android App</category>
      </categories>
      <tags>
        <tag>sony</tag>
        <tag>sony headphone connect</tag>
        <tag>android app 反编译修改</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自编译 AOSP 下载地址]]></title>
    <url>%2F2018%2F11%2F02%2Fsony-aosp-build%2F</url>
    <content type="text"><![CDATA[这是自编译 AOSP (Pie) 下载地址, 不定期更新 更新日期:2018.11.02 Sony XZ2(akari): 点击跳转 Sony XZ1(Yoshino): 暂未上传 Sony XZ Premiumg(maple): 点击跳转BUG: 音量键位未指定,wifi/蓝牙 fc, camera2 api 未开启]]></content>
      <categories>
        <category>Android Build</category>
      </categories>
      <tags>
        <tag>sony</tag>
        <tag>android build download</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OpenWRT自动更新软件包脚本]]></title>
    <url>%2F2018%2F10%2F17%2F2018-10-17-OpenWRT-update-sh%2F</url>
    <content type="text"><![CDATA[首先新建一个shell脚本文件，如/root/autoupgrade.sh，加上执行权限，写入以下几行：12345#!/bin/shopkg updatefor ipk in $(opkg list-upgradable | awk '$1!~/^kmod|^Multiple/&#123;print $1&#125;'); doopkg upgrade $ipkdone 然后加入到计划任务中：123456789# 文件格式说明# ——分钟 (0 - 59)# | ——小时 (0 - 23)# | | ——日 (1 - 31)# | | | ——月 (1 - 12)# | | | | ——星期 (0 - 7)（星期日=0或7）# | | | | |# * * * * * 被执行的命令# 0 1 * * * /root/autoupgrade.sh]]></content>
      <categories>
        <category>路由器</category>
      </categories>
      <tags>
        <tag>OpenWRT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Next 主题自动更换背景图片]]></title>
    <url>%2F2018%2F09%2F29%2Fchange-background%2F</url>
    <content type="text"><![CDATA[如果觉得 NexT的空白主题看腻了或者太多人用觉得不够个性化，那么不妨试试自动更新背景图片。 实现原理图片来源自动更换背景的实现是修改添加背景的 css 样式实现。图片来源是 unsplash 这个网站，里面不仅免费提供了很多高清美图，而且还提供api接口调用，实在是良心。这里实现的原理也是调用了这个网站的接口。 修改背景样式修改themes\next\source\css\_custom\custom.styl文件，这个是Next故意留给用户自己个性化定制一些样式的文件，添加以下代码： 1234567891011body &#123; background:url(https://source.unsplash.com/random/1600x900); background-repeat: no-repeat; background-attachment:fixed; background-position:50% 50%;&#125; 如果自己不喜欢这个网址提供的图片做背景，那么修改url()里面的路径即可。repeat、attachment、position就是调整图片的位置，不重复出现、不滚动等等。 修改不透明度完成这一步其实背景就会自动更换了，但是会出现一个问题，因为next主题的背景是纯透明的，这样子就造成背景图片的影响看不见文字，这对于博客来说肯定不行。 那么就需要调整背景的不透明度了。同样是修改themes\next\source\css _custom\custom.styl文件。在后面添加如下代码 12345678910111213.main-inner &#123; margin-top: 60px; padding: 60px 60px 60px 60px; background: #fff; opacity: 0.8; min-height: 500px;&#125; background: #fff; 白色 opacity: 0.8;不透明度 效果完成上述设置，我们来看看效果]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>theme-NexT</tag>
        <tag>unsplash</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OSX 和 windows 时间不同步解决方法]]></title>
    <url>%2F2018%2F09%2F28%2F2018-9-27-OSX-windows-Fixed-time-out-of-sync-issue%2F</url>
    <content type="text"><![CDATA[OSX 和 windows 时间不同步解决方法 教程正文 很多同学都是 mac osx 和 windows 双系统,但是有个问题,进入mac osx再进windows 时间就不对了这个是因为 Windows 与 Mac缺省看待系统硬件时间的方式是不一样的： Windows把系统硬件时间当作本地时间(local time)，即操作系统中显示的时间跟BIOS中显示的时间是一样的。 Mac把硬件时间当作 UTC，操作系统中显示的时间是硬件时间经过换算得来的，比如说北京时间是GMT+8，则系统中显示时间是硬件时间+8这样，当PC中同时有多系统共存时，就出现了问题。 假如你的mac设置的时区都为北京时间东八区，当前系统时间为9：00AM。则此时硬件中存储的实际是UTC 时间1:00AM。这时你重启进入Windows后，你会发现windows系统中显示的时间是 1:00AM，比mac中慢了八个小时。 同理，你在Windows中更改或用网络同步了系统时间后，再到mac中去看，系统就会快了8小时。 解决这个问题的方法很简单：修改 Windows 对硬件时间的对待方式，这样只在 Windows 上修改后就无需在mac上设置了。让 Windows 把硬件时间当作 UTC window7用户开始-&gt;运行-&gt;输入CMD window8/10用户 WIN+x 选择管理员模式进入CMD 输入下面命令并回车代码:1Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1 这样一来就不用在osx下安装时间补丁了.]]></content>
      <categories>
        <category>黑苹果</category>
      </categories>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo-NexT 主题修改页面透明度及页面颜色]]></title>
    <url>%2F2018%2F09%2F26%2F2018-9-26-NexT-theme-Page-transparency-color%2F</url>
    <content type="text"><![CDATA[由于NexT主题默认的背景是不透明的，如果我们设置的有canvas_nest和canvas_three等3D动画效果，则会被文章界面遮住，本文主要讲述如何修改Hexo站点的页面透明度。 主要是通过修改CSS样式来实现 文章部分 文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style12345678// Post &amp; Comments blocks..post-block &#123; padding: $content-desktop-padding;- background: white;+ background: rgba(255,255,255,0.7); box-shadow: $box-shadow-inner; border-radius: $border-radius-inner;&#125; 阅读全文按钮 文件位置 ~Hexo根目录/themes/next/source/css/_variables/Pisces.style12345678// Button $btn-default-radius = 2px- $btn-default-bg = white+ $btn-default-bg = rgba(255,255,255,0.5) $btn-default-color = $text-color $btn-default-border-color = $text-color $btn-default-hover-color = white $btn-default-hover-bg = $black-deep 分页部分 文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style12345678910111213// Pagination..pagination &#123; .prev, .next, .page-number &#123; margin-bottom: initial; top: initial; &#125; margin: sboffset 0 0;- background: white;+ background: rgba(255,255,255,0.7); box-shadow: $box-shadow; border-radius: $border-radius; padding: 10px 0 10px;&#125; 评论区部分 ~Hexo根目录/themes/next/source/css/_schemes/Gemini/index.style12345678910// Comments blocks..comments &#123; padding: $content-desktop-padding; margin: initial; margin-top: sboffset;- background: white;+ background: rgba(255,255,255,0.7); box-shadow: $box-shadow; border-radius: $border-radius;&#125; 侧栏菜单界面 文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_layout.style12345678910111213141516171819202122232425.header-inner &#123; position: absolute; top: 0; overflow: hidden; padding: 0; width: $sidebar-desktop;- background: white;+ background: rgba(255,255,255,0.7); box-shadow: $box-shadow-inner; border-radius: $border-radius-inner; +desktop-large() &#123; .container &amp; &#123; width: $sidebar-desktop; &#125; &#125; +tablet() &#123; position: relative; width: auto; border-radius: initial; &#125; +mobile() &#123; position: relative; width: auto; border-radius: initial; &#125;&#125; 个人资料界面 文件位置 ~Hexo根目录/themes/next/source/css/_schemes/Pisces/_sidebar.style123456789101112131415.sidebar-inner &#123;//padding: 20px 10px 0; box-sizing: border-box; width: $sidebar-desktop; color: $text-color;- background: white;+ background: rgba(255,255,255,0.7); box-shadow: $box-shadow; border-radius: $border-radius; if (hexo-config(&apos;motion.enable&apos;) and hexo-config(&apos;motion.transition.sidebar&apos;)) &#123; opacity: 0; &#125; &amp;.affix &#123; position: fixed; top: $sidebar-offset; &#125;]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OpenWrt 自动更新设置和屏蔽广告]]></title>
    <url>%2F2018%2F09%2F22%2F2018-9-22-OpenWrt-auto-update-and-adblock%2F</url>
    <content type="text"><![CDATA[OpenWrt 路由器自动更新国内重要网站名单 登陆路由器后: 1234root@OpenWrt:~# cd /usr/binroot@OpenWrt:~# touch chinalistroot@OpenWrt:~# chmod +x chinalistroot@OpenWrt:~# vi chinalist /usr/bin/chinalist: 1234#!/bin/sh wget -4 --no-check-certificate -O /etc/dnsmasq.d/accelerated-domains.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/accelerated-domains.china.confwget -4 --no-check-certificate -O /etc/dnsmasq.d/bogus-nxdomain.china.conf https://github.com/felixonmars/dnsmasq-china-list/raw/master/bogus-nxdomain.china.conf OpenWrt 路由器自动屏蔽广告 /etc/dnsmasq.d 下有个 blockad.conf 文件, 内容如下: 1234server=/.mobads.baidu.com/127.0.0.0server=/.mobads-logs.baidu.com/127.0.0.0server=/.media.admob.com/127.0.0.0... 意思是 /mobads.baidu.com 的域名解析转发到 127.0.0.0, 这个地址不具备域名解析的功能, 于是就达到了屏蔽广告的功能. 运行命令: 1234root@OpenWrt:~# cd /usr/binroot@OpenWrt:~# touch blockadroot@OpenWrt:~# chmod +x blockadroot@OpenWrt:~# vi blockad /usr/bin/blockad: 12345678910111213141516171819202122232425262728293031#!/bin/sh# Author: https://github.com/softwaredownload/openwrt-fanqiang# Date: 2016-01-09TMP_HOSTS=/tmp/block.hosts.unsortedHOSTS=/etc/dnsmasq.d/blockad.conf# remove any old TMP_HOSTS that might have stuck aroundrm $&#123;TMP_HOSTS&#125; 2&gt; /dev/nullfor URL in \ &quot;https://raw.githubusercontent.com/vokins/simpleu/master/hosts&quot; \ &quot;http://adaway.org/hosts.txt&quot;do # filter out comment lines, empty lines, localhost... # remove trailing comments, space( ,tab), empty line # replace line to dnsmasq format # remove carriage returns # append the results to TMP_HOSTS wget -4 --no-check-certificate -qO- &quot;$&#123;URL&#125;&quot; | grep -v -e &quot;^#&quot; -e &quot;^\s*$&quot; -e &quot;localhost&quot; -e &quot;^;&quot; -e &quot;^@&quot; -e &quot;^:&quot; -e &quot;^[a-zA-Z]&quot; \ | sed -E -e &quot;s/#.*$//&quot; -e &quot;s/[[:space:]]*//g&quot; -e &quot;/^$/d&quot; \ -e &quot;s/^127.0.0.1/server=\/./&quot; -e &quot;s/0.0.0.0/server=\/./&quot; -e &quot;/^[0-9].*$/d&quot; -e &quot;s/$/\/127.0.0.0/&quot; \ | tr -d &quot;\r&quot; &gt;&gt; $&#123;TMP_HOSTS&#125;done# remove duplicate hosts and save the real hosts filesort $&#123;TMP_HOSTS&#125; | uniq &gt; $&#123;HOSTS&#125;rm $&#123;TMP_HOSTS&#125; 2&gt; /dev/null OpenWrt 自动生成广告屏蔽列表说明: 第一个 URL 主要用于国内, 下面几个 URL 是屏蔽国外广告运行上面命令产生的广告屏蔽列表比较长, 如果路由器性能较差, dnsmasq 匹配域名负荷会太大, 可以用下面这个简化版的文件, 不要用上面的脚本: https://github.com/softwaredownload/openwrt-fanqiang/blob/master/openwrt/dir505/etc/dnsmasq.d/blockad.conf 如果dnsmasq超负荷工作，可能会失去响应，导致打不开网页，这时需要登录路由器运行命令： /etc/init.d/dnsmasq restart 所以，还是尽量用性能好点的路由器吧路由器性能比电脑差很多，如果屏蔽列表很长，那么短时间内快速打开数个网页就可能导致dnsmasq失去响应。最好是看完一个网页就关闭一个，再打开新的网页。在路由器里屏蔽的好处是所有接入路由器的设备都全部起作用。通常的做法，在路由器里屏蔽部分域名，然后在电脑里设置更广泛、精确的屏蔽，主要是设置host文件屏蔽和浏览器插件屏蔽。浏览器插件屏蔽，可以装这些Chrome浏览器插件：uBlock Origin，ADfree.Player.Online。其中uBlock Origin的作用和Adblock Plus类似，但是设置更加丰富。 计划任务：定时更新dnsmasq配置文件和自动重启shadowsocks 1root@OpenWrt:~# crontab -e 输入以下内容: 123*/30 * * * * isfound=$(ps | grep &quot;ss-redir&quot; | grep -v &quot;grep&quot;); if [ -z &quot;$isfound&quot; ]; then echo &quot;$(date): restart ss-redir...&quot;&gt;&gt;/tmp/log/ss-monitor.log &amp;&amp; /etc/init.d/shadowsocks restart; fi* 12 * * * /usr/bin/chinalist* 12 * * * /usr/bin/blockad OpenWrt计划任务说明： 每半小时检查shadowsocks-libev 客户端，如果退出就自动重启 每天中午12点运行chinalist 每天中午12点运行blockad 2014-09-24版的dir505, wr2543预编译固件是启用了计划任务的，这会有潜在的不确定性，如果更新时下载的文件如accelerated-domains.china.conf存在错误，导致dnsmasq无法启动，翻墙功能自然失效。 如果你启用了计划任务，某一天突然不能翻墙了，这时设置客户端的IP地址为和路由器同网段，登录路由器，用ps命令查看dnsmasq进程是否启动了，如果没有启动，就重刷固件或者用点击跳转下面的文件代替 路由器里/etc/dnsmasq.d/下的文件。 附录：计划任务定时关闭路由器OpenWrt 人类的本性是目光短浅，玩得一时兴趣就会忘记定时休息的重要性。解决办法是在路由器里设置计划任务，禁止夜里某个时间段里使用路由器。下面的例子中，每20分钟检测一次，如果迟于20点30或者早于7点就自动关闭OpenWrt。这对小孩子特别有用，现在很多孩子使用电子设备上瘾，一个人睡的话甚至半夜在被窝里偷偷上网，现在好了，除非孩子强大到会登陆路由器修改设置，否则半夜重启路由器都无法上网了。 1*/20 * * * * TIME=$(date +&quot;%H%M&quot;); if [ $TIME -ge 2030 ] || [ $TIME -le 700 ]; then poweroff; fi 参考: https://github.com/vokins/simpleuhttps://github.com/jjack/openwrt-adblockhttps://github.com/felixonmars/dnsmasq-china-listinstall-shadowsocks-on-hg255d-openwrt-and-config-nathttps://pcjetzt.com/vpn-test-besten-vpn-anbieter-im-vergleich/]]></content>
      <categories>
        <category>路由器</category>
      </categories>
      <tags>
        <tag>广告过滤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[clover 注入白果三码实现 imessage 正常使用]]></title>
    <url>%2F2018%2F09%2F21%2F2018-9-21-clover-UUID%2F</url>
    <content type="text"><![CDATA[注入白果三码实现 iMessage 与 FaceTime 正常使用 前言 此法需建立在你有白苹果信息的情况下才能使用完成后你将登陆任意appleid都不需要打电话激活 工具首先你需要 iMessageDebug 这个工具来读取白果的三码 iMessageDebug 使用起来很方便首先需要一台白苹果，下载到机器上，或者U盘拷贝。。。。 将 iMessageDebug 文件拖到桌面 打开终端 输入（chmod a+x ）桌面的 iMessageDebug 拖入终端按回车键（也许要输入用户密码） sh iMessageDebug 这样就获得了三码了，选择y是将三码生成文本发送到 Download 文件夹。 Clover 的配置 填入主板MLB序列号和ROM（MLB就是BoardSerialNumber：XXXXXX） BoardSerialNumber 上写入你的mlb码（其实可不写） “重点” smuuid 上写你的Hardware UUID，一定要照搬 不要改写后 12 位为 rom 码 序列号填写 (重点)写入你的 System-ID 注入 kext 是配置 clover 必选的 就是最重点的了 一定务必开启 inject System ID,如果不选的话，会导致 custom uuid 和 System-ID 数据颠倒]]></content>
      <categories>
        <category>黑苹果</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
        <tag>Clover</tag>
        <tag>iMessage</tag>
        <tag>FaceTime</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Build Android on MacOS preparation]]></title>
    <url>%2F2018%2F09%2F20%2F2018-9-20-Build-Android-on-MacOS-preparation%2F</url>
    <content type="text"><![CDATA[This passage introduces a way to build Android on MacOS (NEW) Caution: 由于最新Xcode9编译Android源码问题很多，使用旧版Xcode 8.3.3 编译前的准备工作Xcode8.3.3 下载地址:(https://download.developer.apple.com/Developer_Tools/Xcode_8.3.3/Xcode8.3.3.xip) 切换Xcode版本$ xcode-select --switch $PATH/Xcode.app 编译需要的软件包 (brew 使用详见官网) 1$ brew install bash-completion coreutils e2fsprogs findutils git gnu-sed gnupg gnutls imagemagick make maven md5sha1sum openssl repo sdl sdl2 环境变量$ vim ~/.bash_profile 1PATH=/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/findutils/libexec/gnubin:/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/opt/make/libexec/gnubin:$PATH Set the number of open files to be 1024 ulimit -S -n 1024 Jack memory export ANDROID_JACK_VM_ARGS=&quot;-Dfile.encoding=UTF-8 -XX:+TieredCompilation -Xmx4G&quot; python2 编译时用到python2命令，mac里只有python2.7 软链接成python2即可$ ln /usr/bin/python2.7 /usr/bin/python2 bison报错 目前Android源码自带的bison不兼容macOS10.13新引入的一些安全限制。需要打补丁编译并替换源码自带的bison。以后源码更新应该会修复就不需要了 详情可见 android-building 1234567​$ cd external/bison$ git cherry-pick c0c852bd6fe462b148475476d9124fd740eba160$ mm$ cp out/host/darwin-x86/bin/bison prebuilts/misc/darwin-x86/bison/bison 除了环境配置和编译时的几个问题，其他和在Linux下编译区别不大​​​​]]></content>
      <categories>
        <category>Android Build</category>
      </categories>
      <tags>
        <tag>MacOS</tag>
        <tag>Android Build</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Lists Stacks and Queues]]></title>
    <url>%2F2018%2F09%2F19%2F2017-11-30-Lists-Stacks-and-Queues%2F</url>
    <content type="text"><![CDATA[A Brief ADT Introduction to Lists Stacks and Queues 1. Lists1.1 Lists ADTs123456789101112131415161718192021222324252627#ifndef _LIST_H#define _LIST_Hstruct Node;typedef struct Node *PtrToNode;typedef PtrToNode List;typedef PtrToNode Position;typedef int ElementType;List MakeEmpty(List L);int IsEmpty(List L);int IsLast(Position P, List L);Position Find( ElementType X, List L);void Delete( ElementType X, List L);Position FindPrevious(ElementType X, List L);void Insert(ElementType X, List L, Position P);void DeleteList(List L);Position Header(List L);Position First(List L);Position Advancde(Position P);ElementType Retrieve(Position P);#endif /* main_h */struct Node &#123; ElementType Element; Position Next;&#125;; 1.1.1 IsEmpty / IsLast1234567int IsEmpty(List L) &#123; return L-&gt;Next == NULL;&#125;int IsLast(Position P, List L) &#123; return P-&gt;Next == NULL;&#125; 1.1.2 Find / Delete / FindPrevious / Insert12345678910111213141516171819202122232425262728293031323334353637383940414243Position Find( ElementType X, List L) &#123; Position P; P = L-&gt;Next; // Because there is a head while (P != NULL &amp;&amp; P-&gt;Element != X) &#123; P = P-&gt;Next; &#125; return P;&#125;void Delete( ElementType X, List L) &#123; Position P, TempCell; P = FindPrevious(X, L); /* Avoid there is no such Element X */ if (!IsLast(P, L)) &#123; TempCell = P-&gt;Next; P-&gt;Next = TempCell-&gt;Next; free( TempCell ); &#125;&#125;Position FindPrevious(ElementType X, List L) &#123; Position P; P = L; while (P-&gt;Next != NULL &amp;&amp; P-&gt;Next-&gt;Element != X) &#123; P = P-&gt;Next; &#125; return P;&#125;void Insert(ElementType X, List L, Position P) &#123; /* Insert X behind P */ Position TempCell; TempCell = malloc(sizeof(struct Node)); if (TempCell == NULL) &#123; printf("Error no memory.\n"); &#125; TempCell-&gt;Element = X; TempCell-&gt;Next = P-&gt;Next; P-&gt;Next = TempCell;&#125; 1.2 Doubly Linked Lists1.3 Circularly Linked Lists1.4 ExamplesThe Polynomial ADTPlease refer to my Github Repo to see add and multiply. Radix SortPlease refer to this blog for some information.12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;void RadixSort(int* Array, int N) &#123; int max = Array[0]; int index = 10; int ret = 1; int* temp = malloc(sizeof(int) * N); for (int i = 0; i &lt; N; ++ i) &#123; if (max &lt; Array[i]) &#123; max = Array[i]; &#125; &#125; while (max / ret &gt; 0) &#123; int init[10] = &#123;0&#125;; for (int i = 0; i &lt; N; ++ i) &#123; init[(Array[i]/ret)%index] ++; &#125; for (int i = 1; i &lt; index; ++ i) &#123; init[i] += init[i - 1]; &#125; for (int i = N - 1; i &gt;= 0; -- i) &#123; temp[--init[(Array[i] / ret) % index]] = Array[i]; &#125; for (int i = 0; i &lt; N; ++ i) &#123; Array[i] = temp[i]; &#125; ret *= index; &#125;&#125;int main() &#123; int n; scanf("%d", &amp;n); int* A = malloc(sizeof(int) * n); for (int i = 0; i &lt; n; ++ i) &#123; scanf("%d", A + i); &#125; RadixSort(A, n); for (int i = 0; i &lt; n; ++ i) &#123; printf("%d\t", A[i]); &#125;&#125; Multilists1.5 Cursor Implementation of Linked ListsIn a language where pointers are not available, we use an array of structures to make Linked lists We use the following declaration1234567891011/* A */typedef int PtrToNode;typedef PtrToNode Position;typedef PtrToNode List;struct Node &#123; ElementType Element; Position Next;&#125;;struct Node CursorSpace[ SpaceSize ]; / B - An initialized CursorSpace / Slot Element Next 0 1 1 2 2 3 / Example / if the value of L is 5 and the value of M is 3Then L presents the list a, b, e M presents c, d, f Slot Element Next 0 - 6 1 b 9 2 f 0 3 header 7 4 - 0 5 header 10 6 - 4 7 c 8 8 d 2 9 e 0 10 a 1 // Unknown Why It is implied like thisWe keep a list ( the freelist ) of cells that are not in any list.The list will use cell 0 as a header – Shown in section B 123456789101112131415161718192021222324252627282930313233343536373839static Position CursorAlloc( void ) &#123; Position P; P = CursorSpace[0].Next; Cursor[0].Next = CursorSpace[P].Next; return P&#125;static void CursorFree( Position P ) &#123; CursorSpace[P].Next = Cursor[0].Next; CursorSpace[0].Next = P;&#125;int IsEmpty( List L ) &#123; return CursorSpace[L].Next == 0&#125;Position Find( ElementType X, List L) &#123; Position = P; P = CursorSpace[L].Next; while(P &amp;&amp; CursorSpace[P].Element != X) &#123; P = CursorSpace[P].Next; &#125; return P;&#125;void Delete( ElementType X, List L) &#123; Position P, TempCell; P = FindPrevious(X, L); if( !IsLast(P, L) ) &#123; TempCell = CursorSpace[P].Next; CursorSpace[P].Next = CursorSpace[TempCell].Next; CursorFree(TempCell); &#125; 2. The Stack ADT A stack is a list with the restriction that insertions and deletions can only be performed in one position. Stacks are sometimes known as LIFO ( Last in, First Out ) Stacks use push and pop and only the top element is accessiable 2.1 Implementations of Stacks2.1.1 Linked List Implementation of Stacks1234567891011121314151617181920#ifndef _Stack_hstruct Node;typedef struct Node* PtrToNode;typedef PtrToNode Stack;int IsEmpty( Stack S );Stack CreateStack( void );void DisposeStack( Stack S );void MakeEmpty( Stack S );void Push( ElementType X, Stack S );ElementType Top( Stack S ); // Output the Topvoid Pop( Stack S); // Only Delete#endifstruct Node &#123; ElementType Element; PtrToNode Next;&#125; Operations 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485int IsEmpty( Stack S ) &#123; return S-&gt;Next == NULL;&#125;Stack CreateStack( void ) &#123; Stack S; S = malloc(sizeof( struct Node )); if( S == NULL ) return NULL; MakeEmpty( S ) return S;void MakeEmpty( Stack S ) &#123; if( S == NULL ) printf("ERROR NO STACK\n"); else while( !IsEmpty( S ) ) Pop( S );&#125;void Push( ElementType X, Stack S ) &#123; PtrToNode TempCell; TempCell = malloc( sizeof( struct Node ) ); if( TempCell == NULL ) FatalError("Out of Space"); else &#123; TempCell-&gt;Element = X; TempCell-&gt;Next = S-&gt;Next; S-&gt;Next = TempCell; // Head Assumed&#125; void Pop( Stack S ) &#123; PtrToNode TempCell; if( IsEmpty( S ) ) &#123; printf( "Empty Stack!\n" ); else &#123; TempCell = S-&gt;Next; S-&gt;Next = S-&gt;Next-&gt;Next; free(TempCell); &#125;&#125;ElementType Top( Stack S ) &#123; if( !IsEmpty( S ) ) &#123; return S-&gt;Next-&gt;Element; FatalError("Empty Stack\n"); return 0;&#125;``` #### 2.1.2 Array Implementation of StacksThis is probably a more popular solution```ctypedef int ElementType;#ifndef _Stack_H#define _Stack_Hstruct StackRecord;typedef struct StackRecord *Stack;int IsEmpty( Stack S );int IsFull( Stack S );Stack CreatStack( int MaxElements );void DisposeStack( Stack S );void MakeEmpty( Stack S );void Push( ElementType X, Stack S );ElementType Top( Stack S );ElementType TopAndPop( Stack S );#endif#define EmptyEOS (-1)#define MinStackSize (5)struct StackRecord &#123; int Capacity; int TopOfStack; ElementType* Array;&#125;; Operations123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960/***** Create Stack *****/Stack CreateStack( int MaxElements ) &#123; Stack S; if( MaxElements &lt; MinStackSize ) &#123; Error("Stack too small."); S = malloc(sizeof( struct StackRecord )); if( S == NULL ) &#123; FatalError("Out of Space!"); &#125; S-&gt;Array = malloc( sizeof(ElementType) * MaxElements; if( S-&gt;Array == NULL ) &#123; FatalError("Out of space!"); &#125; S-&gt;Capacity = MaxElements; MakeEmpty( S ); return S; void DisposeStack( Stack S ) &#123; if( S != NULL ) &#123; free( S-&gt;Array ); free( S ); &#125; &#125; int IsEmpty( Stack S ) &#123; return S-&gt;TopOfStack == EmptyTOS; &#125; void MakeEmpty( Stack S ) &#123; S-&gt;TopOfStack = EmptyTOS; &#125; void Push( ElementType X, Stack S ) &#123; if( IsFull( S ) ) &#123; Error("Full Stack"); &#125; else &#123; S-&gt;Array[++(S-&gt;TopOfStack)] = X; &#125; &#125; ElementType Top( Stack S ) &#123; if( !IsEmpty( S ) ) &#123; return S-&gt;Array[S-&gt;TopOfStack]; &#125; Error("Empty Stack"); return 0; &#125; void Pop( Stack S ) &#123; if( IsEmpty( S ) ) &#123; Error("Empty Stack"); &#125; else &#123; S-&gt;TopOfStack --; &#125; &#125; 2.2.2 Applications2.2.2.1 Balancing Symbols refer to here to get a sample code 2.2.2.2 Postfix Expressionsrefer to here to get a sample Code 2.2.2.3 Function CallsThe algorithm to check balanced symbols suggests a way to implement function calls. 3. The Queue ADTsLike stacks, queues are lists.insertion are done at one end, deletion is performed at the other end. 3.4.1 Queue ModelsThe basic operations on a queue are Enqueue and Dequeue 3.4.2 Array Implementation of QueuesAs with stacks, any implementation is legal for queues. Like stacks, both the linked lists and array implementation give fast O(1) running times for every operation. Here we will discuss Array implementation of queues. For each queue data structure, we keep an array Queue[] Keep the positions Front and Rear We also keep track of the number of elements that are actually in the queue Size To Enqueue an element X, we increment Size and Rear, then set Queue[Rear] = X To Dequeue an element, we set the return value to Queue[Front], decrement Size Attention It’s important to check the queue for emptiness Some programmers use different ways of representing the front and end of a queue. 3.4.3 Queue definitions3.4.3.1 Define a Queue12345678910111213141516171819202122232425#define ElementType int#ifndef _Queue_h#define _Queue_hstruct QueueRecord;typedef struct QueueRecord* Queue;int IsEmpty( Queue Q );int IsFull( Queue Q );Queue CreateQueue( int MaxElements );void DisposeQueue( Queue Q );void MakeEmpty( Queue Q );void Enqueue( ElementType X, Queue Q );ElementType Front( Queue Q );void Dequeue( Queue Q );ElementType FrontAndDequeue( Queue Q );#endif /* _Queue_h */struct QueueRecord&#123; int Capacity; int Front; int Rear; int Size; ElementType *Array;&#125;; 3.4.3.2 OperationsIsEmpty, MakeEmpty, Enqueue1234567891011121314151617181920212223242526int IsEmpty( Queue Q ) &#123; return Q-&gt;Size == 0;&#125;void MakeEmpty( Queue Q ) &#123; Q-&gt;Size = 0; Q-&gt;Front = 1; Q-&gt;Rear = 0;&#125;static int Succ( int Value, Queue Q ) &#123; if (++Value == Queue-&gt;Capacity) &#123; Value = 0; &#125; return Value;&#125;void Enqueue( ElementType X, Queue Q ) &#123; if (IsFull( Q )) &#123; Error("Error Full Queue"); &#125; else &#123; Q-&gt;Size++; Q-&gt;Rear = Succ(Q-&gt;Rear, Q); Q-&gt;Array[Q-&gt;Rear] = X; &#125;&#125; 3.4.4 Applications of Queues Calls to large companies are generally placed in a queue when all operations are busy In large universities when resources are limited]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Develop</tag>
        <tag>C</tag>
        <tag>Data Structure</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python 字典]]></title>
    <url>%2F2017%2F11%2F19%2F2017-11-19-Python-Dictionary%2F</url>
    <content type="text"><![CDATA[在 Python 中, 字典是一系列 键值对, 每个键都与一个值相关联, 可以使用键来访问相关的值. 4.0 对 Example 解释E.g:12345alien_0 = &#123;'color': 'green', 'points': 5&#125;alien_0 = &#123;'color': 'green', 'points': 5&#125;print(alien_0['color']print(alien_0['points'] Output:12green5 4.1 使用字典事实上,可以将任何 Python 对象用作字典的值. 在 Python 中, 字典用放在花括号 {} 的一系列 键–值 对表示 4.1.1 访问字典中的值E.g:12alien_0 = &#123;'color': 'green'&#125;print(alien_0['color'] Output:1green 4.1.2 添加键值对可依次指定字典名、用方括号括起的键和相关联的值E.g:123456alien_0 = &#123;'color': 'green', 'points': 5&#125;print(alien_0)alien_0['x_position'] = 0alien_0['y_position'] = 25print(alien_0) Output12&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5&#125;&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5, &apos;x_position&apos;: 0, &apos;y_position&apos;: 25&#125; 4.1.3 先创建一个空字典E.g:1alien_0 = &#123;&#125; 4.1.4 修改字典中的值E.g:12345alien_0 = &#123;'color': 'green'&#125;print(alien_0['color'])alien_0['color'] = 'yellow'print(alien_0['color']) Output:12greenyellow 4.1.5 删除以键值对使用 del 语句 E.g:12345alien_0 = &#123;'color': 'green', 'points': 5&#125;print(alien_0)del alien_0['points']print(alien_0) Output:12&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5&#125;&#123;&apos;color&apos;: &apos;green&apos;&#125; 4.2.6: 由类似对象构成的字典E.g:123456favourite_languages = &#123; &apos;jen&apos; = &apos;python&apos;, &apos;sarah&apos; = &apos;c&apos; &apos;edward&apos; = &apos;ruby&apos; &apos;phil&apos; = &apos;python&apos;,&#125; 4.3 遍历字典4.3.1: 遍历所有键值对E.g:123456789user_0 = &#123; 'username':'efermi', 'first':'enrico', 'last':'fermi',&#125;for key,value in user_0.items(): print("\nKey: " + key) print("Value: " + value) Output123456789Key: usernameValue: efermiKey: firstValue: enricoKey: lastValue: fermi for k, v in user_0.items()for 语句的第二部分包含字典名和方法 items(), 它返回一个 键–值 对列表. 注: 即使遍历字典时, 返回顺序也于存储顺序不同.4.3.2 遍历字典中的所有键使用 keys()E.g:123456789favourite_languages = &#123; 'jen': 'python', 'sarah': 'c', 'edward': 'ruby', 'phil': 'python',&#125;for name in favourite_languages.keys(): print(name.title()) Output:1234JenSarahEdwardPhil 遍历字典时, 会默认遍历所有的键,so:for name in favourite_languages.keys() == for names in foavourite_languages 4.3.2.1 按顺序遍历字典中的所有键用 sorted() 创建按特定顺序排列的键的列表的副本E.g:1for name in sorted(favourite_languages.keys()): 4.3.3 遍历字典中的所有值使用 value()E.g:123456for language in favourite_languages.values():``` 注: 该方法遍历所有值, 可能导致重复为剔除重复项, 可使用集合 (set), 集合类似于列表, 但每个元素都是独一无二的.```pythonfor language in set(favourite_languages.values()): 4.4 嵌套4.4.1 字典列表E.g: ( aliens.py )12345678alien_0 = &#123;'color': 'green', 'points': 5&#125;alien_1 = &#123;'color': 'yellow', 'points': 10&#125;alien_2 = &#123;'color': 'red', 'points': 15&#125;aliens = [alien_0, alien_1, alien_2]for alien in aliens: print(alien) Output:123&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5&#125;&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10&#125;&#123;&apos;color&apos;: &apos;red&apos;, &apos;points&apos;: 15&#125; E.g_2:12345678910111213141516aliens = []for alien_number in range(30): new_alien = &#123;'color': 'green', 'points': 5, 'speed': 'slow'&#125; aliens.append(new_alien) for alien in aliens[0:3]: if alien['color'] == 'green': alien['color'] = 'yellow' alien['points'] = 10 alien['speed'] = 'medium'for alien in aliens[:5]: print(alien)print('...')print('Total number of aliens: ' + str(len(aliens))) Output:123456&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10, &apos;speed&apos;: &apos;medium&apos;&#125;&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10, &apos;speed&apos;: &apos;medium&apos;&#125;&#123;&apos;color&apos;: &apos;yellow&apos;, &apos;points&apos;: 10, &apos;speed&apos;: &apos;medium&apos;&#125;&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5, &apos;speed&apos;: &apos;slow&apos;&#125;&#123;&apos;color&apos;: &apos;green&apos;, &apos;points&apos;: 5, &apos;speed&apos;: &apos;slow&apos;&#125;... 4.4.2 在字典中存储列表E.g: ( pizza.py )12345678910pizza = &#123; 'crust': 'thick', 'toppings': ['mushrooms', 'extra cheese'] &#125; print('You ordered a ' + pizza['crust'] + '-crust pizza ' + 'with the following toppings: ') for topping in pizza['toppings']: print('\t' + topping) Output:123You ordered a thick-crust pizza with the following toppings: mushrooms extra cheese E.g_2:123456789101112favourite_languages = &#123; 'jen': ['python', 'ruby'], 'sarah': ['c'], 'edward': ['ruby', 'go'], 'phil': ['python', 'haskell'],&#125;for name, languages in favourite_languages.items(): print('\n' + name.title() + "'s favourite languages are:") for language in languages: print("\t" + language.title()) Output:1234567891011121314Jen&apos;s favourite languages are: Python RubySarah&apos;s favourite languages are: CEdward&apos;s favourite languages are: Ruby GoPhil&apos;s favourite languages are: Python Haskell 4.4.3 在字典中存储字典E.g: ( many_users.py )12345678910111213141516171819202122users = &#123; 'aesinstein': &#123; 'first': 'albert', 'last': 'einstein', 'location': 'princeton', &#125;, 'mcurie': &#123; 'first': 'marie', 'last': 'curie', 'location': 'paris', &#125;, &#125; for username, user_info in users.items(): print('\nUsername: ' + username) full_name = user_info['first'] + ' ' + user_info['last'] location = user_info['location'] print('\tFull name: ' + full_name.title()) print('\tLocation: ' + location.title()) Output:1234567Username: aesinstein Full name: Albert Einstein Location: PrincetonUsername: mcurie Full name: Marie Curie Location: Paris]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Develop</tag>
      </tags>
  </entry>
</search>
